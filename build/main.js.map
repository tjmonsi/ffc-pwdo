{"version":3,"sources":["webpack:///main.js","webpack:///webpack/bootstrap 561aaffc58d2b18210ec","webpack:///./app/node_modules/@polymer/polymer/lib/utils/boot.js","webpack:///./app/node_modules/@littleq/state-manager/index.js","webpack:///(webpack)/buildin/global.js","webpack:///./app/node_modules/@polymer/polymer/lib/utils/mixin.js","webpack:///./app/node_modules/global/window.js","webpack:///./app/node_modules/@polymer/polymer/lib/utils/async.js","webpack:///./app/node_modules/@polymer/polymer/lib/utils/resolve-url.js","webpack:///./app/node_modules/redux/es/index.js","webpack:///./app/node_modules/@polymer/polymer/lib/utils/case-map.js","webpack:///./app/node_modules/@polymer/polymer/polymer-element.js","webpack:///./app/node_modules/@polymer/polymer/lib/utils/path.js","webpack:///./app/node_modules/@polymer/polymer/lib/utils/debounce.js","webpack:///./app/node_modules/@polymer/polymer/lib/utils/settings.js","webpack:///./app/node_modules/redux/es/createStore.js","webpack:///./app/node_modules/lodash-es/isPlainObject.js","webpack:///./app/node_modules/lodash-es/_Symbol.js","webpack:///./app/node_modules/redux/es/utils/warning.js","webpack:///./app/node_modules/redux/es/compose.js","webpack:///./app/node_modules/@littleq/littleq-router/lib/reducer.js","webpack:///./app/node_modules/path-to-regexp/index.js","webpack:///./app/node_modules/@littleq/location-mixin/index.js","webpack:///./app/node_modules/@littleq/query-params-mixin/index.js","webpack:///./app/node_modules/@polymer/polymer/lib/mixins/property-effects.js","webpack:///./app/shell/index.js","webpack:///./app/system/core/components/lazy-loader.js","webpack:///./app/system/core/fragments/index.js","webpack:///./app/node_modules/@polymer/polymer/lib/mixins/element-mixin.js","webpack:///./app/node_modules/@polymer/polymer/lib/utils/style-gather.js","webpack:///./app/node_modules/@polymer/polymer/lib/elements/dom-module.js","webpack:///./app/node_modules/@polymer/polymer/lib/mixins/property-accessors.js","webpack:///./app/node_modules/@polymer/polymer/lib/mixins/template-stamp.js","webpack:///./app/node_modules/@polymer/polymer/lib/utils/gestures.js","webpack:///./app/node_modules/lodash-es/_baseGetTag.js","webpack:///./app/node_modules/lodash-es/_root.js","webpack:///./app/node_modules/lodash-es/_freeGlobal.js","webpack:///./app/node_modules/lodash-es/_getRawTag.js","webpack:///./app/node_modules/lodash-es/_objectToString.js","webpack:///./app/node_modules/lodash-es/_getPrototype.js","webpack:///./app/node_modules/lodash-es/_overArg.js","webpack:///./app/node_modules/lodash-es/isObjectLike.js","webpack:///./app/node_modules/symbol-observable/index.js","webpack:///./app/node_modules/symbol-observable/lib/index.js","webpack:///(webpack)/buildin/module.js","webpack:///./app/node_modules/symbol-observable/lib/ponyfill.js","webpack:///./app/node_modules/redux/es/combineReducers.js","webpack:///./app/node_modules/redux/es/bindActionCreators.js","webpack:///./app/node_modules/redux/es/applyMiddleware.js","webpack:///./app/node_modules/@littleq/state-manager/mixins/polymer-redux.js","webpack:///./app/node_modules/@littleq/littleq-router/index.js","webpack:///./app/node_modules/@littleq/littleq-router/littleq-router.js","webpack:///./app/node_modules/@littleq/littleq-router/lib/get-animation-event.js","webpack:///./app/node_modules/@littleq/location-mixin/lib/reducer.js","webpack:///./app/node_modules/@littleq/location-mixin/lib/resolve-url.js","webpack:///./app/node_modules/@littleq/query-params-mixin/lib/reducer.js","webpack:///./app/node_modules/@littleq/littleq-router/littleq-route.js","webpack:///./app/node_modules/@littleq/littleq-router/lib/get-routes.js","webpack:///./app/node_modules/@polymer/polymer/lib/mixins/gesture-event-listeners.js","webpack:///./node_modules/css-loader/lib/css-base.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","parentJsonpFunction","window","chunkIds","moreModules","executeModules","chunkId","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","shift","11","e","onScriptComplete","script","onerror","onload","clearTimeout","timeout","chunk","Error","undefined","installedChunkData","Promise","resolve","promise","reject","head","document","getElementsByTagName","createElement","type","charset","async","nc","setAttribute","src","p","0","1","2","3","4","5","6","7","8","9","10","setTimeout","appendChild","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","n","__esModule","object","property","oe","err","console","error","s","JSCompiler_renameProperty","prop","obj","value","ReduxMixin","store","reducers","_redux","_polymerRedux","_polymerRedux2","default","initial","createStore","state","arguments","g","_typeof","Symbol","iterator","constructor","this","Function","eval","MixinFunction","dedupingMixin","dedupeId","__mixinApplications","__mixinSet","mixin","base","baseSet","mixinDedupeId","map","mixinApplications","extended","set","mixinSet","create","WeakMap","global","win","self","microtaskFlush","len","microtaskCallbacks","cb","splice","microtaskLastHandle","microTask","idlePeriod","animationFrame","timeOut","microtaskCurrHandle","microtaskNodeContent","microtaskNode","createTextNode","MutationObserver","observe","characterData","after","delay","run","fn","cancel","bind","requestAnimationFrame","cancelAnimationFrame","requestIdleCallback","handle","cancelIdleCallback","callback","textContent","idx","resolveUrl","url","baseURI","ABS_URL","test","workingURL","u","URL","pathname","href","location","resolveDoc","implementation","createHTMLDocument","anchor","body","resolveCss","cssText","replace","CSS_URL_RX","pre","post","pathFromUrl","substring","lastIndexOf","_interopRequireDefault","compose","applyMiddleware","bindActionCreators","combineReducers","_createStore","_createStore2","_combineReducers","_combineReducers2","_bindActionCreators","_bindActionCreators2","_applyMiddleware","_applyMiddleware2","_compose","_compose2","_warning","dashToCamelCase","dash","caseMap","indexOf","DASH_TO_CAMEL","toUpperCase","camelToDashCase","camel","CAMEL_TO_DASH","toLowerCase","Element","_elementMixin","ElementMixin","HTMLElement","isPath","path","root","dotIndex","slice","isAncestor","isDescendant","translate","newBase","matches","normalize","Array","isArray","parts","args","toString","split","j","join","info","last","isDeep","_classCallCheck","instance","Constructor","TypeError","Debouncer","_createClass","defineProperties","target","props","descriptor","writable","key","protoProps","staticProps","_asyncModule","_callback","_timer","asyncModule","_this","isActive","debouncer","setConfig","setSanitizeDOMValue","sanitizeDOMValue","setRootPath","rootPath","Settings","useNativeCustomElements","useNativeCSSProperties","useShadow","_resolveUrl","settings","ShadyDOM","Boolean","ShadyCSS","nativeCss","customElements","polyfillWrapFlushCallback","newSanitizeDOMValue","reducer","preloadedState","enhancer","ensureCanMutateNextListeners","nextListeners","currentListeners","getState","currentState","subscribe","listener","isSubscribed","index","dispatch","action","_isPlainObject2","isDispatching","currentReducer","listeners","replaceReducer","nextReducer","ActionTypes","INIT","observable","_ref","outerSubscribe","observer","observeState","next","unsubscribe","_ref2","_isPlainObject","_symbolObservable","_symbolObservable2","isPlainObject","_isObjectLike2","_baseGetTag2","objectTag","proto","_getPrototype2","Ctor","funcToString","objectCtorString","_baseGetTag","_getPrototype","_isObjectLike","funcProto","objectProto","_root","_root2","warning","message","_len","funcs","_key","arg","reduce","a","b","apply","ROUTER_ACTION","_stateManager","PARAMS","ROUTE","router","assign","params","route","parse","str","options","res","tokens","defaultDelimiter","delimiter","DEFAULT_DELIMITER","delimiters","DEFAULT_DELIMITERS","pathEscaped","PATH_REGEXP","exec","escaped","offset","prev","capture","group","modifier","k","partial","repeat","optional","pattern","prefix","escapeGroup","escapeString","substr","compile","tokensToFunction","RegExp","data","encode","encodeURIComponent","token","segment","String","flags","sensitive","regexpToRegexp","keys","groups","source","match","arrayToRegexp","pathToRegexp","stringToRegexp","tokensToRegExp","strict","end","endsWith","concat","isEndDelimited","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","_get","receiver","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","_reducer","_resolveUrl2","_ReduxMixin","_class","_boundHashChanged","_hashChanged","_boundUrlChanged","_urlChanged","_boundGlobalOnClick","_globalOnClick","statePath","query","urlSpaceRegex","hash","dwellTime","Number","_urlSpaceRegExp","computed","_lastChangedAt","_initialized","addEventListener","performance","now","removeEventListener","LOCATION_ACTION","HASH","decodeURIComponent","_dontUpdateUrl","PATH","QUERY","search","_updateUrl","partiallyEncodedPath","encodeURI","partiallyEncodedQuery","partiallyEncodedHash","newUrl","_getUrl","fullNewUrl","protocol","host","shouldReplace","history","replaceState","pushState","dispatchEvent","CustomEvent","event","defaultPrevented","_getSameOriginLinkHref","preventDefault","button","metaKey","ctrlKey","eventPath","composedPath","element","tagName","ga","top","origin","normalizedHref","paramsObject","_dontReact","paramsString","QUERYPARAMS_ACTION","UPDATE","_decodeParams","_encodeParams","encodedParams","paramString","paramList","param","ensureOwnEffectMap","model","effects","protoFx","instFx","runEffects","inst","oldProps","hasPaths","extraArgs","ran","id","runEffectsForProperty","rootProperty","_path","fxs","fx","lastRun","pathMatchesTrigger","trigger","triggerPath","structured","wildcard","runObserverEffect","methodName","changedProp","__data","dynamicFn","warn","runNotifyEffects","notifyProps","TYPES","NOTIFY","notified","notifyPath","__dataHost","_invalidateProperties","dispatchNotifyEvent","_caseMap","eventName","detail","queueProperty","runNotifyEffect","handleNotification","fromProp","toPath","negate","fromPath","READ_ONLY","_setPendingPropertyOrPath","runReflectEffect","_settings","attrName","_propertyToAttribute","runComputedEffects","changedProps","computeEffects","COMPUTE","inputProps","__dataOld","__dataPending","runComputedEffect","result","runMethodEffect","computedProp","methodInfo","__dataHasAccessor","_setPendingProperty","computeLinkedPaths","links","__dataLinkedPaths","link","addBinding","templateInfo","nodeInfo","kind","literal","bindings","binding","isCompound","shouldAddListener","_binding$parts$","listenerEvent","CaseMap","listenerNegate","nodeInfoList","part","compoundIndex","addEffectForBindingPart","dependencies","evaluator","parseArg","_addTemplatePropertyEffect","runBindingEffect","nodeList","node","_enqueueClient","applyBindingValue","_evaluateBinding","computeBindingValue","_valueToNodeAttribute","_setUnmanagedPropertyToNode","storage","__dataCompoundStorage","localName","mode","setupBindings","setupCompoundStorage","addNotifyListener","literals","createMethodEffect","sig","effectFn","static","_addPropertyEffect","context","_methodHost","marshalArgs","literalFromParts","parseMethod","expression","emptyArray","trim","parseArgs","argList","rawArg","fc","values","v","baseChanged","notifySplices","array","splices","splicesPath","indexSplices","notifySplice","addedCount","removed","upper","PropertyEffects","_mixin","newObj","_propertyAccessors","_templateStamp","REFLECT","PROPAGATE","OBSERVE","PropertyEffectsType","bindingRegex","OPEN_BRACKET","hostStack","propertyEffectsBase","TemplateStamp","PropertyAccessors","_propertyEffectsBase","__dataClientsReady","__dataPendingClients","__dataToNotify","__dataHasPaths","__dataTemp","__dataClientsInitialized","__computeEffects","__reflectEffects","__notifyEffects","__propagateEffects","__observeEffects","__readOnly","__dataCounter","__templateInfo","registerHost","readOnly","effect","_createPropertyAccessor","_hasPropertyEffect","shouldNotify","isPathNotification","old","prevProps","_shouldPropertyChange","__dataReady","_flushProperties","client","__enableOrFlushClients","_readyClients","clients","__dataEnabled","_enableProperties","setReadOnly","_flushClients","currentProps","_propagatePropertyChanges","propertyEffects","nextTemplateInfo","to","from","items","ret","hadLength","pop","start","deleteCount","Math","floor","_len2","_key2","_len3","_key3","unshift","propPath","protectedSetter","_setProperty","attr","template","instanceBinding","_parseTemplate","wasPreBound","__templateInfoLast","previousTemplateInfo","beginHosting","dom","endHosting","_bindTemplate","nodes","childNodes","firstChild","nextSibling","parentNode","removeChild","_createPropertyObserver","_createMethodObserver","_createNotifyingProperty","_createReadOnlyProperty","_createReflectedProperty","_createComputedProperty","hostProps","noted","nodeType","Node","TEXT_NODE","_parseBindings","origName","removeAttribute","text","lastIndex","customEvent","notifyEvent","colon","signature","dynamicFns","stack","stackLen","Typekit","load","log","_fragments","_fragments2","_window","LazyLoader","_HTMLElement","is","define","page-home","then","page-speakers","page-schedule","page-sessions","page-sponsor","page-tickets","page-about","page-faq","page-convince","page-not-authorized","page-not-found","_regLog","register","registrations","dumpRegistrations","forEach","updateStyles","instanceCount","caseMap$0","_styleGather","_domModule","_propertyEffects","ownPropertiesForClass","klass","__ownProperties","properties","ownObserversForClass","__ownObservers","observers","flattenProperties","flattenedProps","propertiesForClass","__classProperties","superCtor","PolymerElement","propertyDefaultsForClass","__classPropertyDefaults","hasClassFinalized","finalizeClassAndSuper","finalize","finalizeClass","__finalized","finalizeProperties","finalizeObservers","t","innerHTML","cloneNode","_template","createPropertyFromConfig","allProps","_hasReadOnlyEffect","reflectToAttribute","_hasReflectEffect","notify","_hasNotifyEffect","finalizeTemplate","ext","cssFromModuleImports","cssFromTemplate","style","content","insertBefore","prepareTemplate","polymerElementBase","_polymerElementBase","_importPath","importPath","$","list","__observedAttributes","DomModule","import","assetpath","__polymerFinalized","p$","_hasAccessor","styleElement","_stampTemplate","_attachDom","attachShadow","shadowRoot","_attributeToProperty","styleSubtree","styleDocument","importModule","PolymerDomModule","cssFromModules","moduleIds","cssFromModule","_cssText","_cssFromModuleImports","querySelector","e$","querySelectorAll","include","getAttribute","INCLUDE_ATTR","MODULE_STYLE_LINK_SELECTOR","importDoc","container","findModule","lcModules","styleOutsideTemplateCheck","__assetpath","owner","HTMLImports","importForElement","ownerDocument","selector","saveAccessorValue","nativeProperties","__dataProto","_async","microtask","getOwnPropertyNames","_superClass","__serializing","__dataInvalid","__dataInstanceProps","_initializeProperties","a$","observedAttributes","_initializeProtoProperties","attribute","hasAttribute","_deserializeValue","_serializeValue","Date","JSON","stringify","x","outValue","changed","_this2","_initializeInstanceProperties","ready","_propertiesChanged","wrapTemplateExtension","templateExtensions","replaceChild","attributes","findTemplateNode","parentInfo","parentIndex","applyIdToMap","applyEventListener","events","_addMethodEventListenerToNode","applyTemplateContent","_templateInfo","createNodeEventHandler","dom-if","dom-repeat","HTMLTemplateElement","decorate","importNode","__noInsertionPoint","hasInsertionPoint","handler","_addEventListenerToNode","outerTemplateInfo","stripWhiteSpace","_parseTemplateContent","_parseTemplateNode","_parseTemplateNestedTemplate","_parseTemplateChildNodes","hasAttributes","_parseTemplateNodeAttributes","childInfo","infoIndex","createDocumentFragment","attrs","_parseTemplateNodeAttribute","setupTeardownMouseCanceller","setup","en","IS_TOUCH_ONLY","MOUSE_EVENTS","mouseCanceller","ignoreMouse","POINTERSTATE","mouse","mouseIgnoreJob","unset","_debounce","debounce","MOUSE_TIMEOUT","hasLeftMouseButton","ev","buttons","MouseEvent","MOUSE_HAS_BUTTONS","MOUSE_WHICH_TO_BUTTONS","which","isSyntheticClick","_findOriginalTarget","ELEMENT_NODE","bcr","getBoundingClientRect","pageX","y","pageY","left","right","bottom","firstTouchAction","ta","TOUCH_ACTION","trackDocument","stateObj","movefn","upfn","untrackDocument","deepTargetFind","elementFromPoint","oldNext","_handleNative","handled","currentTarget","gobj","GESTURE_KEY","gs","HANDLED_OBJ","changedTouches","touches","touch","identifier","HAS_NATIVE_TA","_handleTouchAction","skip","r","recognizers","flow","reset","clientX","clientY","scrollDecided","prevent","dx","abs","dy","cancelable","addListener","evType","gestures","_add","removeListener","_remove","recognizer","deps","dep","gd","_count","touchAction","setTouchAction","recog","emits","_findRecognizerByEvent","evName","_fire","Event","bubbles","composed","preventer","sourceEvent","resetMouseCanceller","flush","remove","add","findOriginalTarget","SUPPORTS_PASSIVE","opts","navigator","userAgent","GestureRecognizer","mousedown","mousemove","mouseup","touchstart","touchmove","touchend","click","mouseEvent","sc","sourceCapabilities","firesTouchEvents","stopPropagation","passive","_fire2","_prevent2","started","moves","addMove","move","hasMovedEnough","ct","secondlast","lastmove","ddx","ddy","hover","NaN","save","forward","isNaN","baseGetTag","undefinedTag","nullTag","symToStringTag","_getRawTag2","_objectToString2","_Symbol2","_Symbol3","_getRawTag","_objectToString","toStringTag","_freeGlobal","_freeGlobal2","freeSelf","freeGlobal","getRawTag","isOwn","tag","unmasked","nativeObjectToString","objectToString","_overArg","_overArg2","getPrototype","overArg","func","transform","isObjectLike","_ponyfill","_ponyfill2","webpackPolyfill","deprecate","paths","children","symbolObservablePonyfill","_Symbol","getUndefinedStateErrorMessage","actionType","assertReducerShape","random","reducerKeys","finalReducers","finalReducerKeys","shapeAssertionError","hasChanged","nextState","_i","previousStateForKey","nextStateForKey","errorMessage","bindActionCreator","actionCreator","actionCreators","boundActionCreators","middlewares","_dispatch","chain","middlewareAPI","middleware","_extends","_toConsumableArray","arr","arr2","PolymerRedux","every","subscribers","Map","filter","update","propertiesChanged","unbind","off","collect","what","_parent","actions","_reduxActions","originalAction","_polymerElement","_getAnimationEvent","_getAnimationEvent2","_pathToRegexp","_pathToRegexp2","_locationMixin","_locationMixin2","_queryParamsMixin","_queryParamsMixin2","LittleqRouter","_setKeyframeStyles","_getLazyLoader","defaultRedirect","currentRoute","lazy","_lazyLoader","_debouncer","oldPage","transition","_timeOut","contains","_checkMiddlewares","_this3","_removePageAfterTransition","animation","classList","_removePageListenerFallback","child","_addMiddleware","_getMiddleware","_lazyLoadMiddleware","_getMiddlewares","_this4","catch","alert","page","redirect","_loadPage","_loadRedirect","_loadDefaultRedirect","all","_processMiddlewares","_showPage","_lazyLoadPage","_this5","el","animations","OAnimation","MozAnimation","WebkitAnimation","urlDoc","urlBase","_getRoutes","_getRoutes2","LittleqRoute","_removePage","_processPage","re","_routeMatches","_checkIfRouteMatches","getRoutes","GestureEventListeners","_gestures","gestures$0","cssWithMappingToString","item","useSourceMap","cssMapping","btoa","sourceMapping","toComment","sources","sourceRoot","sourceMap","unescape","mediaQuery","alreadyImportedModules"],"mappings":"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","file":"main.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// install a JSONP callback for chunk loading\n/******/ \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n/******/ \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules, executeModules) {\n/******/ \t\t// add \"moreModules\" to the modules object,\n/******/ \t\t// then flag all \"chunkIds\" as loaded and fire callback\n/******/ \t\tvar moduleId, chunkId, i = 0, resolves = [], result;\n/******/ \t\tfor(;i < chunkIds.length; i++) {\n/******/ \t\t\tchunkId = chunkIds[i];\n/******/ \t\t\tif(installedChunks[chunkId]) {\n/******/ \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n/******/ \t\t\t}\n/******/ \t\t\tinstalledChunks[chunkId] = 0;\n/******/ \t\t}\n/******/ \t\tfor(moduleId in moreModules) {\n/******/ \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n/******/ \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n/******/ \t\t\t}\n/******/ \t\t}\n/******/ \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules, executeModules);\n/******/ \t\twhile(resolves.length) {\n/******/ \t\t\tresolves.shift()();\n/******/ \t\t}\n/******/\n/******/ \t};\n/******/\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// objects to store loaded and loading chunks\n/******/ \tvar installedChunks = {\n/******/ \t\t11: 0\n/******/ \t};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/ \t// This file contains only the entry chunk.\n/******/ \t// The chunk loading function for additional chunks\n/******/ \t__webpack_require__.e = function requireEnsure(chunkId) {\n/******/ \t\tvar installedChunkData = installedChunks[chunkId];\n/******/ \t\tif(installedChunkData === 0) {\n/******/ \t\t\treturn new Promise(function(resolve) { resolve(); });\n/******/ \t\t}\n/******/\n/******/ \t\t// a Promise means \"currently loading\".\n/******/ \t\tif(installedChunkData) {\n/******/ \t\t\treturn installedChunkData[2];\n/******/ \t\t}\n/******/\n/******/ \t\t// setup Promise in chunk cache\n/******/ \t\tvar promise = new Promise(function(resolve, reject) {\n/******/ \t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n/******/ \t\t});\n/******/ \t\tinstalledChunkData[2] = promise;\n/******/\n/******/ \t\t// start chunk loading\n/******/ \t\tvar head = document.getElementsByTagName('head')[0];\n/******/ \t\tvar script = document.createElement('script');\n/******/ \t\tscript.type = 'text/javascript';\n/******/ \t\tscript.charset = 'utf-8';\n/******/ \t\tscript.async = true;\n/******/ \t\tscript.timeout = 120000;\n/******/\n/******/ \t\tif (__webpack_require__.nc) {\n/******/ \t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n/******/ \t\t}\n/******/ \t\tscript.src = __webpack_require__.p + \"\" + ({\"0\":\"page-speakers\",\"1\":\"page-faq\",\"2\":\"page-tickets\",\"3\":\"page-sessions\",\"4\":\"page-sponsor\",\"5\":\"page-convince\",\"6\":\"page-about\",\"7\":\"page-schedule\",\"8\":\"page-not-found\",\"9\":\"page-home\",\"10\":\"page-not-authorized\"}[chunkId]||chunkId) + \".fragment.\" + chunkId + \".js\";\n/******/ \t\tvar timeout = setTimeout(onScriptComplete, 120000);\n/******/ \t\tscript.onerror = script.onload = onScriptComplete;\n/******/ \t\tfunction onScriptComplete() {\n/******/ \t\t\t// avoid mem leaks in IE.\n/******/ \t\t\tscript.onerror = script.onload = null;\n/******/ \t\t\tclearTimeout(timeout);\n/******/ \t\t\tvar chunk = installedChunks[chunkId];\n/******/ \t\t\tif(chunk !== 0) {\n/******/ \t\t\t\tif(chunk) {\n/******/ \t\t\t\t\tchunk[1](new Error('Loading chunk ' + chunkId + ' failed.'));\n/******/ \t\t\t\t}\n/******/ \t\t\t\tinstalledChunks[chunkId] = undefined;\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t\thead.appendChild(script);\n/******/\n/******/ \t\treturn promise;\n/******/ \t};\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// on error function for async loading\n/******/ \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 32);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nwindow.JSCompiler_renameProperty = function (prop, obj) {\n  return prop;\n};\n\n/** @namespace */\nvar Polymer = void 0;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ReduxMixin = exports.store = exports.reducers = undefined;\n\nvar _redux = __webpack_require__(10);\n\nvar _polymerRedux = __webpack_require__(56);\n\nvar _polymerRedux2 = _interopRequireDefault(_polymerRedux);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar reducers = {};\nvar initial = {};\nvar store = (0, _redux.createStore)(function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  var action = arguments[1];\n  return state;\n});\nvar ReduxMixin = (0, _polymerRedux2.default)(store);\n\nexports.reducers = reducers;\nexports.store = store;\nexports.ReduxMixin = ReduxMixin;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar g;\n\n// This works in non-strict mode\ng = function () {\n\treturn this;\n}();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif ((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n/***/ }),\n/* 3 */,\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dedupingMixin = undefined;\n\n__webpack_require__(0);\n\n// unique global id for deduping mixins.\nvar dedupeId = 0;\n\n/**\n * @constructor\n * @extends {Function}\n */\nfunction MixinFunction() {}\n/** @type {(WeakMap | undefined)} */\nMixinFunction.prototype.__mixinApplications;\n/** @type {(Object | undefined)} */\nMixinFunction.prototype.__mixinSet;\n\nvar dedupingMixin = exports.dedupingMixin = function dedupingMixin(mixin) {\n  var mixinApplications = /** @type {!MixinFunction} */mixin.__mixinApplications;\n  if (!mixinApplications) {\n    mixinApplications = new WeakMap();\n    /** @type {!MixinFunction} */mixin.__mixinApplications = mixinApplications;\n  }\n  // maintain a unique id for each mixin\n  var mixinDedupeId = dedupeId++;\n  function dedupingMixin(base) {\n    var baseSet = /** @type {!MixinFunction} */base.__mixinSet;\n    if (baseSet && baseSet[mixinDedupeId]) {\n      return base;\n    }\n    var map = mixinApplications;\n    var extended = map.get(base);\n    if (!extended) {\n      extended = /** @type {!Function} */mixin(base);\n      map.set(base, extended);\n    }\n    // copy inherited mixin set from the extended class, or the base class\n    // NOTE: we avoid use of Set here because some browser (IE11)\n    // cannot extend a base Set via the constructor.\n    var mixinSet = Object.create( /** @type {!MixinFunction} */extended.__mixinSet || baseSet || null);\n    mixinSet[mixinDedupeId] = true;\n    /** @type {!MixinFunction} */extended.__mixinSet = mixinSet;\n    return extended;\n  }\n\n  return dedupingMixin;\n};\n\n/***/ }),\n/* 5 */,\n/* 6 */,\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\nvar win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\") {\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.microTask = exports.idlePeriod = exports.animationFrame = exports.timeOut = undefined;\n\n__webpack_require__(0);\n\n/** @typedef {{run: function(function(), number=):number, cancel: function(number)}} */\nvar AsyncInterface = void 0; // eslint-disable-line no-unused-vars\n\n// Microtask implemented using Mutation Observer\nvar microtaskCurrHandle = 0;\nvar microtaskLastHandle = 0;\nvar microtaskCallbacks = [];\nvar microtaskNodeContent = 0;\nvar microtaskNode = document.createTextNode('');\nnew window.MutationObserver(microtaskFlush).observe(microtaskNode, { characterData: true });\n\nfunction microtaskFlush() {\n  var len = microtaskCallbacks.length;\n  for (var i = 0; i < len; i++) {\n    var cb = microtaskCallbacks[i];\n    if (cb) {\n      try {\n        cb();\n      } catch (e) {\n        setTimeout(function () {\n          throw e;\n        });\n      }\n    }\n  }\n  microtaskCallbacks.splice(0, len);\n  microtaskLastHandle += len;\n}\n\nvar timeOut = exports.timeOut = {\n  /**\n   * Returns a sub-module with the async interface providing the provided\n   * delay.\n   *\n   * @memberof Polymer.Async.timeOut\n   * @param {number} delay Time to wait before calling callbacks in ms\n   * @return {AsyncInterface} An async timeout interface\n   */\n  after: function after(delay) {\n    return {\n      run: function run(fn) {\n        return setTimeout(fn, delay);\n      },\n\n      cancel: window.clearTimeout.bind(window)\n    };\n  },\n\n  /**\n   * Enqueues a function called in the next task.\n   *\n   * @memberof Polymer.Async.timeOut\n   * @param {Function} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run: window.setTimeout.bind(window),\n  /**\n   * Cancels a previously enqueued `timeOut` callback.\n   *\n   * @memberof Polymer.Async.timeOut\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   */\n  cancel: window.clearTimeout.bind(window)\n};\n\nvar animationFrame = exports.animationFrame = {\n  /**\n   * Enqueues a function called at `requestAnimationFrame` timing.\n   *\n   * @memberof Polymer.Async.animationFrame\n   * @param {Function} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run: window.requestAnimationFrame.bind(window),\n  /**\n   * Cancels a previously enqueued `animationFrame` callback.\n   *\n   * @memberof Polymer.Async.timeOut\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   */\n  cancel: window.cancelAnimationFrame.bind(window)\n};\n\nvar idlePeriod = exports.idlePeriod = {\n  /**\n   * Enqueues a function called at `requestIdleCallback` timing.\n   *\n   * @memberof Polymer.Async.idlePeriod\n   * @param {function(IdleDeadline)} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run: function run(fn) {\n    return window.requestIdleCallback ? window.requestIdleCallback(fn) : window.setTimeout(fn, 16);\n  },\n\n  /**\n   * Cancels a previously enqueued `idlePeriod` callback.\n   *\n   * @memberof Polymer.Async.idlePeriod\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   */\n  cancel: function cancel(handle) {\n    window.cancelIdleCallback ? window.cancelIdleCallback(handle) : window.clearTimeout(handle);\n  }\n};\n\nvar microTask = exports.microTask = {\n\n  /**\n   * Enqueues a function called at microtask timing.\n   *\n   * @memberof Polymer.Async.microTask\n   * @param {Function} callback Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run: function run(callback) {\n    microtaskNode.textContent = microtaskNodeContent++;\n    microtaskCallbacks.push(callback);\n    return microtaskCurrHandle++;\n  },\n\n\n  /**\n   * Cancels a previously enqueued `microTask` callback.\n   *\n   * @memberof Polymer.Async.microTask\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   */\n  cancel: function cancel(handle) {\n    var idx = handle - microtaskLastHandle;\n    if (idx >= 0) {\n      if (!microtaskCallbacks[idx]) {\n        throw new Error('invalid async handle: ' + handle);\n      }\n      microtaskCallbacks[idx] = null;\n    }\n  }\n};\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pathFromUrl = exports.resolveUrl = exports.resolveCss = undefined;\n\n__webpack_require__(0);\n\nvar CSS_URL_RX = /(url\\()([^)]*)(\\))/g;\nvar ABS_URL = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\nvar workingURL = void 0;\nvar resolveDoc = void 0;\n/**\n * Resolves the given URL against the provided `baseUri'.\n *\n * @memberof Polymer.ResolveUrl\n * @param {string} url Input URL to resolve\n * @param {?string=} baseURI Base URI to resolve the URL against\n * @return {string} resolved URL\n */\nfunction resolveUrl(url, baseURI) {\n  if (url && ABS_URL.test(url)) {\n    return url;\n  }\n  // Lazy feature detection.\n  if (workingURL === undefined) {\n    workingURL = false;\n    try {\n      var u = new URL('b', 'http://a');\n      u.pathname = 'c%20d';\n      workingURL = u.href === 'http://a/c%20d';\n    } catch (e) {\n      // silently fail\n    }\n  }\n  if (!baseURI) {\n    baseURI = document.baseURI || window.location.href;\n  }\n  if (workingURL) {\n    return new URL(url, baseURI).href;\n  }\n  // Fallback to creating an anchor into a disconnected document.\n  if (!resolveDoc) {\n    resolveDoc = document.implementation.createHTMLDocument('temp');\n    resolveDoc.base = resolveDoc.createElement('base');\n    resolveDoc.head.appendChild(resolveDoc.base);\n    resolveDoc.anchor = resolveDoc.createElement('a');\n    resolveDoc.body.appendChild(resolveDoc.anchor);\n  }\n  resolveDoc.base.href = baseURI;\n  resolveDoc.anchor.href = url;\n  return resolveDoc.anchor.href || url;\n}\n\n/**\n * Resolves any relative URL's in the given CSS text against the provided\n * `ownerDocument`'s `baseURI`.\n *\n * @memberof Polymer.ResolveUrl\n * @param {string} cssText CSS text to process\n * @param {string} baseURI Base URI to resolve the URL against\n * @return {string} Processed CSS text with resolved URL's\n */\nfunction resolveCss(cssText, baseURI) {\n  return cssText.replace(CSS_URL_RX, function (m, pre, url, post) {\n    return pre + '\\'' + resolveUrl(url.replace(/[\"']/g, ''), baseURI) + '\\'' + post;\n  });\n}\n\n/**\n * Returns a path from a given `url`. The path includes the trailing\n * `/` from the url.\n *\n * @memberof Polymer.ResolveUrl\n * @param {string} url Input URL to transform\n * @return {string} resolved path\n */\nfunction pathFromUrl(url) {\n  return url.substring(0, url.lastIndexOf('/') + 1);\n}\n\nexports.resolveCss = resolveCss;\nexports.resolveUrl = resolveUrl;\nexports.pathFromUrl = pathFromUrl;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;\n\nvar _createStore = __webpack_require__(19);\n\nvar _createStore2 = _interopRequireDefault(_createStore);\n\nvar _combineReducers = __webpack_require__(53);\n\nvar _combineReducers2 = _interopRequireDefault(_combineReducers);\n\nvar _bindActionCreators = __webpack_require__(54);\n\nvar _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);\n\nvar _applyMiddleware = __webpack_require__(55);\n\nvar _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);\n\nvar _compose = __webpack_require__(23);\n\nvar _compose2 = _interopRequireDefault(_compose);\n\nvar _warning = __webpack_require__(22);\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n* This is a dummy function to check if the function name has been altered by minification.\n* If the function has been minified and NODE_ENV !== 'production', warn the user.\n*/\nfunction isCrushed() {}\n\nif (false) {\n  (0, _warning2.default)('You are currently using minified code outside of NODE_ENV === \\'production\\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexports.createStore = _createStore2.default;\nexports.combineReducers = _combineReducers2.default;\nexports.bindActionCreators = _bindActionCreators2.default;\nexports.applyMiddleware = _applyMiddleware2.default;\nexports.compose = _compose2.default;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dashToCamelCase = dashToCamelCase;\nexports.camelToDashCase = camelToDashCase;\n\n__webpack_require__(0);\n\nvar caseMap = {};\nvar DASH_TO_CAMEL = /-[a-z]/g;\nvar CAMEL_TO_DASH = /([A-Z])/g;\n\nfunction dashToCamelCase(dash) {\n  return caseMap[dash] || (caseMap[dash] = dash.indexOf('-') < 0 ? dash : dash.replace(DASH_TO_CAMEL, function (m) {\n    return m[1].toUpperCase();\n  }));\n}\n\nfunction camelToDashCase(camel) {\n  return caseMap[camel] || (caseMap[camel] = camel.replace(CAMEL_TO_DASH, '-$1').toLowerCase());\n}\n\n/***/ }),\n/* 12 */,\n/* 13 */,\n/* 14 */,\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Element = undefined;\n\nvar _elementMixin = __webpack_require__(35);\n\n/**\n * Base class that provides the core API for Polymer's meta-programming\n * features including template stamping, data-binding, attribute deserialization,\n * and property change observation.\n *\n * @customElement\n * @polymer\n * @memberof Polymer\n * @constructor\n * @implements {Polymer_ElementMixin}\n * @extends HTMLElement\n * @appliesMixin Polymer.ElementMixin\n * @summary Custom element base class that provides the core API for Polymer's\n *   key meta-programming features including template stamping, data-binding,\n *   attribute deserialization, and property change observation\n */\nvar Element = (0, _elementMixin.ElementMixin)(HTMLElement);\nexports.Element = Element;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isDeep = undefined;\nexports.isPath = isPath;\nexports.root = root;\nexports.isAncestor = isAncestor;\nexports.isDescendant = isDescendant;\nexports.translate = translate;\nexports.matches = matches;\nexports.normalize = normalize;\nexports.split = split;\nexports.get = get;\nexports.set = set;\n\n__webpack_require__(0);\n\nfunction isPath(path) {\n  return path.indexOf('.') >= 0;\n}\n\nfunction root(path) {\n  var dotIndex = path.indexOf('.');\n  if (dotIndex === -1) {\n    return path;\n  }\n  return path.slice(0, dotIndex);\n}\n\nfunction isAncestor(base, path) {\n  //     base.startsWith(path + '.');\n  return base.indexOf(path + '.') === 0;\n}\n\nfunction isDescendant(base, path) {\n  //     path.startsWith(base + '.');\n  return path.indexOf(base + '.') === 0;\n}\n\nfunction translate(base, newBase, path) {\n  return newBase + path.slice(base.length);\n}\n\nfunction matches(base, path) {\n  return base === path || isAncestor(base, path) || isDescendant(base, path);\n}\n\nfunction normalize(path) {\n  if (Array.isArray(path)) {\n    var parts = [];\n    for (var i = 0; i < path.length; i++) {\n      var args = path[i].toString().split('.');\n      for (var j = 0; j < args.length; j++) {\n        parts.push(args[j]);\n      }\n    }\n    return parts.join('.');\n  } else {\n    return path;\n  }\n}\n\nfunction split(path) {\n  if (Array.isArray(path)) {\n    return normalize(path).split('.');\n  }\n  return path.toString().split('.');\n}\n\nfunction get(root, path, info) {\n  var prop = root;\n  var parts = split(path);\n  // Loop over path parts[0..n-1] and dereference\n  for (var i = 0; i < parts.length; i++) {\n    if (!prop) {\n      return;\n    }\n    var part = parts[i];\n    prop = prop[part];\n  }\n  if (info) {\n    info.path = parts.join('.');\n  }\n  return prop;\n}\n\nfunction set(root, path, value) {\n  var prop = root;\n  var parts = split(path);\n  var last = parts[parts.length - 1];\n  if (parts.length > 1) {\n    // Loop over path parts[0..n-2] and dereference\n    for (var i = 0; i < parts.length - 1; i++) {\n      var part = parts[i];\n      prop = prop[part];\n      if (!prop) {\n        return;\n      }\n    }\n    // Set value to object at end of path\n    prop[last] = value;\n  } else {\n    // Simple property set\n    prop[path] = value;\n  }\n  return parts.join('.');\n}\n\nvar isDeep = exports.isDeep = isPath;\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Debouncer = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n__webpack_require__(0);\n\n__webpack_require__(4);\n\n__webpack_require__(8);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/** @typedef {{run: function(function(), number=):number, cancel: function(number)}} */\nvar AsyncModule = void 0; // eslint-disable-line no-unused-vars\n\n/**\n * @summary Collapse multiple callbacks into one invocation after a timer.\n * @memberof Polymer\n */\n\nvar Debouncer = function () {\n  function Debouncer() {\n    _classCallCheck(this, Debouncer);\n\n    this._asyncModule = null;\n    this._callback = null;\n    this._timer = null;\n  }\n  /**\n   * Sets the scheduler; that is, a module with the Async interface,\n   * a callback and optional arguments to be passed to the run function\n   * from the async module.\n   *\n   * @param {!AsyncModule} asyncModule Object with Async interface.\n   * @param {function()} callback Callback to run.\n   */\n\n\n  _createClass(Debouncer, [{\n    key: 'setConfig',\n    value: function setConfig(asyncModule, callback) {\n      var _this = this;\n\n      this._asyncModule = asyncModule;\n      this._callback = callback;\n      this._timer = this._asyncModule.run(function () {\n        _this._timer = null;\n        _this._callback();\n      });\n    }\n    /**\n     * Cancels an active debouncer and returns a reference to itself.\n     */\n\n  }, {\n    key: 'cancel',\n    value: function cancel() {\n      if (this.isActive()) {\n        this._asyncModule.cancel(this._timer);\n        this._timer = null;\n      }\n    }\n    /**\n     * Flushes an active debouncer and returns a reference to itself.\n     */\n\n  }, {\n    key: 'flush',\n    value: function flush() {\n      if (this.isActive()) {\n        this.cancel();\n        this._callback();\n      }\n    }\n    /**\n     * Returns true if the debouncer is active.\n     *\n     * @return {boolean} True if active.\n     */\n\n  }, {\n    key: 'isActive',\n    value: function isActive() {\n      return this._timer != null;\n    }\n    /**\n     * Creates a debouncer if no debouncer is passed as a parameter\n     * or it cancels an active debouncer otherwise. The following\n     * example shows how a debouncer can be called multiple times within a\n     * microtask and \"debounced\" such that the provided callback function is\n     * called once. Add this method to a custom element:\n     *\n     * _debounceWork() {\n     *   this._debounceJob = Polymer.Debouncer.debounce(this._debounceJob,\n     *       Polymer.Async.microTask, () => {\n     *     this._doWork();\n     *   });\n     * }\n     *\n     * If the `_debounceWork` method is called multiple times within the same\n     * microtask, the `_doWork` function will be called only once at the next\n     * microtask checkpoint.\n     *\n     * Note: In testing it is often convenient to avoid asynchrony. To accomplish\n     * this with a debouncer, you can use `Polymer.enqueueDebouncer` and\n     * `Polymer.flush`. For example, extend the above example by adding\n     * `Polymer.enqueueDebouncer(this._debounceJob)` at the end of the\n     * `_debounceWork` method. Then in a test, call `Polymer.flush` to ensure\n     * the debouncer has completed.\n     *\n     * @param {Debouncer?} debouncer Debouncer object.\n     * @param {!AsyncModule} asyncModule Object with Async interface\n     * @param {function()} callback Callback to run.\n     * @return {!Debouncer} Returns a debouncer object.\n     */\n\n  }], [{\n    key: 'debounce',\n    value: function debounce(debouncer, asyncModule, callback) {\n      if (debouncer instanceof Debouncer) {\n        debouncer.cancel();\n      } else {\n        debouncer = new Debouncer();\n      }\n      debouncer.setConfig(asyncModule, callback);\n      return debouncer;\n    }\n  }]);\n\n  return Debouncer;\n}();\n\nexports.Debouncer = Debouncer;\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setSanitizeDOMValue = exports.sanitizeDOMValue = exports.setRootPath = exports.rootPath = exports.Settings = exports.useNativeCustomElements = exports.useNativeCSSProperties = exports.useShadow = undefined;\n\n__webpack_require__(0);\n\nvar _resolveUrl = __webpack_require__(9);\n\n/**\n * Legacy settings.\n * @namespace\n * @memberof Polymer\n */\nvar settings = undefined || {};\nvar useShadow = exports.useShadow = !window.ShadyDOM;\nvar useNativeCSSProperties = exports.useNativeCSSProperties = Boolean(!window.ShadyCSS || window.ShadyCSS.nativeCss);\nvar useNativeCustomElements = exports.useNativeCustomElements = !window.customElements.polyfillWrapFlushCallback;\nexports.Settings = settings;\n\n/**\n * Globally settable property that is automatically assigned to\n * `Polymer.ElementMixin` instances, useful for binding in templates to\n * make URL's relative to an application's root.  Defaults to the main\n * document URL, but can be overridden by users.  It may be useful to set\n * `Polymer.rootPath` to provide a stable application mount path when\n * using client side routing.\n *\n * @memberof Polymer\n */\n\nvar rootPath = undefined || (0, _resolveUrl.pathFromUrl)(document.baseURI || window.location.href);\n\nexports.rootPath = rootPath;\nvar setRootPath = exports.setRootPath = function setRootPath(path) {\n  exports.rootPath = rootPath = path;\n};\n\n/**\n * A global callback used to sanitize any value before inserting it into the DOM. The callback signature is:\n *\n *     Polymer = {\n *       sanitizeDOMValue: function(value, name, type, node) { ... }\n *     }\n *\n * Where:\n *\n * `value` is the value to sanitize.\n * `name` is the name of an attribute or property (for example, href).\n * `type` indicates where the value is being inserted: one of property, attribute, or text.\n * `node` is the node where the value is being inserted.\n *\n * @type {(function(*,string,string,Node):*)|undefined}\n * @memberof Polymer\n */\nvar sanitizeDOMValue = undefined;\n\nexports.sanitizeDOMValue = sanitizeDOMValue;\nvar setSanitizeDOMValue = exports.setSanitizeDOMValue = function setSanitizeDOMValue(newSanitizeDOMValue) {\n  exports.sanitizeDOMValue = sanitizeDOMValue = newSanitizeDOMValue;\n};\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ActionTypes = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = createStore;\n\nvar _isPlainObject = __webpack_require__(20);\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _symbolObservable = __webpack_require__(49);\n\nvar _symbolObservable2 = _interopRequireDefault(_symbolObservable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar ActionTypes = exports.ActionTypes = {\n  INIT: '@@redux/INIT'\n\n  /**\n   * Creates a Redux store that holds the state tree.\n   * The only way to change the data in the store is to call `dispatch()` on it.\n   *\n   * There should only be a single store in your app. To specify how different\n   * parts of the state tree respond to actions, you may combine several reducers\n   * into a single reducer function by using `combineReducers`.\n   *\n   * @param {Function} reducer A function that returns the next state tree, given\n   * the current state tree and the action to handle.\n   *\n   * @param {any} [preloadedState] The initial state. You may optionally specify it\n   * to hydrate the state from the server in universal apps, or to restore a\n   * previously serialized user session.\n   * If you use `combineReducers` to produce the root reducer function, this must be\n   * an object with the same shape as `combineReducers` keys.\n   *\n   * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n   * to enhance the store with third-party capabilities such as middleware,\n   * time travel, persistence, etc. The only store enhancer that ships with Redux\n   * is `applyMiddleware()`.\n   *\n   * @returns {Store} A Redux store that lets you read the state, dispatch actions\n   * and subscribe to changes.\n   */\n};function createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n  function getState() {\n    return currentState;\n  }\n\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected listener to be a function.');\n    }\n\n    var isSubscribed = true;\n\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      isSubscribed = false;\n\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n  function dispatch(action) {\n    if (!(0, _isPlainObject2.default)(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer;\n    dispatch({ type: ActionTypes.INIT });\n  }\n\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if ((typeof observer === 'undefined' ? 'undefined' : _typeof(observer)) !== 'object') {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return { unsubscribe: unsubscribe };\n      }\n    }, _ref[_symbolObservable2.default] = function () {\n      return this;\n    }, _ref;\n  }\n\n  // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n  dispatch({ type: ActionTypes.INIT });\n\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[_symbolObservable2.default] = observable, _ref2;\n}\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseGetTag = __webpack_require__(41);\n\nvar _baseGetTag2 = _interopRequireDefault(_baseGetTag);\n\nvar _getPrototype = __webpack_require__(46);\n\nvar _getPrototype2 = _interopRequireDefault(_getPrototype);\n\nvar _isObjectLike = __webpack_require__(48);\n\nvar _isObjectLike2 = _interopRequireDefault(_isObjectLike);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!(0, _isObjectLike2.default)(value) || (0, _baseGetTag2.default)(value) != objectTag) {\n    return false;\n  }\n  var proto = (0, _getPrototype2.default)(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;\n}\n\nexports.default = isPlainObject;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _root = __webpack_require__(42);\n\nvar _root2 = _interopRequireDefault(_root);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Built-in value references. */\nvar _Symbol = _root2.default.Symbol;\n\nexports.default = _Symbol;\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = warning;\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n    /* eslint-disable no-empty */\n  } catch (e) {}\n  /* eslint-enable no-empty */\n}\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = compose;\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\n\nfunction compose() {\n  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(undefined, arguments));\n    };\n  });\n}\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ROUTER_ACTION = undefined;\n\nvar _stateManager = __webpack_require__(1);\n\nvar _redux = __webpack_require__(10);\n\nvar ROUTER_ACTION = {\n  PARAMS: 'ROUTER_UPDATE_PARAMS',\n  ROUTE: 'ROUTER_UPDATE_ROUTE'\n};\n\n_stateManager.reducers.router = function () {\n  var router = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments[1];\n\n  switch (action.type) {\n    case ROUTER_ACTION.PARAMS:\n      return Object.assign({}, router, {\n        params: action.params\n      });\n    case ROUTER_ACTION.ROUTE:\n      return Object.assign({}, router, {\n        route: action.route\n      });\n    default:\n      return router;\n  }\n};\n\n_stateManager.store.replaceReducer((0, _redux.combineReducers)(_stateManager.reducers));\n\nexports.ROUTER_ACTION = ROUTER_ACTION;\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp;\nmodule.exports.parse = parse;\nmodule.exports.compile = compile;\nmodule.exports.tokensToFunction = tokensToFunction;\nmodule.exports.tokensToRegExp = tokensToRegExp;\n\n/**\n * Default configs.\n */\nvar DEFAULT_DELIMITER = '/';\nvar DEFAULT_DELIMITERS = './';\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n// Match escaped characters that would otherwise appear in future matches.\n// This allows the user to escape special characters that won't transform.\n'(\\\\\\\\.)',\n// Match Express-style parameters and un-named parameters with a prefix\n// and optional suffixes. Matches appear as:\n//\n// \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\"]\n// \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined]\n'(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?'].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse(str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || DEFAULT_DELIMITER;\n  var delimiters = options && options.delimiters || DEFAULT_DELIMITERS;\n  var pathEscaped = false;\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) !== null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      pathEscaped = true;\n      continue;\n    }\n\n    var prev = '';\n    var next = str[index];\n    var name = res[2];\n    var capture = res[3];\n    var group = res[4];\n    var modifier = res[5];\n\n    if (!pathEscaped && path.length) {\n      var k = path.length - 1;\n\n      if (delimiters.indexOf(path[k]) > -1) {\n        prev = path[k];\n        path = path.slice(0, k);\n      }\n    }\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n      pathEscaped = false;\n    }\n\n    var partial = prev !== '' && next !== undefined && next !== prev;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = prev || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prev,\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      pattern: pattern ? escapeGroup(pattern) : '[^' + escapeString(delimiter) + ']+?'\n    });\n  }\n\n  // Push any remaining characters.\n  if (path || index < str.length) {\n    tokens.push(path + str.substr(index));\n  }\n\n  return tokens;\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile(str, options) {\n  return tokensToFunction(parse(str, options));\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction(tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (_typeof(tokens[i]) === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (data, options) {\n    var path = '';\n    var encode = options && options.encode || encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n        continue;\n      }\n\n      var value = data ? data[token.name] : undefined;\n      var segment;\n\n      if (Array.isArray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but got array');\n        }\n\n        if (value.length === 0) {\n          if (token.optional) continue;\n\n          throw new TypeError('Expected \"' + token.name + '\" to not be empty');\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\"');\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue;\n      }\n\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        segment = encode(String(value));\n\n        if (!matches[i].test(segment)) {\n          throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but got \"' + segment + '\"');\n        }\n\n        path += token.prefix + segment;\n        continue;\n      }\n\n      if (token.optional) {\n        // Prepend partial segment prefixes.\n        if (token.partial) path += token.prefix;\n\n        continue;\n      }\n\n      throw new TypeError('Expected \"' + token.name + '\" to be ' + (token.repeat ? 'an array' : 'a string'));\n    }\n\n    return path;\n  };\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString(str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup(group) {\n  return group.replace(/([=!:$/()])/g, '\\\\$1');\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags(options) {\n  return options && options.sensitive ? '' : 'i';\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {Array=}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp(path, keys) {\n  if (!keys) return path;\n\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        pattern: null\n      });\n    }\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp(path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  return new RegExp('(?:' + parts.join('|') + ')', flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction stringToRegexp(path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options);\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}  tokens\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction tokensToRegExp(tokens, keys, options) {\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var delimiter = escapeString(options.delimiter || DEFAULT_DELIMITER);\n  var delimiters = options.delimiters || DEFAULT_DELIMITERS;\n  var endsWith = [].concat(options.endsWith || []).map(escapeString).concat('$').join('|');\n  var route = '';\n  var isEndDelimited = false;\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n      isEndDelimited = i === tokens.length - 1 && delimiters.indexOf(token[token.length - 1]) > -1;\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = token.repeat ? '(?:' + token.pattern + ')(?:' + prefix + '(?:' + token.pattern + '))*' : token.pattern;\n\n      if (keys) keys.push(token);\n\n      if (token.optional) {\n        if (token.partial) {\n          route += prefix + '(' + capture + ')?';\n        } else {\n          route += '(?:' + prefix + '(' + capture + '))?';\n        }\n      } else {\n        route += prefix + '(' + capture + ')';\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += '(?:' + delimiter + ')?';\n\n    route += endsWith === '$' ? '$' : '(?=' + endsWith + ')';\n  } else {\n    if (!strict) route += '(?:' + delimiter + '(?=' + endsWith + '))?';\n    if (!isEndDelimited) route += '(?=' + delimiter + '|' + endsWith + ')';\n  }\n\n  return new RegExp('^' + route, flags(options));\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {Array=}                keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp(path, keys, options) {\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, keys);\n  }\n\n  if (Array.isArray(path)) {\n    return arrayToRegexp( /** @type {!Array} */path, keys, options);\n  }\n\n  return stringToRegexp( /** @type {string} */path, keys, options);\n}\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _stateManager = __webpack_require__(1);\n\nvar _reducer = __webpack_require__(60);\n\nvar _resolveUrl = __webpack_require__(61);\n\nvar _resolveUrl2 = _interopRequireDefault(_resolveUrl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nexports.default = function (superClass) {\n  return function (_ReduxMixin) {\n    _inherits(_class, _ReduxMixin);\n\n    _createClass(_class, null, [{\n      key: 'properties',\n      get: function get() {\n        return {\n          // location-mixin\n          path: {\n            type: String,\n            observer: '_pathChanged',\n            statePath: 'location.path'\n          },\n\n          query: {\n            type: String,\n            observer: '_queryChanged',\n            statePath: 'location.query'\n          },\n\n          urlSpaceRegex: {\n            type: String\n          },\n\n          hash: {\n            type: String,\n            statePath: 'location.hash'\n          },\n\n          dwellTime: {\n            type: Number\n          },\n\n          _urlSpaceRegExp: {\n            type: String,\n            computed: '_makeRegExp(urlSpaceRegex)'\n          },\n\n          _lastChangedAt: {\n            type: String\n          },\n\n          _initialized: {\n            type: Boolean\n          }\n        };\n      }\n    }]);\n\n    function _class() {\n      _classCallCheck(this, _class);\n\n      var _this = _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).call(this));\n\n      _this._boundHashChanged = _this._hashChanged.bind(_this);\n      _this._boundUrlChanged = _this._urlChanged.bind(_this);\n      _this._boundGlobalOnClick = _this._globalOnClick.bind(_this);\n      return _this;\n    }\n\n    _createClass(_class, [{\n      key: 'connectedCallback',\n      value: function connectedCallback() {\n        if (_get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'disconnectedCallback', this)) {\n          _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'connectedCallback', this).call(this);\n        }\n        window.addEventListener('hashchange', this._boundHashChanged);\n        window.addEventListener('location-changed', this._boundUrlChanged);\n        window.addEventListener('popstate', this._boundUrlChanged);\n        document.body.addEventListener('click', this._boundGlobalOnClick, true);\n        this._lastChangedAt = window.performance.now() - (this.dwellTime - 200);\n        this._initialized = true;\n\n        // set initialize values\n        // this.path = window.decodeURIComponent(window.location.pathname);\n        // this.query = window.location.search.slice(1);\n        // this.hash = window.decodeURIComponent(window.location.hash.slice(1));\n        this.dwellTime = 2000;\n        this._initialized = false;\n        this._urlChanged();\n      }\n    }, {\n      key: 'disconnectedCallback',\n      value: function disconnectedCallback() {\n        if (_get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'disconnectedCallback', this)) {\n          _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'disconnectedCallback', this).call(this);\n        }\n        window.removeEventListener('hashchange', this._boundHashChanged);\n        window.removeEventListener('location-changed', this._boundUrlChanged);\n        window.removeEventListener('popstate', this._boundUrlChanged);\n        document.body.removeEventListener('click', this._boundGlobalOnClick);\n        this._initialized = false;\n      }\n    }, {\n      key: '_pathChanged',\n      value: function _pathChanged(path) {}\n    }, {\n      key: '_queryChanged',\n      value: function _queryChanged(query) {}\n    }, {\n      key: '_hashChanged',\n      value: function _hashChanged() {\n        this.dispatch({\n          type: _reducer.LOCATION_ACTION.HASH,\n          path: window.decodeURIComponent(window.location.hash.substring(1))\n        });\n        // this.hash = window.decodeURIComponent(window.location.hash.substring(1));\n      }\n    }, {\n      key: '_urlChanged',\n      value: function _urlChanged() {\n        // We want to extract all info out of the updated URL before we\n        // try to write anything back into it.\n        //\n        // i.e. without _dontUpdateUrl we'd overwrite the new path with the old\n        // one when we set this.hash. Likewise for query.\n        this._dontUpdateUrl = true;\n        this._hashChanged();\n\n        this.dispatch({\n          type: _reducer.LOCATION_ACTION.PATH,\n          path: window.decodeURIComponent(window.location.pathname)\n        });\n\n        this.dispatch({\n          type: _reducer.LOCATION_ACTION.QUERY,\n          query: window.location.search.substring(1)\n        });\n\n        // this.path =\n        // this.query =\n        this._dontUpdateUrl = false;\n        this._updateUrl();\n      }\n    }, {\n      key: '_getUrl',\n      value: function _getUrl() {\n        var partiallyEncodedPath = window.encodeURI(this.path).replace(/\\#/g, '%23').replace(/\\?/g, '%3F'); // eslint-disable-line no-useless-escape\n        var partiallyEncodedQuery = '';\n        if (this.query) {\n          partiallyEncodedQuery = '?' + this.query.replace(/\\#/g, '%23'); // eslint-disable-line no-useless-escape\n        }\n        var partiallyEncodedHash = '';\n        if (this.hash) {\n          partiallyEncodedHash = '#' + window.encodeURI(this.hash);\n        }\n        return partiallyEncodedPath + partiallyEncodedQuery + partiallyEncodedHash;\n      }\n    }, {\n      key: '_updateUrl',\n      value: function _updateUrl() {\n        if (this._dontUpdateUrl || !this._initialized) {\n          return;\n        }\n\n        if (this.path === window.decodeURIComponent(window.location.pathname) && this.query === window.location.search.substring(1) && this.hash === window.decodeURIComponent(window.location.hash.substring(1))) {\n          // Nothing to do, the current URL is a representation of our properties.\n          return;\n        }\n        var newUrl = this._getUrl();\n        // Need to use a full URL in case the containing page has a base URI.\n        var fullNewUrl = (0, _resolveUrl2.default)(newUrl, window.location.protocol + '//' + window.location.host).href;\n        var now = window.performance.now();\n        var shouldReplace = this._lastChangedAt + this.dwellTime > now;\n        this._lastChangedAt = now;\n        if (shouldReplace) {\n          window.history.replaceState({}, '', fullNewUrl);\n        } else {\n          window.history.pushState({}, '', fullNewUrl);\n        }\n        window.dispatchEvent(new window.CustomEvent('location-changed'));\n      }\n\n      /**\n       * A necessary evil so that links work as expected. Does its best to\n       * bail out early if possible.\n       *\n       * @param {MouseEvent} event .\n       */\n\n    }, {\n      key: '_globalOnClick',\n      value: function _globalOnClick(event) {\n        // If another event handler has stopped this event then there's nothing\n        // for us to do. This can happen e.g. when there are multiple\n        // iron-location elements in a page.\n        if (event.defaultPrevented) {\n          return;\n        }\n        var href = this._getSameOriginLinkHref(event);\n        if (!href) {\n          return;\n        }\n        event.preventDefault();\n        // If the navigation is to the current page we shouldn't add a history\n        // entry or fire a change event.\n        if (href === window.location.href) {\n          return;\n        }\n\n        window.history.pushState({}, '', href);\n        window.dispatchEvent(new window.CustomEvent('location-changed'));\n      }\n\n      /**\n       * Returns the absolute URL of the link (if any) that this click event\n       * is clicking on, if we can and should override the resulting full\n       * page navigation. Returns null otherwise.\n       *\n       * @param {MouseEvent} event .\n       * @return {string?} .\n       */\n\n    }, {\n      key: '_getSameOriginLinkHref',\n      value: function _getSameOriginLinkHref(event) {\n        // We only care about left-clicks.\n        if (event.button !== 0) {\n          return null;\n        }\n        // We don't want modified clicks, where the intent is to open the page\n        // in a new tab.\n        if (event.metaKey || event.ctrlKey) {\n          return null;\n        }\n        var eventPath = event.composedPath();\n        var anchor = null;\n        for (var i = 0; i < eventPath.length; i++) {\n          var element = eventPath[i];\n          if (element.tagName === 'A' && element.href) {\n            anchor = element;\n            break;\n          }\n        }\n        // If there's no link there's nothing to do.\n        if (!anchor) {\n          return null;\n        }\n        // Target blank is a new tab, don't intercept.\n        if (anchor.target === '_blank') {\n          // capture link click\n          if (anchor.href && window.ga) {\n            window.ga('send', 'event', 'Link', 'Click', anchor.href, 1);\n          }\n          return null;\n        }\n        // If the link is for an existing parent frame, don't intercept.\n        if ((anchor.target === '_top' || anchor.target === '_parent') && window.top !== window) {\n          return null;\n        }\n        var href = anchor.href;\n        // It only makes sense for us to intercept same-origin navigations.\n        // pushState/replaceState don't work with cross-origin links.\n        var url;\n        if (document.baseURI != null) {\n          url = (0, _resolveUrl2.default)(href, /** @type {string} */document.baseURI);\n        } else {\n          url = (0, _resolveUrl2.default)(href);\n        }\n        var origin;\n        // IE Polyfill\n        if (window.location.origin) {\n          origin = window.location.origin;\n        } else {\n          origin = window.location.protocol + '//' + window.location.host;\n        }\n        var urlOrigin;\n        if (url.origin) {\n          urlOrigin = url.origin;\n        } else {\n          urlOrigin = url.protocol + '//' + url.host;\n        }\n        if (urlOrigin !== origin) {\n          return null;\n        }\n        var normalizedHref = url.pathname + url.search + url.hash;\n        // pathname should start with '/', but may not if `new URL` is not supported\n        if (normalizedHref[0] !== '/') {\n          normalizedHref = '/' + normalizedHref;\n        }\n        // If we've been configured not to handle this url... don't handle it!\n        if (this._urlSpaceRegExp && !this._urlSpaceRegExp.test(normalizedHref)) {\n          return null;\n        }\n        // Need to use a full URL in case the containing page has a base URI.\n        var fullNormalizedHref = (0, _resolveUrl2.default)(normalizedHref, window.location.href).href;\n        return fullNormalizedHref;\n      }\n    }, {\n      key: '_makeRegExp',\n      value: function _makeRegExp(urlSpaceRegex) {\n        return RegExp(urlSpaceRegex);\n      }\n    }]);\n\n    return _class;\n  }((0, _stateManager.ReduxMixin)(superClass));\n};\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _stateManager = __webpack_require__(1);\n\nvar _reducer = __webpack_require__(62);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nexports.default = function (superClass) {\n  return function (_ReduxMixin) {\n    _inherits(_class, _ReduxMixin);\n\n    function _class() {\n      _classCallCheck(this, _class);\n\n      return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n    }\n\n    _createClass(_class, [{\n      key: 'connectedCallback',\n      value: function connectedCallback() {\n        if (_get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'connectedCallback', this)) {\n          _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'connectedCallback', this).call(this);\n        }\n\n        // initialize values\n        this.paramsObject = {};\n        this._dontReact = false;\n      }\n    }, {\n      key: '_queryChanged',\n      value: function _queryChanged(query) {\n        this.paramsString = query;\n      }\n    }, {\n      key: '_paramsStringChanged',\n      value: function _paramsStringChanged() {\n        this._dontReact = true;\n        this.dispatch({\n          type: _reducer.QUERYPARAMS_ACTION.UPDATE,\n          params: this._decodeParams(this.paramsString)\n        });\n\n        // this.paramsObject =\n        this._dontReact = false;\n      }\n    }, {\n      key: 'paramsObjectChanged',\n      value: function paramsObjectChanged() {\n        if (this._dontReact) {\n          return;\n        }\n        this.paramsString = this._encodeParams(this.paramsObject).replace(/%3F/g, '?').replace(/%2F/g, '/').replace(/'/g, '%27');\n      }\n    }, {\n      key: '_encodeParams',\n      value: function _encodeParams(params) {\n        var encodedParams = [];\n        for (var key in params) {\n          var value = params[key];\n          if (value === '') {\n            encodedParams.push(encodeURIComponent(key));\n          } else if (value) {\n            encodedParams.push(encodeURIComponent(key) + '=' + encodeURIComponent(value.toString()));\n          }\n        }\n        return encodedParams.join('&');\n      }\n    }, {\n      key: '_decodeParams',\n      value: function _decodeParams(paramString) {\n        var params = {};\n        // Work around a bug in decodeURIComponent where + is not\n        // converted to spaces:\n        paramString = (paramString || '').replace(/\\+/g, '%20');\n        var paramList = paramString.split('&');\n        for (var i = 0; i < paramList.length; i++) {\n          var param = paramList[i].split('=');\n          if (param[0]) {\n            params[decodeURIComponent(param[0])] = decodeURIComponent(param[1] || '');\n          }\n        }\n        return params;\n      }\n    }], [{\n      key: 'properties',\n      get: function get() {\n        return {\n          // query params 'paramsString', 'paramsObject', '_dontReact'\n          paramsString: {\n            type: String,\n            observer: '_paramsStringChanged'\n          },\n\n          paramsObject: {\n            type: Object,\n            statePath: 'query.params'\n          },\n\n          _dontReact: {\n            type: Boolean\n          }\n        };\n      }\n    }]);\n\n    return _class;\n  }((0, _stateManager.ReduxMixin)(superClass));\n};\n\n/***/ }),\n/* 28 */,\n/* 29 */,\n/* 30 */,\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PropertyEffects = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n__webpack_require__(0);\n\nvar _mixin = __webpack_require__(4);\n\nvar _path = __webpack_require__(16);\n\nvar _caseMap = __webpack_require__(11);\n\nvar caseMap = _interopRequireWildcard(_caseMap);\n\nvar _propertyAccessors = __webpack_require__(38);\n\nvar _templateStamp = __webpack_require__(39);\n\nvar _settings = __webpack_require__(18);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/** @const {Object} */\nvar CaseMap = caseMap;\n\n// Monotonically increasing unique ID used for de-duping effects triggered\n// from multiple properties in the same turn\nvar dedupeId = 0;\n\n/**\n * Property effect types; effects are stored on the prototype using these keys\n * @enum {string}\n */\nvar TYPES = {\n  COMPUTE: '__computeEffects',\n  REFLECT: '__reflectEffects',\n  NOTIFY: '__notifyEffects',\n  PROPAGATE: '__propagateEffects',\n  OBSERVE: '__observeEffects',\n  READ_ONLY: '__readOnly'\n};\n\n/**\n * @typedef {{\n * name: (string | undefined),\n * structured: (boolean | undefined),\n * wildcard: (boolean | undefined)\n * }}\n */\nvar DataTrigger = void 0; //eslint-disable-line no-unused-vars\n\n/**\n * @typedef {{\n * info: ?,\n * trigger: (!DataTrigger | undefined),\n * fn: (!Function | undefined)\n * }}\n */\nvar DataEffect = void 0; //eslint-disable-line no-unused-vars\n\nvar PropertyEffectsType = void 0; //eslint-disable-line no-unused-vars\n\n/**\n * Ensures that the model has an own-property map of effects for the given type.\n * The model may be a prototype or an instance.\n *\n * Property effects are stored as arrays of effects by property in a map,\n * by named type on the model. e.g.\n *\n *   __computeEffects: {\n *     foo: [ ... ],\n *     bar: [ ... ]\n *   }\n *\n * If the model does not yet have an effect map for the type, one is created\n * and returned.  If it does, but it is not an own property (i.e. the\n * prototype had effects), the the map is deeply cloned and the copy is\n * set on the model and returned, ready for new effects to be added.\n *\n * @param {Object} model Prototype or instance\n * @param {string} type Property effect type\n * @return {Object} The own-property map of effects for the given type\n * @private\n */\nfunction ensureOwnEffectMap(model, type) {\n  var effects = model[type];\n  if (!effects) {\n    effects = model[type] = {};\n  } else if (!model.hasOwnProperty(type)) {\n    effects = model[type] = Object.create(model[type]);\n    for (var p in effects) {\n      var protoFx = effects[p];\n      var instFx = effects[p] = Array(protoFx.length);\n      for (var i = 0; i < protoFx.length; i++) {\n        instFx[i] = protoFx[i];\n      }\n    }\n  }\n  return effects;\n}\n\n// -- effects ----------------------------------------------\n\n/**\n * Runs all effects of a given type for the given set of property changes\n * on an instance.\n *\n * @param {!PropertyEffectsType} inst The instance with effects to run\n * @param {Object} effects Object map of property-to-Array of effects\n * @param {Object} props Bag of current property changes\n * @param {Object=} oldProps Bag of previous values for changed properties\n * @param {boolean=} hasPaths True with `props` contains one or more paths\n * @param {*=} extraArgs Additional metadata to pass to effect function\n * @return {boolean} True if an effect ran for this property\n * @private\n */\nfunction runEffects(inst, effects, props, oldProps, hasPaths, extraArgs) {\n  if (effects) {\n    var ran = false;\n    var id = dedupeId++;\n    for (var prop in props) {\n      if (runEffectsForProperty(inst, effects, id, prop, props, oldProps, hasPaths, extraArgs)) {\n        ran = true;\n      }\n    }\n    return ran;\n  }\n  return false;\n}\n\n/**\n * Runs a list of effects for a given property.\n *\n * @param {!PropertyEffectsType} inst The instance with effects to run\n * @param {Object} effects Object map of property-to-Array of effects\n * @param {number} dedupeId Counter used for de-duping effects\n * @param {string} prop Name of changed property\n * @param {*} props Changed properties\n * @param {*} oldProps Old properties\n * @param {boolean=} hasPaths True with `props` contains one or more paths\n * @param {*=} extraArgs Additional metadata to pass to effect function\n * @return {boolean} True if an effect ran for this property\n * @private\n */\nfunction runEffectsForProperty(inst, effects, dedupeId, prop, props, oldProps, hasPaths, extraArgs) {\n  var ran = false;\n  var rootProperty = hasPaths ? (0, _path.root)(prop) : prop;\n  var fxs = effects[rootProperty];\n  if (fxs) {\n    for (var i = 0, l = fxs.length, fx; i < l && (fx = fxs[i]); i++) {\n      if ((!fx.info || fx.info.lastRun !== dedupeId) && (!hasPaths || pathMatchesTrigger(prop, fx.trigger))) {\n        if (fx.info) {\n          fx.info.lastRun = dedupeId;\n        }\n        fx.fn(inst, prop, props, oldProps, fx.info, hasPaths, extraArgs);\n        ran = true;\n      }\n    }\n  }\n  return ran;\n}\n\n/**\n * Determines whether a property/path that has changed matches the trigger\n * criteria for an effect.  A trigger is a descriptor with the following\n * structure, which matches the descriptors returned from `parseArg`.\n * e.g. for `foo.bar.*`:\n * ```\n * trigger: {\n *   name: 'a.b',\n *   structured: true,\n *   wildcard: true\n * }\n * ```\n * If no trigger is given, the path is deemed to match.\n *\n * @param {string} path Path or property that changed\n * @param {DataTrigger} trigger Descriptor\n * @return {boolean} Whether the path matched the trigger\n */\nfunction pathMatchesTrigger(path, trigger) {\n  if (trigger) {\n    var triggerPath = trigger.name;\n    return triggerPath == path || trigger.structured && (0, _path.isAncestor)(triggerPath, path) || trigger.wildcard && (0, _path.isDescendant)(triggerPath, path);\n  } else {\n    return true;\n  }\n}\n\n/**\n * Implements the \"observer\" effect.\n *\n * Calls the method with `info.methodName` on the instance, passing the\n * new and old values.\n *\n * @param {!PropertyEffectsType} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @private\n */\nfunction runObserverEffect(inst, property, props, oldProps, info) {\n  var fn = inst[info.methodName];\n  var changedProp = info.property;\n  if (fn) {\n    fn.call(inst, inst.__data[changedProp], oldProps[changedProp]);\n  } else if (!info.dynamicFn) {\n    console.warn('observer method `' + info.methodName + '` not defined');\n  }\n}\n\n/**\n * Runs \"notify\" effects for a set of changed properties.\n *\n * This method differs from the generic `runEffects` method in that it\n * will dispatch path notification events in the case that the property\n * changed was a path and the root property for that path didn't have a\n * \"notify\" effect.  This is to maintain 1.0 behavior that did not require\n * `notify: true` to ensure object sub-property notifications were\n * sent.\n *\n * @param {!PropertyEffectsType} inst The instance with effects to run\n * @param {Object} notifyProps Bag of properties to notify\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {boolean} hasPaths True with `props` contains one or more paths\n * @private\n */\nfunction runNotifyEffects(inst, notifyProps, props, oldProps, hasPaths) {\n  // Notify\n  var fxs = inst[TYPES.NOTIFY];\n  var notified = void 0;\n  var id = dedupeId++;\n  // Try normal notify effects; if none, fall back to try path notification\n  for (var prop in notifyProps) {\n    if (notifyProps[prop]) {\n      if (fxs && runEffectsForProperty(inst, fxs, id, prop, props, oldProps, hasPaths)) {\n        notified = true;\n      } else if (hasPaths && notifyPath(inst, prop, props)) {\n        notified = true;\n      }\n    }\n  }\n  // Flush host if we actually notified and host was batching\n  // And the host has already initialized clients; this prevents\n  // an issue with a host observing data changes before clients are ready.\n  var host = void 0;\n  if (notified && (host = inst.__dataHost) && host._invalidateProperties) {\n    host._invalidateProperties();\n  }\n}\n\n/**\n * Dispatches {property}-changed events with path information in the detail\n * object to indicate a sub-path of the property was changed.\n *\n * @param {!PropertyEffectsType} inst The element from which to fire the event\n * @param {string} path The path that was changed\n * @param {Object} props Bag of current property changes\n * @return {boolean} Returns true if the path was notified\n * @private\n */\nfunction notifyPath(inst, path, props) {\n  var rootProperty = (0, _path.root)(path);\n  if (rootProperty !== path) {\n    var eventName = (0, _caseMap.camelToDashCase)(rootProperty) + '-changed';\n    dispatchNotifyEvent(inst, eventName, props[path], path);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Dispatches {property}-changed events to indicate a property (or path)\n * changed.\n *\n * @param {!PropertyEffectsType} inst The element from which to fire the event\n * @param {string} eventName The name of the event to send ('{property}-changed')\n * @param {*} value The value of the changed property\n * @param {string | null | undefined} path If a sub-path of this property changed, the path\n *   that changed (optional).\n * @private\n * @suppress {invalidCasts}\n */\nfunction dispatchNotifyEvent(inst, eventName, value, path) {\n  var detail = {\n    value: value,\n    queueProperty: true\n  };\n  if (path) {\n    detail.path = path;\n  }\n  /** @type {!HTMLElement} */inst.dispatchEvent(new CustomEvent(eventName, { detail: detail }));\n}\n\n/**\n * Implements the \"notify\" effect.\n *\n * Dispatches a non-bubbling event named `info.eventName` on the instance\n * with a detail object containing the new `value`.\n *\n * @param {!PropertyEffectsType} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @param {boolean} hasPaths True with `props` contains one or more paths\n * @private\n */\nfunction runNotifyEffect(inst, property, props, oldProps, info, hasPaths) {\n  var rootProperty = hasPaths ? (0, _path.root)(property) : property;\n  var path = rootProperty != property ? property : null;\n  var value = path ? (0, _path.get)(inst, path) : inst.__data[property];\n  if (path && value === undefined) {\n    value = props[property]; // specifically for .splices\n  }\n  dispatchNotifyEvent(inst, info.eventName, value, path);\n}\n\n/**\n * Handler function for 2-way notification events. Receives context\n * information captured in the `addNotifyListener` closure from the\n * `__notifyListeners` metadata.\n *\n * Sets the value of the notified property to the host property or path.  If\n * the event contained path information, translate that path to the host\n * scope's name for that path first.\n *\n * @param {CustomEvent} event Notification event (e.g. '<property>-changed')\n * @param {!PropertyEffectsType} inst Host element instance handling the notification event\n * @param {string} fromProp Child element property that was bound\n * @param {string} toPath Host property/path that was bound\n * @param {boolean} negate Whether the binding was negated\n * @private\n */\nfunction handleNotification(event, inst, fromProp, toPath, negate) {\n  var value = void 0;\n  var detail = /** @type {Object} */event.detail;\n  var fromPath = detail && detail.path;\n  if (fromPath) {\n    toPath = (0, _path.translate)(fromProp, toPath, fromPath);\n    value = detail && detail.value;\n  } else {\n    value = event.target[fromProp];\n  }\n  value = negate ? !value : value;\n  if (!inst[TYPES.READ_ONLY] || !inst[TYPES.READ_ONLY][toPath]) {\n    if (inst._setPendingPropertyOrPath(toPath, value, true, Boolean(fromPath)) && (!detail || !detail.queueProperty)) {\n      inst._invalidateProperties();\n    }\n  }\n}\n\n/**\n * Implements the \"reflect\" effect.\n *\n * Sets the attribute named `info.attrName` to the given property value.\n *\n * @param {!PropertyEffectsType} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @private\n */\nfunction runReflectEffect(inst, property, props, oldProps, info) {\n  var value = inst.__data[property];\n  if (_settings.sanitizeDOMValue) {\n    value = (0, _settings.sanitizeDOMValue)(value, info.attrName, 'attribute', /** @type {Node} */inst);\n  }\n  inst._propertyToAttribute(property, info.attrName, value);\n}\n\n/**\n * Runs \"computed\" effects for a set of changed properties.\n *\n * This method differs from the generic `runEffects` method in that it\n * continues to run computed effects based on the output of each pass until\n * there are no more newly computed properties.  This ensures that all\n * properties that will be computed by the initial set of changes are\n * computed before other effects (binding propagation, observers, and notify)\n * run.\n *\n * @param {!PropertyEffectsType} inst The instance the effect will be run on\n * @param {!Object} changedProps Bag of changed properties\n * @param {!Object} oldProps Bag of previous values for changed properties\n * @param {boolean} hasPaths True with `props` contains one or more paths\n * @private\n */\nfunction runComputedEffects(inst, changedProps, oldProps, hasPaths) {\n  var computeEffects = inst[TYPES.COMPUTE];\n  if (computeEffects) {\n    var inputProps = changedProps;\n    while (runEffects(inst, computeEffects, inputProps, oldProps, hasPaths)) {\n      Object.assign(oldProps, inst.__dataOld);\n      Object.assign(changedProps, inst.__dataPending);\n      inputProps = inst.__dataPending;\n      inst.__dataPending = null;\n    }\n  }\n}\n\n/**\n * Implements the \"computed property\" effect by running the method with the\n * values of the arguments specified in the `info` object and setting the\n * return value to the computed property specified.\n *\n * @param {!PropertyEffectsType} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @private\n */\nfunction runComputedEffect(inst, property, props, oldProps, info) {\n  var result = runMethodEffect(inst, property, props, oldProps, info);\n  var computedProp = info.methodInfo;\n  if (inst.__dataHasAccessor && inst.__dataHasAccessor[computedProp]) {\n    inst._setPendingProperty(computedProp, result, true);\n  } else {\n    inst[computedProp] = result;\n  }\n}\n\n/**\n * Computes path changes based on path links set up using the `linkPaths`\n * API.\n *\n * @param {!PropertyEffectsType} inst The instance whose props are changing\n * @param {string | !Array<(string|number)>} path Path that has changed\n * @param {*} value Value of changed path\n * @private\n */\nfunction computeLinkedPaths(inst, path, value) {\n  var links = inst.__dataLinkedPaths;\n  if (links) {\n    var link = void 0;\n    for (var a in links) {\n      var b = links[a];\n      if ((0, _path.isDescendant)(a, path)) {\n        link = (0, _path.translate)(a, b, path);\n        inst._setPendingPropertyOrPath(link, value, true, true);\n      } else if ((0, _path.isDescendant)(b, path)) {\n        link = (0, _path.translate)(b, a, path);\n        inst._setPendingPropertyOrPath(link, value, true, true);\n      }\n    }\n  }\n}\n\n// -- bindings ----------------------------------------------\n\n/**\n * Adds binding metadata to the current `nodeInfo`, and binding effects\n * for all part dependencies to `templateInfo`.\n *\n * @param {Function} constructor Class that `_parseTemplate` is currently\n *   running on\n * @param {TemplateInfo} templateInfo Template metadata for current template\n * @param {NodeInfo} nodeInfo Node metadata for current template node\n * @param {string} kind Binding kind, either 'property', 'attribute', or 'text'\n * @param {string} target Target property name\n * @param {!Array<!BindingPart>} parts Array of binding part metadata\n * @param {string=} literal Literal text surrounding binding parts (specified\n *   only for 'property' bindings, since these must be initialized as part\n *   of boot-up)\n * @private\n */\nfunction addBinding(constructor, templateInfo, nodeInfo, kind, target, parts, literal) {\n  // Create binding metadata and add to nodeInfo\n  nodeInfo.bindings = nodeInfo.bindings || [];\n  var /** Binding */binding = { kind: kind, target: target, parts: parts, literal: literal, isCompound: parts.length !== 1 };\n  nodeInfo.bindings.push(binding);\n  // Add listener info to binding metadata\n  if (shouldAddListener(binding)) {\n    var _binding$parts$ = binding.parts[0],\n        event = _binding$parts$.event,\n        negate = _binding$parts$.negate;\n\n    binding.listenerEvent = event || CaseMap.camelToDashCase(target) + '-changed';\n    binding.listenerNegate = negate;\n  }\n  // Add \"propagate\" property effects to templateInfo\n  var index = templateInfo.nodeInfoList.length;\n  for (var i = 0; i < binding.parts.length; i++) {\n    var part = binding.parts[i];\n    part.compoundIndex = i;\n    addEffectForBindingPart(constructor, templateInfo, binding, part, index);\n  }\n}\n\n/**\n * Adds property effects to the given `templateInfo` for the given binding\n * part.\n *\n * @param {Function} constructor Class that `_parseTemplate` is currently\n *   running on\n * @param {TemplateInfo} templateInfo Template metadata for current template\n * @param {!Binding} binding Binding metadata\n * @param {!BindingPart} part Binding part metadata\n * @param {number} index Index into `nodeInfoList` for this node\n */\nfunction addEffectForBindingPart(constructor, templateInfo, binding, part, index) {\n  if (!part.literal) {\n    if (binding.kind === 'attribute' && binding.target[0] === '-') {\n      console.warn('Cannot set attribute ' + binding.target + ' because \"-\" is not a valid attribute starting character');\n    } else {\n      var dependencies = part.dependencies;\n      var info = { index: index, binding: binding, part: part, evaluator: constructor };\n      for (var j = 0; j < dependencies.length; j++) {\n        var trigger = dependencies[j];\n        if (typeof trigger == 'string') {\n          trigger = parseArg(trigger);\n          trigger.wildcard = true;\n        }\n        constructor._addTemplatePropertyEffect(templateInfo, trigger.rootProperty, {\n          fn: runBindingEffect,\n          info: info, trigger: trigger\n        });\n      }\n    }\n  }\n}\n\n/**\n * Implements the \"binding\" (property/path binding) effect.\n *\n * Note that binding syntax is overridable via `_parseBindings` and\n * `_evaluateBinding`.  This method will call `_evaluateBinding` for any\n * non-literal parts returned from `_parseBindings`.  However,\n * there is no support for _path_ bindings via custom binding parts,\n * as this is specific to Polymer's path binding syntax.\n *\n * @param {!PropertyEffectsType} inst The instance the effect will be run on\n * @param {string} path Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @param {boolean} hasPaths True with `props` contains one or more paths\n * @param {Array} nodeList List of nodes associated with `nodeInfoList` template\n *   metadata\n * @private\n */\nfunction runBindingEffect(inst, path, props, oldProps, info, hasPaths, nodeList) {\n  var node = nodeList[info.index];\n  var binding = info.binding;\n  var part = info.part;\n  // Subpath notification: transform path and set to client\n  // e.g.: foo=\"{{obj.sub}}\", path: 'obj.sub.prop', set 'foo.prop'=obj.sub.prop\n  if (hasPaths && part.source && path.length > part.source.length && binding.kind == 'property' && !binding.isCompound && node.__dataHasAccessor && node.__dataHasAccessor[binding.target]) {\n    var value = props[path];\n    path = (0, _path.translate)(part.source, binding.target, path);\n    if (node._setPendingPropertyOrPath(path, value, false, true)) {\n      inst._enqueueClient(node);\n    }\n  } else {\n    var _value = info.evaluator._evaluateBinding(inst, part, path, props, oldProps, hasPaths);\n    // Propagate value to child\n    applyBindingValue(inst, node, binding, part, _value);\n  }\n}\n\n/**\n * Sets the value for an \"binding\" (binding) effect to a node,\n * either as a property or attribute.\n *\n * @param {!PropertyEffectsType} inst The instance owning the binding effect\n * @param {Node} node Target node for binding\n * @param {!Binding} binding Binding metadata\n * @param {!BindingPart} part Binding part metadata\n * @param {*} value Value to set\n * @private\n */\nfunction applyBindingValue(inst, node, binding, part, value) {\n  value = computeBindingValue(node, value, binding, part);\n  if (_settings.sanitizeDOMValue) {\n    value = (0, _settings.sanitizeDOMValue)(value, binding.target, binding.kind, node);\n  }\n  if (binding.kind == 'attribute') {\n    // Attribute binding\n    inst._valueToNodeAttribute( /** @type {Element} */node, value, binding.target);\n  } else {\n    // Property binding\n    var prop = binding.target;\n    if (node.__dataHasAccessor && node.__dataHasAccessor[prop]) {\n      if (!node[TYPES.READ_ONLY] || !node[TYPES.READ_ONLY][prop]) {\n        if (node._setPendingProperty(prop, value)) {\n          inst._enqueueClient(node);\n        }\n      }\n    } else {\n      inst._setUnmanagedPropertyToNode(node, prop, value);\n    }\n  }\n}\n\n/**\n * Transforms an \"binding\" effect value based on compound & negation\n * effect metadata, as well as handling for special-case properties\n *\n * @param {Node} node Node the value will be set to\n * @param {*} value Value to set\n * @param {!Binding} binding Binding metadata\n * @param {!BindingPart} part Binding part metadata\n * @return {*} Transformed value to set\n * @private\n */\nfunction computeBindingValue(node, value, binding, part) {\n  if (binding.isCompound) {\n    var storage = node.__dataCompoundStorage[binding.target];\n    storage[part.compoundIndex] = value;\n    value = storage.join('');\n  }\n  if (binding.kind !== 'attribute') {\n    // Some browsers serialize `undefined` to `\"undefined\"`\n    if (binding.target === 'textContent' || node.localName == 'input' && binding.target == 'value') {\n      value = value == undefined ? '' : value;\n    }\n  }\n  return value;\n}\n\n/**\n * Returns true if a binding's metadata meets all the requirements to allow\n * 2-way binding, and therefore a `<property>-changed` event listener should be\n * added:\n * - used curly braces\n * - is a property (not attribute) binding\n * - is not a textContent binding\n * - is not compound\n *\n * @param {!Binding} binding Binding metadata\n * @return {boolean} True if 2-way listener should be added\n * @private\n */\nfunction shouldAddListener(binding) {\n  return Boolean(binding.target) && binding.kind != 'attribute' && binding.kind != 'text' && !binding.isCompound && binding.parts[0].mode === '{';\n}\n\n/**\n * Setup compound binding storage structures, notify listeners, and dataHost\n * references onto the bound nodeList.\n *\n * @param {!PropertyEffectsType} inst Instance that bas been previously bound\n * @param {TemplateInfo} templateInfo Template metadata\n * @private\n */\nfunction setupBindings(inst, templateInfo) {\n  // Setup compound storage, dataHost, and notify listeners\n  var nodeList = templateInfo.nodeList,\n      nodeInfoList = templateInfo.nodeInfoList;\n\n  if (nodeInfoList.length) {\n    for (var i = 0; i < nodeInfoList.length; i++) {\n      var info = nodeInfoList[i];\n      var node = nodeList[i];\n      var bindings = info.bindings;\n      if (bindings) {\n        for (var _i = 0; _i < bindings.length; _i++) {\n          var binding = bindings[_i];\n          setupCompoundStorage(node, binding);\n          addNotifyListener(node, inst, binding);\n        }\n      }\n      node.__dataHost = inst;\n    }\n  }\n}\n\n/**\n * Initializes `__dataCompoundStorage` local storage on a bound node with\n * initial literal data for compound bindings, and sets the joined\n * literal parts to the bound property.\n *\n * When changes to compound parts occur, they are first set into the compound\n * storage array for that property, and then the array is joined to result in\n * the final value set to the property/attribute.\n *\n * @param {Node} node Bound node to initialize\n * @param {Binding} binding Binding metadata\n * @private\n */\nfunction setupCompoundStorage(node, binding) {\n  if (binding.isCompound) {\n    // Create compound storage map\n    var storage = node.__dataCompoundStorage || (node.__dataCompoundStorage = {});\n    var parts = binding.parts;\n    // Copy literals from parts into storage for this binding\n    var literals = new Array(parts.length);\n    for (var j = 0; j < parts.length; j++) {\n      literals[j] = parts[j].literal;\n    }\n    var target = binding.target;\n    storage[target] = literals;\n    // Configure properties with their literal parts\n    if (binding.literal && binding.kind == 'property') {\n      node[target] = binding.literal;\n    }\n  }\n}\n\n/**\n * Adds a 2-way binding notification event listener to the node specified\n *\n * @param {Object} node Child element to add listener to\n * @param {!PropertyEffectsType} inst Host element instance to handle notification event\n * @param {Binding} binding Binding metadata\n * @private\n */\nfunction addNotifyListener(node, inst, binding) {\n  if (binding.listenerEvent) {\n    var part = binding.parts[0];\n    node.addEventListener(binding.listenerEvent, function (e) {\n      handleNotification(e, inst, binding.target, part.source, part.negate);\n    });\n  }\n}\n\n// -- for method-based effects (complexObserver & computed) --------------\n\n/**\n * Adds property effects for each argument in the method signature (and\n * optionally, for the method name if `dynamic` is true) that calls the\n * provided effect function.\n *\n * @param {Element | Object} model Prototype or instance\n * @param {!MethodSignature} sig Method signature metadata\n * @param {string} type Type of property effect to add\n * @param {Function} effectFn Function to run when arguments change\n * @param {*=} methodInfo Effect-specific information to be included in\n *   method effect metadata\n * @param {boolean|Object=} dynamicFn Boolean or object map indicating whether\n *   method names should be included as a dependency to the effect. Note,\n *   defaults to true if the signature is static (sig.static is true).\n * @private\n */\nfunction createMethodEffect(model, sig, type, effectFn, methodInfo, dynamicFn) {\n  dynamicFn = sig.static || dynamicFn && ((typeof dynamicFn === 'undefined' ? 'undefined' : _typeof(dynamicFn)) !== 'object' || dynamicFn[sig.methodName]);\n  var info = {\n    methodName: sig.methodName,\n    args: sig.args,\n    methodInfo: methodInfo,\n    dynamicFn: dynamicFn\n  };\n  for (var i = 0, arg; i < sig.args.length && (arg = sig.args[i]); i++) {\n    if (!arg.literal) {\n      model._addPropertyEffect(arg.rootProperty, type, {\n        fn: effectFn, info: info, trigger: arg\n      });\n    }\n  }\n  if (dynamicFn) {\n    model._addPropertyEffect(sig.methodName, type, {\n      fn: effectFn, info: info\n    });\n  }\n}\n\n/**\n * Calls a method with arguments marshaled from properties on the instance\n * based on the method signature contained in the effect metadata.\n *\n * Multi-property observers, computed properties, and inline computing\n * functions call this function to invoke the method, then use the return\n * value accordingly.\n *\n * @param {!PropertyEffectsType} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @return {*} Returns the return value from the method invocation\n * @private\n */\nfunction runMethodEffect(inst, property, props, oldProps, info) {\n  // Instances can optionally have a _methodHost which allows redirecting where\n  // to find methods. Currently used by `templatize`.\n  var context = inst._methodHost || inst;\n  var fn = context[info.methodName];\n  if (fn) {\n    var args = marshalArgs(inst.__data, info.args, property, props);\n    return fn.apply(context, args);\n  } else if (!info.dynamicFn) {\n    console.warn('method `' + info.methodName + '` not defined');\n  }\n}\n\nvar emptyArray = [];\n\n// Regular expressions used for binding\nvar IDENT = '(?:' + '[a-zA-Z_$][\\\\w.:$\\\\-*]*' + ')';\nvar NUMBER = '(?:' + '[-+]?[0-9]*\\\\.?[0-9]+(?:[eE][-+]?[0-9]+)?' + ')';\nvar SQUOTE_STRING = '(?:' + '\\'(?:[^\\'\\\\\\\\]|\\\\\\\\.)*\\'' + ')';\nvar DQUOTE_STRING = '(?:' + '\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\"' + ')';\nvar STRING = '(?:' + SQUOTE_STRING + '|' + DQUOTE_STRING + ')';\nvar ARGUMENT = '(?:(' + IDENT + '|' + NUMBER + '|' + STRING + ')\\\\s*' + ')';\nvar ARGUMENTS = '(?:' + ARGUMENT + '(?:,\\\\s*' + ARGUMENT + ')*' + ')';\nvar ARGUMENT_LIST = '(?:' + '\\\\(\\\\s*' + '(?:' + ARGUMENTS + '?' + ')' + '\\\\)\\\\s*' + ')';\nvar BINDING = '(' + IDENT + '\\\\s*' + ARGUMENT_LIST + '?' + ')'; // Group 3\nvar OPEN_BRACKET = '(\\\\[\\\\[|{{)' + '\\\\s*';\nvar CLOSE_BRACKET = '(?:]]|}})';\nvar NEGATE = '(?:(!)\\\\s*)?'; // Group 2\nvar EXPRESSION = OPEN_BRACKET + NEGATE + BINDING + CLOSE_BRACKET;\nvar bindingRegex = new RegExp(EXPRESSION, \"g\");\n\n/**\n * Create a string from binding parts of all the literal parts\n *\n * @param {!Array<BindingPart>} parts All parts to stringify\n * @return {string} String made from the literal parts\n */\nfunction literalFromParts(parts) {\n  var s = '';\n  for (var i = 0; i < parts.length; i++) {\n    var literal = parts[i].literal;\n    s += literal || '';\n  }\n  return s;\n}\n\n/**\n * Parses an expression string for a method signature, and returns a metadata\n * describing the method in terms of `methodName`, `static` (whether all the\n * arguments are literals), and an array of `args`\n *\n * @param {string} expression The expression to parse\n * @return {?MethodSignature} The method metadata object if a method expression was\n *   found, otherwise `undefined`\n * @private\n */\nfunction parseMethod(expression) {\n  // tries to match valid javascript property names\n  var m = expression.match(/([^\\s]+?)\\(([\\s\\S]*)\\)/);\n  if (m) {\n    var methodName = m[1];\n    var sig = { methodName: methodName, static: true, args: emptyArray };\n    if (m[2].trim()) {\n      // replace escaped commas with comma entity, split on un-escaped commas\n      var args = m[2].replace(/\\\\,/g, '&comma;').split(',');\n      return parseArgs(args, sig);\n    } else {\n      return sig;\n    }\n  }\n  return null;\n}\n\n/**\n * Parses an array of arguments and sets the `args` property of the supplied\n * signature metadata object. Sets the `static` property to false if any\n * argument is a non-literal.\n *\n * @param {!Array<string>} argList Array of argument names\n * @param {!MethodSignature} sig Method signature metadata object\n * @return {!MethodSignature} The updated signature metadata object\n * @private\n */\nfunction parseArgs(argList, sig) {\n  sig.args = argList.map(function (rawArg) {\n    var arg = parseArg(rawArg);\n    if (!arg.literal) {\n      sig.static = false;\n    }\n    return arg;\n  }, this);\n  return sig;\n}\n\n/**\n * Parses an individual argument, and returns an argument metadata object\n * with the following fields:\n *\n *   {\n *     value: 'prop',        // property/path or literal value\n *     literal: false,       // whether argument is a literal\n *     structured: false,    // whether the property is a path\n *     rootProperty: 'prop', // the root property of the path\n *     wildcard: false       // whether the argument was a wildcard '.*' path\n *   }\n *\n * @param {string} rawArg The string value of the argument\n * @return {!MethodArg} Argument metadata object\n * @private\n */\nfunction parseArg(rawArg) {\n  // clean up whitespace\n  var arg = rawArg.trim()\n  // replace comma entity with comma\n  .replace(/&comma;/g, ',')\n  // repair extra escape sequences; note only commas strictly need\n  // escaping, but we allow any other char to be escaped since its\n  // likely users will do this\n  .replace(/\\\\(.)/g, '\\$1');\n  // basic argument descriptor\n  var a = {\n    name: arg,\n    value: '',\n    literal: false\n  };\n  // detect literal value (must be String or Number)\n  var fc = arg[0];\n  if (fc === '-') {\n    fc = arg[1];\n  }\n  if (fc >= '0' && fc <= '9') {\n    fc = '#';\n  }\n  switch (fc) {\n    case \"'\":\n    case '\"':\n      a.value = arg.slice(1, -1);\n      a.literal = true;\n      break;\n    case '#':\n      a.value = Number(arg);\n      a.literal = true;\n      break;\n  }\n  // if not literal, look for structured path\n  if (!a.literal) {\n    a.rootProperty = (0, _path.root)(arg);\n    // detect structured path (has dots)\n    a.structured = (0, _path.isPath)(arg);\n    if (a.structured) {\n      a.wildcard = arg.slice(-2) == '.*';\n      if (a.wildcard) {\n        a.name = arg.slice(0, -2);\n      }\n    }\n  }\n  return a;\n}\n\n/**\n * Gather the argument values for a method specified in the provided array\n * of argument metadata.\n *\n * The `path` and `value` arguments are used to fill in wildcard descriptor\n * when the method is being called as a result of a path notification.\n *\n * @param {Object} data Instance data storage object to read properties from\n * @param {!Array<!MethodArg>} args Array of argument metadata\n * @param {string} path Property/path name that triggered the method effect\n * @param {Object} props Bag of current property changes\n * @return {Array<*>} Array of argument values\n * @private\n */\nfunction marshalArgs(data, args, path, props) {\n  var values = [];\n  for (var i = 0, l = args.length; i < l; i++) {\n    var arg = args[i];\n    var name = arg.name;\n    var v = void 0;\n    if (arg.literal) {\n      v = arg.value;\n    } else {\n      if (arg.structured) {\n        v = (0, _path.get)(data, name);\n        // when data is not stored e.g. `splices`\n        if (v === undefined) {\n          v = props[name];\n        }\n      } else {\n        v = data[name];\n      }\n    }\n    if (arg.wildcard) {\n      // Only send the actual path changed info if the change that\n      // caused the observer to run matched the wildcard\n      var baseChanged = name.indexOf(path + '.') === 0;\n      var matches = path.indexOf(name) === 0 && !baseChanged;\n      values[i] = {\n        path: matches ? path : name,\n        value: matches ? props[path] : v,\n        base: v\n      };\n    } else {\n      values[i] = v;\n    }\n  }\n  return values;\n}\n\n// data api\n\n/**\n * Sends array splice notifications (`.splices` and `.length`)\n *\n * Note: this implementation only accepts normalized paths\n *\n * @param {!PropertyEffectsType} inst Instance to send notifications to\n * @param {Array} array The array the mutations occurred on\n * @param {string} path The path to the array that was mutated\n * @param {Array} splices Array of splice records\n * @private\n */\nfunction _notifySplices(inst, array, path, splices) {\n  var splicesPath = path + '.splices';\n  inst.notifyPath(splicesPath, { indexSplices: splices });\n  inst.notifyPath(path + '.length', array.length);\n  // Null here to allow potentially large splice records to be GC'ed.\n  inst.__data[splicesPath] = { indexSplices: null };\n}\n\n/**\n * Creates a splice record and sends an array splice notification for\n * the described mutation\n *\n * Note: this implementation only accepts normalized paths\n *\n * @param {!PropertyEffectsType} inst Instance to send notifications to\n * @param {Array} array The array the mutations occurred on\n * @param {string} path The path to the array that was mutated\n * @param {number} index Index at which the array mutation occurred\n * @param {number} addedCount Number of added items\n * @param {Array} removed Array of removed items\n * @private\n */\nfunction notifySplice(inst, array, path, index, addedCount, removed) {\n  _notifySplices(inst, array, path, [{\n    index: index,\n    addedCount: addedCount,\n    removed: removed,\n    object: array,\n    type: 'splice'\n  }]);\n}\n\n/**\n * Returns an upper-cased version of the string.\n *\n * @param {string} name String to uppercase\n * @return {string} Uppercased string\n * @private\n */\nfunction upper(name) {\n  return name[0].toUpperCase() + name.substring(1);\n}\n\nvar PropertyEffects = exports.PropertyEffects = (0, _mixin.dedupingMixin)(function (superClass) {\n\n  /**\n   * @constructor\n   * @extends {superClass}\n   * @implements {Polymer_PropertyAccessors}\n   * @implements {Polymer_TemplateStamp}\n   * @unrestricted\n   */\n  var propertyEffectsBase = (0, _templateStamp.TemplateStamp)((0, _propertyAccessors.PropertyAccessors)(superClass));\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_PropertyEffects}\n   * @extends {propertyEffectsBase}\n   * @unrestricted\n   */\n\n  var PropertyEffects = function (_propertyEffectsBase) {\n    _inherits(PropertyEffects, _propertyEffectsBase);\n\n    function PropertyEffects() {\n      _classCallCheck(this, PropertyEffects);\n\n      /** @type {boolean} */\n      var _this = _possibleConstructorReturn(this, (PropertyEffects.__proto__ || Object.getPrototypeOf(PropertyEffects)).call(this));\n\n      _this.__dataClientsReady;\n      /** @type {Array} */\n      _this.__dataPendingClients;\n      /** @type {Object} */\n      _this.__dataToNotify;\n      /** @type {Object} */\n      _this.__dataLinkedPaths;\n      /** @type {boolean} */\n      _this.__dataHasPaths;\n      /** @type {Object} */\n      _this.__dataCompoundStorage;\n      /** @type {Polymer_PropertyEffects} */\n      _this.__dataHost;\n      /** @type {!Object} */\n      _this.__dataTemp;\n      /** @type {boolean} */\n      _this.__dataClientsInitialized;\n      /** @type {!Object} */\n      _this.__data;\n      /** @type {!Object} */\n      _this.__dataPending;\n      /** @type {!Object} */\n      _this.__dataOld;\n      /** @type {Object} */\n      _this.__computeEffects;\n      /** @type {Object} */\n      _this.__reflectEffects;\n      /** @type {Object} */\n      _this.__notifyEffects;\n      /** @type {Object} */\n      _this.__propagateEffects;\n      /** @type {Object} */\n      _this.__observeEffects;\n      /** @type {Object} */\n      _this.__readOnly;\n      /** @type {number} */\n      _this.__dataCounter;\n      /** @type {!TemplateInfo} */\n      _this.__templateInfo;\n      return _this;\n    }\n\n    _createClass(PropertyEffects, [{\n      key: '_initializeProperties',\n      value: function _initializeProperties() {\n        _get(PropertyEffects.prototype.__proto__ || Object.getPrototypeOf(PropertyEffects.prototype), '_initializeProperties', this).call(this);\n        hostStack.registerHost(this);\n        this.__dataClientsReady = false;\n        this.__dataPendingClients = null;\n        this.__dataToNotify = null;\n        this.__dataLinkedPaths = null;\n        this.__dataHasPaths = false;\n        // May be set on instance prior to upgrade\n        this.__dataCompoundStorage = this.__dataCompoundStorage || null;\n        this.__dataHost = this.__dataHost || null;\n        this.__dataTemp = {};\n        this.__dataClientsInitialized = false;\n      }\n\n      /**\n       * Overrides `Polymer.PropertyAccessors` implementation to provide a\n       * more efficient implementation of initializing properties from\n       * the prototype on the instance.\n       *\n       * @override\n       * @param {Object} props Properties to initialize on the prototype\n       */\n\n    }, {\n      key: '_initializeProtoProperties',\n      value: function _initializeProtoProperties(props) {\n        this.__data = Object.create(props);\n        this.__dataPending = Object.create(props);\n        this.__dataOld = {};\n      }\n\n      /**\n       * Overrides `Polymer.PropertyAccessors` implementation to avoid setting\n       * `_setProperty`'s `shouldNotify: true`.\n       *\n       * @override\n       * @param {Object} props Properties to initialize on the instance\n       */\n\n    }, {\n      key: '_initializeInstanceProperties',\n      value: function _initializeInstanceProperties(props) {\n        var readOnly = this[TYPES.READ_ONLY];\n        for (var prop in props) {\n          if (!readOnly || !readOnly[prop]) {\n            this.__dataPending = this.__dataPending || {};\n            this.__dataOld = this.__dataOld || {};\n            this.__data[prop] = this.__dataPending[prop] = props[prop];\n          }\n        }\n      }\n\n      // Prototype setup ----------------------------------------\n\n      /**\n       * Equivalent to static `addPropertyEffect` API but can be called on\n       * an instance to add effects at runtime.  See that method for\n       * full API docs.\n       *\n       * @param {string} property Property that should trigger the effect\n       * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES\n       * @param {Object=} effect Effect metadata object\n       * @protected\n       */\n\n    }, {\n      key: '_addPropertyEffect',\n      value: function _addPropertyEffect(property, type, effect) {\n        this._createPropertyAccessor(property, type == TYPES.READ_ONLY);\n        // effects are accumulated into arrays per property based on type\n        var effects = ensureOwnEffectMap(this, type)[property];\n        if (!effects) {\n          effects = this[type][property] = [];\n        }\n        effects.push(effect);\n      }\n\n      /**\n       * Removes the given property effect.\n       *\n       * @param {string} property Property the effect was associated with\n       * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES\n       * @param {Object=} effect Effect metadata object to remove\n       */\n\n    }, {\n      key: '_removePropertyEffect',\n      value: function _removePropertyEffect(property, type, effect) {\n        var effects = ensureOwnEffectMap(this, type)[property];\n        var idx = effects.indexOf(effect);\n        if (idx >= 0) {\n          effects.splice(idx, 1);\n        }\n      }\n\n      /**\n       * Returns whether the current prototype/instance has a property effect\n       * of a certain type.\n       *\n       * @param {string} property Property name\n       * @param {string=} type Effect type, from this.PROPERTY_EFFECT_TYPES\n       * @return {boolean} True if the prototype/instance has an effect of this type\n       * @protected\n       */\n\n    }, {\n      key: '_hasPropertyEffect',\n      value: function _hasPropertyEffect(property, type) {\n        var effects = this[type];\n        return Boolean(effects && effects[property]);\n      }\n\n      /**\n       * Returns whether the current prototype/instance has a \"read only\"\n       * accessor for the given property.\n       *\n       * @param {string} property Property name\n       * @return {boolean} True if the prototype/instance has an effect of this type\n       * @protected\n       */\n\n    }, {\n      key: '_hasReadOnlyEffect',\n      value: function _hasReadOnlyEffect(property) {\n        return this._hasPropertyEffect(property, TYPES.READ_ONLY);\n      }\n\n      /**\n       * Returns whether the current prototype/instance has a \"notify\"\n       * property effect for the given property.\n       *\n       * @param {string} property Property name\n       * @return {boolean} True if the prototype/instance has an effect of this type\n       * @protected\n       */\n\n    }, {\n      key: '_hasNotifyEffect',\n      value: function _hasNotifyEffect(property) {\n        return this._hasPropertyEffect(property, TYPES.NOTIFY);\n      }\n\n      /**\n       * Returns whether the current prototype/instance has a \"reflect to attribute\"\n       * property effect for the given property.\n       *\n       * @param {string} property Property name\n       * @return {boolean} True if the prototype/instance has an effect of this type\n       * @protected\n       */\n\n    }, {\n      key: '_hasReflectEffect',\n      value: function _hasReflectEffect(property) {\n        return this._hasPropertyEffect(property, TYPES.REFLECT);\n      }\n\n      /**\n       * Returns whether the current prototype/instance has a \"computed\"\n       * property effect for the given property.\n       *\n       * @param {string} property Property name\n       * @return {boolean} True if the prototype/instance has an effect of this type\n       * @protected\n       */\n\n    }, {\n      key: '_hasComputedEffect',\n      value: function _hasComputedEffect(property) {\n        return this._hasPropertyEffect(property, TYPES.COMPUTE);\n      }\n\n      // Runtime ----------------------------------------\n\n      /**\n       * Sets a pending property or path.  If the root property of the path in\n       * question had no accessor, the path is set, otherwise it is enqueued\n       * via `_setPendingProperty`.\n       *\n       * This function isolates relatively expensive functionality necessary\n       * for the public API (`set`, `setProperties`, `notifyPath`, and property\n       * change listeners via {{...}} bindings), such that it is only done\n       * when paths enter the system, and not at every propagation step.  It\n       * also sets a `__dataHasPaths` flag on the instance which is used to\n       * fast-path slower path-matching code in the property effects host paths.\n       *\n       * `path` can be a path string or array of path parts as accepted by the\n       * public API.\n       *\n       * @param {string | !Array<number|string>} path Path to set\n       * @param {*} value Value to set\n       * @param {boolean=} shouldNotify Set to true if this change should\n       *  cause a property notification event dispatch\n       * @param {boolean=} isPathNotification If the path being set is a path\n       *   notification of an already changed value, as opposed to a request\n       *   to set and notify the change.  In the latter `false` case, a dirty\n       *   check is performed and then the value is set to the path before\n       *   enqueuing the pending property change.\n       * @return {boolean} Returns true if the property/path was enqueued in\n       *   the pending changes bag.\n       * @protected\n       */\n\n    }, {\n      key: '_setPendingPropertyOrPath',\n      value: function _setPendingPropertyOrPath(path, value, shouldNotify, isPathNotification) {\n        if (isPathNotification || (0, _path.root)(Array.isArray(path) ? path[0] : path) !== path) {\n          // Dirty check changes being set to a path against the actual object,\n          // since this is the entry point for paths into the system; from here\n          // the only dirty checks are against the `__dataTemp` cache to prevent\n          // duplicate work in the same turn only. Note, if this was a notification\n          // of a change already set to a path (isPathNotification: true),\n          // we always let the change through and skip the `set` since it was\n          // already dirty checked at the point of entry and the underlying\n          // object has already been updated\n          if (!isPathNotification) {\n            var old = (0, _path.get)(this, path);\n            path = /** @type {string} */(0, _path.set)(this, path, value);\n            // Use property-accessor's simpler dirty check\n            if (!path || !_get(PropertyEffects.prototype.__proto__ || Object.getPrototypeOf(PropertyEffects.prototype), '_shouldPropertyChange', this).call(this, path, value, old)) {\n              return false;\n            }\n          }\n          this.__dataHasPaths = true;\n          if (this._setPendingProperty( /**@type{string}*/path, value, shouldNotify)) {\n            computeLinkedPaths(this, path, value);\n            return true;\n          }\n        } else {\n          if (this.__dataHasAccessor && this.__dataHasAccessor[path]) {\n            return this._setPendingProperty( /**@type{string}*/path, value, shouldNotify);\n          } else {\n            this[path] = value;\n          }\n        }\n        return false;\n      }\n\n      /**\n       * Applies a value to a non-Polymer element/node's property.\n       *\n       * The implementation makes a best-effort at binding interop:\n       * Some native element properties have side-effects when\n       * re-setting the same value (e.g. setting `<input>.value` resets the\n       * cursor position), so we do a dirty-check before setting the value.\n       * However, for better interop with non-Polymer custom elements that\n       * accept objects, we explicitly re-set object changes coming from the\n       * Polymer world (which may include deep object changes without the\n       * top reference changing), erring on the side of providing more\n       * information.\n       *\n       * Users may override this method to provide alternate approaches.\n       *\n       * @param {Node} node The node to set a property on\n       * @param {string} prop The property to set\n       * @param {*} value The value to set\n       * @protected\n       */\n\n    }, {\n      key: '_setUnmanagedPropertyToNode',\n      value: function _setUnmanagedPropertyToNode(node, prop, value) {\n        // It is a judgment call that resetting primitives is\n        // \"bad\" and resettings objects is also \"good\"; alternatively we could\n        // implement a whitelist of tag & property values that should never\n        // be reset (e.g. <input>.value && <select>.value)\n        if (value !== node[prop] || (typeof value === 'undefined' ? 'undefined' : _typeof(value)) == 'object') {\n          node[prop] = value;\n        }\n      }\n\n      /**\n       * Overrides the `PropertyAccessors` implementation to introduce special\n       * dirty check logic depending on the property & value being set:\n       *\n       * 1. Any value set to a path (e.g. 'obj.prop': 42 or 'obj.prop': {...})\n       *    Stored in `__dataTemp`, dirty checked against `__dataTemp`\n       * 2. Object set to simple property (e.g. 'prop': {...})\n       *    Stored in `__dataTemp` and `__data`, dirty checked against\n       *    `__dataTemp` by default implementation of `_shouldPropertyChange`\n       * 3. Primitive value set to simple property (e.g. 'prop': 42)\n       *    Stored in `__data`, dirty checked against `__data`\n       *\n       * The dirty-check is important to prevent cycles due to two-way\n       * notification, but paths and objects are only dirty checked against any\n       * previous value set during this turn via a \"temporary cache\" that is\n       * cleared when the last `_propertiesChaged` exits. This is so:\n       * a. any cached array paths (e.g. 'array.3.prop') may be invalidated\n       *    due to array mutations like shift/unshift/splice; this is fine\n       *    since path changes are dirty-checked at user entry points like `set`\n       * b. dirty-checking for objects only lasts one turn to allow the user\n       *    to mutate the object in-place and re-set it with the same identity\n       *    and have all sub-properties re-propagated in a subsequent turn.\n       *\n       * The temp cache is not necessarily sufficient to prevent invalid array\n       * paths, since a splice can happen during the same turn (with pathological\n       * user code); we could introduce a \"fixup\" for temporarily cached array\n       * paths if needed: https://github.com/Polymer/polymer/issues/4227\n       *\n       * @param {string} property Name of the property\n       * @param {*} value Value to set\n       * @param {boolean=} shouldNotify True if property should fire notification\n       *   event (applies only for `notify: true` properties)\n       * @return {boolean} Returns true if the property changed\n       * @override\n       */\n\n    }, {\n      key: '_setPendingProperty',\n      value: function _setPendingProperty(property, value, shouldNotify) {\n        var isPath = this.__dataHasPaths && (0, _path.isPath)(property);\n        var prevProps = isPath ? this.__dataTemp : this.__data;\n        if (this._shouldPropertyChange(property, value, prevProps[property])) {\n          if (!this.__dataPending) {\n            this.__dataPending = {};\n            this.__dataOld = {};\n          }\n          // Ensure old is captured from the last turn\n          if (!(property in this.__dataOld)) {\n            this.__dataOld[property] = this.__data[property];\n          }\n          // Paths are stored in temporary cache (cleared at end of turn),\n          // which is used for dirty-checking, all others stored in __data\n          if (isPath) {\n            this.__dataTemp[property] = value;\n          } else {\n            this.__data[property] = value;\n          }\n          // All changes go into pending property bag, passed to _propertiesChanged\n          this.__dataPending[property] = value;\n          // Track properties that should notify separately\n          if (isPath || this[TYPES.NOTIFY] && this[TYPES.NOTIFY][property]) {\n            this.__dataToNotify = this.__dataToNotify || {};\n            this.__dataToNotify[property] = shouldNotify;\n          }\n          return true;\n        }\n        return false;\n      }\n\n      /**\n       * Overrides base implementation to ensure all accessors set `shouldNotify`\n       * to true, for per-property notification tracking.\n       *\n       * @override\n       */\n\n    }, {\n      key: '_setProperty',\n      value: function _setProperty(property, value) {\n        if (this._setPendingProperty(property, value, true)) {\n          this._invalidateProperties();\n        }\n      }\n\n      /**\n       * Overrides `PropertyAccessor`'s default async queuing of\n       * `_propertiesChanged`: if `__dataReady` is false (has not yet been\n       * manually flushed), the function no-ops; otherwise flushes\n       * `_propertiesChanged` synchronously.\n       *\n       * @override\n       */\n\n    }, {\n      key: '_invalidateProperties',\n      value: function _invalidateProperties() {\n        if (this.__dataReady) {\n          this._flushProperties();\n        }\n      }\n\n      /**\n       * Enqueues the given client on a list of pending clients, whose\n       * pending property changes can later be flushed via a call to\n       * `_flushClients`.\n       *\n       * @param {Object} client PropertyEffects client to enqueue\n       * @protected\n       */\n\n    }, {\n      key: '_enqueueClient',\n      value: function _enqueueClient(client) {\n        this.__dataPendingClients = this.__dataPendingClients || [];\n        if (client !== this) {\n          this.__dataPendingClients.push(client);\n        }\n      }\n\n      /**\n       * Flushes any clients previously enqueued via `_enqueueClient`, causing\n       * their `_flushProperties` method to run.\n       *\n       * @protected\n       */\n\n    }, {\n      key: '_flushClients',\n      value: function _flushClients() {\n        if (!this.__dataClientsReady) {\n          this.__dataClientsReady = true;\n          this._readyClients();\n          // Override point where accessors are turned on; importantly,\n          // this is after clients have fully readied, providing a guarantee\n          // that any property effects occur only after all clients are ready.\n          this.__dataReady = true;\n        } else {\n          this.__enableOrFlushClients();\n        }\n      }\n\n      // NOTE: We ensure clients either enable or flush as appropriate. This\n      // handles two corner cases:\n      // (1) clients flush properly when connected/enabled before the host\n      // enables; e.g.\n      //   (a) Templatize stamps with no properties and does not flush and\n      //   (b) the instance is inserted into dom and\n      //   (c) then the instance flushes.\n      // (2) clients enable properly when not connected/enabled when the host\n      // flushes; e.g.\n      //   (a) a template is runtime stamped and not yet connected/enabled\n      //   (b) a host sets a property, causing stamped dom to flush\n      //   (c) the stamped dom enables.\n\n    }, {\n      key: '__enableOrFlushClients',\n      value: function __enableOrFlushClients() {\n        var clients = this.__dataPendingClients;\n        if (clients) {\n          this.__dataPendingClients = null;\n          for (var i = 0; i < clients.length; i++) {\n            var client = clients[i];\n            if (!client.__dataEnabled) {\n              client._enableProperties();\n            } else if (client.__dataPending) {\n              client._flushProperties();\n            }\n          }\n        }\n      }\n\n      /**\n       * Perform any initial setup on client dom. Called before the first\n       * `_flushProperties` call on client dom and before any element\n       * observers are called.\n       *\n       * @protected\n       */\n\n    }, {\n      key: '_readyClients',\n      value: function _readyClients() {\n        this.__enableOrFlushClients();\n      }\n\n      /**\n       * Sets a bag of property changes to this instance, and\n       * synchronously processes all effects of the properties as a batch.\n       *\n       * Property names must be simple properties, not paths.  Batched\n       * path propagation is not supported.\n       *\n       * @param {Object} props Bag of one or more key-value pairs whose key is\n       *   a property and value is the new value to set for that property.\n       * @param {boolean=} setReadOnly When true, any private values set in\n       *   `props` will be set. By default, `setProperties` will not set\n       *   `readOnly: true` root properties.\n       * @public\n       */\n\n    }, {\n      key: 'setProperties',\n      value: function setProperties(props, setReadOnly) {\n        for (var path in props) {\n          if (setReadOnly || !this[TYPES.READ_ONLY] || !this[TYPES.READ_ONLY][path]) {\n            //TODO(kschaaf): explicitly disallow paths in setProperty?\n            // wildcard observers currently only pass the first changed path\n            // in the `info` object, and you could do some odd things batching\n            // paths, e.g. {'foo.bar': {...}, 'foo': null}\n            this._setPendingPropertyOrPath(path, props[path], true);\n          }\n        }\n        this._invalidateProperties();\n      }\n\n      /**\n       * Overrides `PropertyAccessors` so that property accessor\n       * side effects are not enabled until after client dom is fully ready.\n       * Also calls `_flushClients` callback to ensure client dom is enabled\n       * that was not enabled as a result of flushing properties.\n       *\n       * @override\n       */\n\n    }, {\n      key: 'ready',\n      value: function ready() {\n        // It is important that `super.ready()` is not called here as it\n        // immediately turns on accessors. Instead, we wait until `readyClients`\n        // to enable accessors to provide a guarantee that clients are ready\n        // before processing any accessors side effects.\n        this._flushProperties();\n        // If no data was pending, `_flushProperties` will not `flushClients`\n        // so ensure this is done.\n        if (!this.__dataClientsReady) {\n          this._flushClients();\n        }\n        // Before ready, client notifications do not trigger _flushProperties.\n        // Therefore a flush is necessary here if data has been set.\n        if (this.__dataPending) {\n          this._flushProperties();\n        }\n      }\n\n      /**\n       * Implements `PropertyAccessors`'s properties changed callback.\n       *\n       * Runs each class of effects for the batch of changed properties in\n       * a specific order (compute, propagate, reflect, observe, notify).\n       *\n       * @override\n       */\n\n    }, {\n      key: '_propertiesChanged',\n      value: function _propertiesChanged(currentProps, changedProps, oldProps) {\n        // ----------------------------\n        // let c = Object.getOwnPropertyNames(changedProps || {});\n        // window.debug && console.group(this.localName + '#' + this.id + ': ' + c);\n        // if (window.debug) { debugger; }\n        // ----------------------------\n        var hasPaths = this.__dataHasPaths;\n        this.__dataHasPaths = false;\n        // Compute properties\n        runComputedEffects(this, changedProps, oldProps, hasPaths);\n        // Clear notify properties prior to possible reentry (propagate, observe),\n        // but after computing effects have a chance to add to them\n        var notifyProps = this.__dataToNotify;\n        this.__dataToNotify = null;\n        // Propagate properties to clients\n        this._propagatePropertyChanges(changedProps, oldProps, hasPaths);\n        // Flush clients\n        this._flushClients();\n        // Reflect properties\n        runEffects(this, this[TYPES.REFLECT], changedProps, oldProps, hasPaths);\n        // Observe properties\n        runEffects(this, this[TYPES.OBSERVE], changedProps, oldProps, hasPaths);\n        // Notify properties to host\n        if (notifyProps) {\n          runNotifyEffects(this, notifyProps, changedProps, oldProps, hasPaths);\n        }\n        // Clear temporary cache at end of turn\n        if (this.__dataCounter == 1) {\n          this.__dataTemp = {};\n        }\n        // ----------------------------\n        // window.debug && console.groupEnd(this.localName + '#' + this.id + ': ' + c);\n        // ----------------------------\n      }\n\n      /**\n       * Called to propagate any property changes to stamped template nodes\n       * managed by this element.\n       *\n       * @param {Object} changedProps Bag of changed properties\n       * @param {Object} oldProps Bag of previous values for changed properties\n       * @param {boolean} hasPaths True with `props` contains one or more paths\n       * @protected\n       */\n\n    }, {\n      key: '_propagatePropertyChanges',\n      value: function _propagatePropertyChanges(changedProps, oldProps, hasPaths) {\n        if (this[TYPES.PROPAGATE]) {\n          runEffects(this, this[TYPES.PROPAGATE], changedProps, oldProps, hasPaths);\n        }\n        var templateInfo = this.__templateInfo;\n        while (templateInfo) {\n          runEffects(this, templateInfo.propertyEffects, changedProps, oldProps, hasPaths, templateInfo.nodeList);\n          templateInfo = templateInfo.nextTemplateInfo;\n        }\n      }\n\n      /**\n       * Aliases one data path as another, such that path notifications from one\n       * are routed to the other.\n       *\n       * @param {string | !Array<string|number>} to Target path to link.\n       * @param {string | !Array<string|number>} from Source path to link.\n       * @public\n       */\n\n    }, {\n      key: 'linkPaths',\n      value: function linkPaths(to, from) {\n        to = (0, _path.normalize)(to);\n        from = (0, _path.normalize)(from);\n        this.__dataLinkedPaths = this.__dataLinkedPaths || {};\n        this.__dataLinkedPaths[to] = from;\n      }\n\n      /**\n       * Removes a data path alias previously established with `_linkPaths`.\n       *\n       * Note, the path to unlink should be the target (`to`) used when\n       * linking the paths.\n       *\n       * @param {string | !Array<string|number>} path Target path to unlink.\n       * @public\n       */\n\n    }, {\n      key: 'unlinkPaths',\n      value: function unlinkPaths(path) {\n        path = (0, _path.normalize)(path);\n        if (this.__dataLinkedPaths) {\n          delete this.__dataLinkedPaths[path];\n        }\n      }\n\n      /**\n       * Notify that an array has changed.\n       *\n       * Example:\n       *\n       *     this.items = [ {name: 'Jim'}, {name: 'Todd'}, {name: 'Bill'} ];\n       *     ...\n       *     this.items.splice(1, 1, {name: 'Sam'});\n       *     this.items.push({name: 'Bob'});\n       *     this.notifySplices('items', [\n       *       { index: 1, removed: [{name: 'Todd'}], addedCount: 1, obect: this.items, type: 'splice' },\n       *       { index: 3, removed: [], addedCount: 1, object: this.items, type: 'splice'}\n       *     ]);\n       *\n       * @param {string} path Path that should be notified.\n       * @param {Array} splices Array of splice records indicating ordered\n       *   changes that occurred to the array. Each record should have the\n       *   following fields:\n       *    * index: index at which the change occurred\n       *    * removed: array of items that were removed from this index\n       *    * addedCount: number of new items added at this index\n       *    * object: a reference to the array in question\n       *    * type: the string literal 'splice'\n       *\n       *   Note that splice records _must_ be normalized such that they are\n       *   reported in index order (raw results from `Object.observe` are not\n       *   ordered and must be normalized/merged before notifying).\n       * @public\n      */\n\n    }, {\n      key: 'notifySplices',\n      value: function notifySplices(path, splices) {\n        var info = { path: '' };\n        var array = /** @type {Array} */(0, _path.get)(this, path, info);\n        _notifySplices(this, array, info.path, splices);\n      }\n\n      /**\n       * Convenience method for reading a value from a path.\n       *\n       * Note, if any part in the path is undefined, this method returns\n       * `undefined` (this method does not throw when dereferencing undefined\n       * paths).\n       *\n       * @param {(string|!Array<(string|number)>)} path Path to the value\n       *   to read.  The path may be specified as a string (e.g. `foo.bar.baz`)\n       *   or an array of path parts (e.g. `['foo.bar', 'baz']`).  Note that\n       *   bracketed expressions are not supported; string-based path parts\n       *   *must* be separated by dots.  Note that when dereferencing array\n       *   indices, the index may be used as a dotted part directly\n       *   (e.g. `users.12.name` or `['users', 12, 'name']`).\n       * @param {Object=} root Root object from which the path is evaluated.\n       * @return {*} Value at the path, or `undefined` if any part of the path\n       *   is undefined.\n       * @public\n       */\n\n    }, {\n      key: 'get',\n      value: function get(path, root) {\n        return (0, _path.get)(root || this, path);\n      }\n\n      /**\n       * Convenience method for setting a value to a path and notifying any\n       * elements bound to the same path.\n       *\n       * Note, if any part in the path except for the last is undefined,\n       * this method does nothing (this method does not throw when\n       * dereferencing undefined paths).\n       *\n       * @param {(string|!Array<(string|number)>)} path Path to the value\n       *   to write.  The path may be specified as a string (e.g. `'foo.bar.baz'`)\n       *   or an array of path parts (e.g. `['foo.bar', 'baz']`).  Note that\n       *   bracketed expressions are not supported; string-based path parts\n       *   *must* be separated by dots.  Note that when dereferencing array\n       *   indices, the index may be used as a dotted part directly\n       *   (e.g. `'users.12.name'` or `['users', 12, 'name']`).\n       * @param {*} value Value to set at the specified path.\n       * @param {Object=} root Root object from which the path is evaluated.\n       *   When specified, no notification will occur.\n       * @public\n      */\n\n    }, {\n      key: 'set',\n      value: function set(path, value, root) {\n        if (root) {\n          (0, _path.set)(root, path, value);\n        } else {\n          if (!this[TYPES.READ_ONLY] || !this[TYPES.READ_ONLY][/** @type {string} */path]) {\n            if (this._setPendingPropertyOrPath(path, value, true)) {\n              this._invalidateProperties();\n            }\n          }\n        }\n      }\n\n      /**\n       * Adds items onto the end of the array at the path specified.\n       *\n       * The arguments after `path` and return value match that of\n       * `Array.prototype.push`.\n       *\n       * This method notifies other paths to the same array that a\n       * splice occurred to the array.\n       *\n       * @param {string | !Array<string|number>} path Path to array.\n       * @param {...*} items Items to push onto array\n       * @return {number} New length of the array.\n       * @public\n       */\n\n    }, {\n      key: 'push',\n      value: function push(path) {\n        var info = { path: '' };\n        var array = /** @type {Array}*/(0, _path.get)(this, path, info);\n        var len = array.length;\n\n        for (var _len = arguments.length, items = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          items[_key - 1] = arguments[_key];\n        }\n\n        var ret = array.push.apply(array, items);\n        if (items.length) {\n          notifySplice(this, array, info.path, len, items.length, []);\n        }\n        return ret;\n      }\n\n      /**\n       * Removes an item from the end of array at the path specified.\n       *\n       * The arguments after `path` and return value match that of\n       * `Array.prototype.pop`.\n       *\n       * This method notifies other paths to the same array that a\n       * splice occurred to the array.\n       *\n       * @param {string | !Array<string|number>} path Path to array.\n       * @return {*} Item that was removed.\n       * @public\n       */\n\n    }, {\n      key: 'pop',\n      value: function pop(path) {\n        var info = { path: '' };\n        var array = /** @type {Array} */(0, _path.get)(this, path, info);\n        var hadLength = Boolean(array.length);\n        var ret = array.pop();\n        if (hadLength) {\n          notifySplice(this, array, info.path, array.length, 0, [ret]);\n        }\n        return ret;\n      }\n\n      /**\n       * Starting from the start index specified, removes 0 or more items\n       * from the array and inserts 0 or more new items in their place.\n       *\n       * The arguments after `path` and return value match that of\n       * `Array.prototype.splice`.\n       *\n       * This method notifies other paths to the same array that a\n       * splice occurred to the array.\n       *\n       * @param {string | !Array<string|number>} path Path to array.\n       * @param {number} start Index from which to start removing/inserting.\n       * @param {number} deleteCount Number of items to remove.\n       * @param {...*} items Items to insert into array.\n       * @return {Array} Array of removed items.\n       * @public\n       */\n\n    }, {\n      key: 'splice',\n      value: function splice(path, start, deleteCount) {\n        var info = { path: '' };\n        var array = /** @type {Array} */(0, _path.get)(this, path, info);\n        // Normalize fancy native splice handling of crazy start values\n        if (start < 0) {\n          start = array.length - Math.floor(-start);\n        } else {\n          start = Math.floor(start);\n        }\n        if (!start) {\n          start = 0;\n        }\n\n        for (var _len2 = arguments.length, items = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n          items[_key2 - 3] = arguments[_key2];\n        }\n\n        var ret = array.splice.apply(array, [start, deleteCount].concat(items));\n        if (items.length || ret.length) {\n          notifySplice(this, array, info.path, start, items.length, ret);\n        }\n        return ret;\n      }\n\n      /**\n       * Removes an item from the beginning of array at the path specified.\n       *\n       * The arguments after `path` and return value match that of\n       * `Array.prototype.pop`.\n       *\n       * This method notifies other paths to the same array that a\n       * splice occurred to the array.\n       *\n       * @param {string | !Array<string|number>} path Path to array.\n       * @return {*} Item that was removed.\n       * @public\n       */\n\n    }, {\n      key: 'shift',\n      value: function shift(path) {\n        var info = { path: '' };\n        var array = /** @type {Array} */(0, _path.get)(this, path, info);\n        var hadLength = Boolean(array.length);\n        var ret = array.shift();\n        if (hadLength) {\n          notifySplice(this, array, info.path, 0, 0, [ret]);\n        }\n        return ret;\n      }\n\n      /**\n       * Adds items onto the beginning of the array at the path specified.\n       *\n       * The arguments after `path` and return value match that of\n       * `Array.prototype.push`.\n       *\n       * This method notifies other paths to the same array that a\n       * splice occurred to the array.\n       *\n       * @param {string | !Array<string|number>} path Path to array.\n       * @param {...*} items Items to insert info array\n       * @return {number} New length of the array.\n       * @public\n       */\n\n    }, {\n      key: 'unshift',\n      value: function unshift(path) {\n        var info = { path: '' };\n        var array = /** @type {Array} */(0, _path.get)(this, path, info);\n\n        for (var _len3 = arguments.length, items = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n          items[_key3 - 1] = arguments[_key3];\n        }\n\n        var ret = array.unshift.apply(array, items);\n        if (items.length) {\n          notifySplice(this, array, info.path, 0, items.length, []);\n        }\n        return ret;\n      }\n\n      /**\n       * Notify that a path has changed.\n       *\n       * Example:\n       *\n       *     this.item.user.name = 'Bob';\n       *     this.notifyPath('item.user.name');\n       *\n       * @param {string} path Path that should be notified.\n       * @param {*=} value Value at the path (optional).\n       * @public\n      */\n\n    }, {\n      key: 'notifyPath',\n      value: function notifyPath(path, value) {\n        /** @type {string} */\n        var propPath = void 0;\n        if (arguments.length == 1) {\n          // Get value if not supplied\n          var info = { path: '' };\n          value = (0, _path.get)(this, path, info);\n          propPath = info.path;\n        } else if (Array.isArray(path)) {\n          // Normalize path if needed\n          propPath = (0, _path.normalize)(path);\n        } else {\n          propPath = /** @type{string} */path;\n        }\n        if (this._setPendingPropertyOrPath(propPath, value, true, true)) {\n          this._invalidateProperties();\n        }\n      }\n\n      /**\n       * Equivalent to static `createReadOnlyProperty` API but can be called on\n       * an instance to add effects at runtime.  See that method for\n       * full API docs.\n       *\n       * @param {string} property Property name\n       * @param {boolean=} protectedSetter Creates a custom protected setter\n       *   when `true`.\n       * @protected\n       */\n\n    }, {\n      key: '_createReadOnlyProperty',\n      value: function _createReadOnlyProperty(property, protectedSetter) {\n        this._addPropertyEffect(property, TYPES.READ_ONLY);\n        if (protectedSetter) {\n          this['_set' + upper(property)] = /** @this {PropertyEffects} */function (value) {\n            this._setProperty(property, value);\n          };\n        }\n      }\n\n      /**\n       * Equivalent to static `createPropertyObserver` API but can be called on\n       * an instance to add effects at runtime.  See that method for\n       * full API docs.\n       *\n       * @param {string} property Property name\n       * @param {string} methodName Name of observer method to call\n       * @param {boolean=} dynamicFn Whether the method name should be included as\n       *   a dependency to the effect.\n       * @protected\n       */\n\n    }, {\n      key: '_createPropertyObserver',\n      value: function _createPropertyObserver(property, methodName, dynamicFn) {\n        var info = { property: property, methodName: methodName, dynamicFn: Boolean(dynamicFn) };\n        this._addPropertyEffect(property, TYPES.OBSERVE, {\n          fn: runObserverEffect, info: info, trigger: { name: property }\n        });\n        if (dynamicFn) {\n          this._addPropertyEffect(methodName, TYPES.OBSERVE, {\n            fn: runObserverEffect, info: info, trigger: { name: methodName }\n          });\n        }\n      }\n\n      /**\n       * Equivalent to static `createMethodObserver` API but can be called on\n       * an instance to add effects at runtime.  See that method for\n       * full API docs.\n       *\n       * @param {string} expression Method expression\n       * @param {boolean|Object=} dynamicFn Boolean or object map indicating\n       *   whether method names should be included as a dependency to the effect.\n       * @protected\n       */\n\n    }, {\n      key: '_createMethodObserver',\n      value: function _createMethodObserver(expression, dynamicFn) {\n        var sig = parseMethod(expression);\n        if (!sig) {\n          throw new Error(\"Malformed observer expression '\" + expression + \"'\");\n        }\n        createMethodEffect(this, sig, TYPES.OBSERVE, runMethodEffect, null, dynamicFn);\n      }\n\n      /**\n       * Equivalent to static `createNotifyingProperty` API but can be called on\n       * an instance to add effects at runtime.  See that method for\n       * full API docs.\n       *\n       * @param {string} property Property name\n       * @protected\n       */\n\n    }, {\n      key: '_createNotifyingProperty',\n      value: function _createNotifyingProperty(property) {\n        this._addPropertyEffect(property, TYPES.NOTIFY, {\n          fn: runNotifyEffect,\n          info: {\n            eventName: CaseMap.camelToDashCase(property) + '-changed',\n            property: property\n          }\n        });\n      }\n\n      /**\n       * Equivalent to static `createReflectedProperty` API but can be called on\n       * an instance to add effects at runtime.  See that method for\n       * full API docs.\n       *\n       * @param {string} property Property name\n       * @protected\n       */\n\n    }, {\n      key: '_createReflectedProperty',\n      value: function _createReflectedProperty(property) {\n        var attr = CaseMap.camelToDashCase(property);\n        if (attr[0] === '-') {\n          console.warn('Property ' + property + ' cannot be reflected to attribute ' + attr + ' because \"-\" is not a valid starting attribute name. Use a lowercase first letter for the property thisead.');\n        } else {\n          this._addPropertyEffect(property, TYPES.REFLECT, {\n            fn: runReflectEffect,\n            info: {\n              attrName: attr\n            }\n          });\n        }\n      }\n\n      /**\n       * Equivalent to static `createComputedProperty` API but can be called on\n       * an instance to add effects at runtime.  See that method for\n       * full API docs.\n       *\n       * @param {string} property Name of computed property to set\n       * @param {string} expression Method expression\n       * @param {boolean|Object=} dynamicFn Boolean or object map indicating\n       *   whether method names should be included as a dependency to the effect.\n       * @protected\n       */\n\n    }, {\n      key: '_createComputedProperty',\n      value: function _createComputedProperty(property, expression, dynamicFn) {\n        var sig = parseMethod(expression);\n        if (!sig) {\n          throw new Error(\"Malformed computed expression '\" + expression + \"'\");\n        }\n        createMethodEffect(this, sig, TYPES.COMPUTE, runComputedEffect, property, dynamicFn);\n      }\n\n      // -- static class methods ------------\n\n      /**\n       * Ensures an accessor exists for the specified property, and adds\n       * to a list of \"property effects\" that will run when the accessor for\n       * the specified property is set.  Effects are grouped by \"type\", which\n       * roughly corresponds to a phase in effect processing.  The effect\n       * metadata should be in the following form:\n       *\n       *     {\n       *       fn: effectFunction, // Reference to function to call to perform effect\n       *       info: { ... }       // Effect metadata passed to function\n       *       trigger: {          // Optional triggering metadata; if not provided\n       *         name: string      // the property is treated as a wildcard\n       *         structured: boolean\n       *         wildcard: boolean\n       *       }\n       *     }\n       *\n       * Effects are called from `_propertiesChanged` in the following order by\n       * type:\n       *\n       * 1. COMPUTE\n       * 2. PROPAGATE\n       * 3. REFLECT\n       * 4. OBSERVE\n       * 5. NOTIFY\n       *\n       * Effect functions are called with the following signature:\n       *\n       *     effectFunction(inst, path, props, oldProps, info, hasPaths)\n       *\n       * @param {string} property Property that should trigger the effect\n       * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES\n       * @param {Object=} effect Effect metadata object\n       * @protected\n       */\n\n    }, {\n      key: '_bindTemplate',\n\n\n      // -- binding ----------------------------------------------\n\n      /**\n       * Equivalent to static `bindTemplate` API but can be called on\n       * an instance to add effects at runtime.  See that method for\n       * full API docs.\n       *\n       * This method may be called on the prototype (for prototypical template\n       * binding, to avoid creating accessors every instance) once per prototype,\n       * and will be called with `runtimeBinding: true` by `_stampTemplate` to\n       * create and link an instance of the template metadata associated with a\n       * particular stamping.\n       *\n       * @param {HTMLTemplateElement} template Template containing binding\n       *   bindings\n       * @param {boolean=} instanceBinding When false (default), performs\n       *   \"prototypical\" binding of the template and overwrites any previously\n       *   bound template for the class. When true (as passed from\n       *   `_stampTemplate`), the template info is instanced and linked into\n       *   the list of bound templates.\n       * @return {!TemplateInfo} Template metadata object; for `runtimeBinding`,\n       *   this is an instance of the prototypical template info\n       * @protected\n       */\n      value: function _bindTemplate(template, instanceBinding) {\n        var templateInfo = this.constructor._parseTemplate(template);\n        var wasPreBound = this.__templateInfo == templateInfo;\n        // Optimization: since this is called twice for proto-bound templates,\n        // don't attempt to recreate accessors if this template was pre-bound\n        if (!wasPreBound) {\n          for (var prop in templateInfo.propertyEffects) {\n            this._createPropertyAccessor(prop);\n          }\n        }\n        if (instanceBinding) {\n          // For instance-time binding, create instance of template metadata\n          // and link into list of templates if necessary\n          templateInfo = /** @type {!TemplateInfo} */Object.create(templateInfo);\n          templateInfo.wasPreBound = wasPreBound;\n          if (!wasPreBound && this.__templateInfo) {\n            var last = this.__templateInfoLast || this.__templateInfo;\n            this.__templateInfoLast = last.nextTemplateInfo = templateInfo;\n            templateInfo.previousTemplateInfo = last;\n            return templateInfo;\n          }\n        }\n        return this.__templateInfo = templateInfo;\n      }\n\n      /**\n       * Adds a property effect to the given template metadata, which is run\n       * at the \"propagate\" stage of `_propertiesChanged` when the template\n       * has been bound to the element via `_bindTemplate`.\n       *\n       * The `effect` object should match the format in `_addPropertyEffect`.\n       *\n       * @param {Object} templateInfo Template metadata to add effect to\n       * @param {string} prop Property that should trigger the effect\n       * @param {Object=} effect Effect metadata object\n       * @protected\n       */\n\n    }, {\n      key: '_stampTemplate',\n\n\n      /**\n       * Stamps the provided template and performs instance-time setup for\n       * Polymer template features, including data bindings, declarative event\n       * listeners, and the `this.$` map of `id`'s to nodes.  A document fragment\n       * is returned containing the stamped DOM, ready for insertion into the\n       * DOM.\n       *\n       * This method may be called more than once; however note that due to\n       * `shadycss` polyfill limitations, only styles from templates prepared\n       * using `ShadyCSS.prepareTemplate` will be correctly polyfilled (scoped\n       * to the shadow root and support CSS custom properties), and note that\n       * `ShadyCSS.prepareTemplate` may only be called once per element. As such,\n       * any styles required by in runtime-stamped templates must be included\n       * in the main element template.\n       *\n       * @param {!HTMLTemplateElement} template Template to stamp\n       * @return {!StampedTemplate} Cloned template content\n       * @override\n       * @protected\n       */\n      value: function _stampTemplate(template) {\n        // Ensures that created dom is `_enqueueClient`'d to this element so\n        // that it can be flushed on next call to `_flushProperties`\n        hostStack.beginHosting(this);\n        var dom = _get(PropertyEffects.prototype.__proto__ || Object.getPrototypeOf(PropertyEffects.prototype), '_stampTemplate', this).call(this, template);\n        hostStack.endHosting(this);\n        var templateInfo = /** @type {!TemplateInfo} */this._bindTemplate(template, true);\n        // Add template-instance-specific data to instanced templateInfo\n        templateInfo.nodeList = dom.nodeList;\n        // Capture child nodes to allow unstamping of non-prototypical templates\n        if (!templateInfo.wasPreBound) {\n          var nodes = templateInfo.childNodes = [];\n          for (var n = dom.firstChild; n; n = n.nextSibling) {\n            nodes.push(n);\n          }\n        }\n        dom.templateInfo = templateInfo;\n        // Setup compound storage, 2-way listeners, and dataHost for bindings\n        setupBindings(this, templateInfo);\n        // Flush properties into template nodes if already booted\n        if (this.__dataReady) {\n          runEffects(this, templateInfo.propertyEffects, this.__data, null, false, templateInfo.nodeList);\n        }\n        return dom;\n      }\n\n      /**\n       * Removes and unbinds the nodes previously contained in the provided\n       * DocumentFragment returned from `_stampTemplate`.\n       *\n       * @param {!StampedTemplate} dom DocumentFragment previously returned\n       *   from `_stampTemplate` associated with the nodes to be removed\n       * @protected\n       */\n\n    }, {\n      key: '_removeBoundDom',\n      value: function _removeBoundDom(dom) {\n        // Unlink template info\n        var templateInfo = dom.templateInfo;\n        if (templateInfo.previousTemplateInfo) {\n          templateInfo.previousTemplateInfo.nextTemplateInfo = templateInfo.nextTemplateInfo;\n        }\n        if (templateInfo.nextTemplateInfo) {\n          templateInfo.nextTemplateInfo.previousTemplateInfo = templateInfo.previousTemplateInfo;\n        }\n        if (this.__templateInfoLast == templateInfo) {\n          this.__templateInfoLast = templateInfo.previousTemplateInfo;\n        }\n        templateInfo.previousTemplateInfo = templateInfo.nextTemplateInfo = null;\n        // Remove stamped nodes\n        var nodes = templateInfo.childNodes;\n        for (var i = 0; i < nodes.length; i++) {\n          var node = nodes[i];\n          node.parentNode.removeChild(node);\n        }\n      }\n\n      /**\n       * Overrides default `TemplateStamp` implementation to add support for\n       * parsing bindings from `TextNode`'s' `textContent`.  A `bindings`\n       * array is added to `nodeInfo` and populated with binding metadata\n       * with information capturing the binding target, and a `parts` array\n       * with one or more metadata objects capturing the source(s) of the\n       * binding.\n       *\n       * @override\n       * @param {Node} node Node to parse\n       * @param {TemplateInfo} templateInfo Template metadata for current template\n       * @param {NodeInfo} nodeInfo Node metadata for current template node\n       * @return {boolean} `true` if the visited node added node-specific\n       *   metadata to `nodeInfo`\n       * @protected\n       * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n       */\n\n    }, {\n      key: 'PROPERTY_EFFECT_TYPES',\n      get: function get() {\n        return TYPES;\n      }\n    }], [{\n      key: 'addPropertyEffect',\n      value: function addPropertyEffect(property, type, effect) {\n        this.prototype._addPropertyEffect(property, type, effect);\n      }\n\n      /**\n       * Creates a single-property observer for the given property.\n       *\n       * @param {string} property Property name\n       * @param {string} methodName Name of observer method to call\n       * @param {boolean=} dynamicFn Whether the method name should be included as\n       *   a dependency to the effect.\n       * @protected\n       */\n\n    }, {\n      key: 'createPropertyObserver',\n      value: function createPropertyObserver(property, methodName, dynamicFn) {\n        this.prototype._createPropertyObserver(property, methodName, dynamicFn);\n      }\n\n      /**\n       * Creates a multi-property \"method observer\" based on the provided\n       * expression, which should be a string in the form of a normal Javascript\n       * function signature: `'methodName(arg1, [..., argn])'`.  Each argument\n       * should correspond to a property or path in the context of this\n       * prototype (or instance), or may be a literal string or number.\n       *\n       * @param {string} expression Method expression\n       * @param {boolean|Object=} dynamicFn Boolean or object map indicating\n       *   whether method names should be included as a dependency to the effect.\n       * @protected\n       */\n\n    }, {\n      key: 'createMethodObserver',\n      value: function createMethodObserver(expression, dynamicFn) {\n        this.prototype._createMethodObserver(expression, dynamicFn);\n      }\n\n      /**\n       * Causes the setter for the given property to dispatch `<property>-changed`\n       * events to notify of changes to the property.\n       *\n       * @param {string} property Property name\n       * @protected\n       */\n\n    }, {\n      key: 'createNotifyingProperty',\n      value: function createNotifyingProperty(property) {\n        this.prototype._createNotifyingProperty(property);\n      }\n\n      /**\n       * Creates a read-only accessor for the given property.\n       *\n       * To set the property, use the protected `_setProperty` API.\n       * To create a custom protected setter (e.g. `_setMyProp()` for\n       * property `myProp`), pass `true` for `protectedSetter`.\n       *\n       * Note, if the property will have other property effects, this method\n       * should be called first, before adding other effects.\n       *\n       * @param {string} property Property name\n       * @param {boolean=} protectedSetter Creates a custom protected setter\n       *   when `true`.\n       * @protected\n       */\n\n    }, {\n      key: 'createReadOnlyProperty',\n      value: function createReadOnlyProperty(property, protectedSetter) {\n        this.prototype._createReadOnlyProperty(property, protectedSetter);\n      }\n\n      /**\n       * Causes the setter for the given property to reflect the property value\n       * to a (dash-cased) attribute of the same name.\n       *\n       * @param {string} property Property name\n       * @protected\n       */\n\n    }, {\n      key: 'createReflectedProperty',\n      value: function createReflectedProperty(property) {\n        this.prototype._createReflectedProperty(property);\n      }\n\n      /**\n       * Creates a computed property whose value is set to the result of the\n       * method described by the given `expression` each time one or more\n       * arguments to the method changes.  The expression should be a string\n       * in the form of a normal Javascript function signature:\n       * `'methodName(arg1, [..., argn])'`\n       *\n       * @param {string} property Name of computed property to set\n       * @param {string} expression Method expression\n       * @param {boolean|Object=} dynamicFn Boolean or object map indicating whether\n       *   method names should be included as a dependency to the effect.\n       * @protected\n       */\n\n    }, {\n      key: 'createComputedProperty',\n      value: function createComputedProperty(property, expression, dynamicFn) {\n        this.prototype._createComputedProperty(property, expression, dynamicFn);\n      }\n\n      /**\n       * Parses the provided template to ensure binding effects are created\n       * for them, and then ensures property accessors are created for any\n       * dependent properties in the template.  Binding effects for bound\n       * templates are stored in a linked list on the instance so that\n       * templates can be efficiently stamped and unstamped.\n       *\n       * @param {HTMLTemplateElement} template Template containing binding\n       *   bindings\n       * @return {Object} Template metadata object\n       * @protected\n       */\n\n    }, {\n      key: 'bindTemplate',\n      value: function bindTemplate(template) {\n        return this.prototype._bindTemplate(template);\n      }\n    }, {\n      key: '_addTemplatePropertyEffect',\n      value: function _addTemplatePropertyEffect(templateInfo, prop, effect) {\n        var hostProps = templateInfo.hostProps = templateInfo.hostProps || {};\n        hostProps[prop] = true;\n        var effects = templateInfo.propertyEffects = templateInfo.propertyEffects || {};\n        var propEffects = effects[prop] = effects[prop] || [];\n        propEffects.push(effect);\n      }\n    }, {\n      key: '_parseTemplateNode',\n      value: function _parseTemplateNode(node, templateInfo, nodeInfo) {\n        var noted = _get(PropertyEffects.__proto__ || Object.getPrototypeOf(PropertyEffects), '_parseTemplateNode', this).call(this, node, templateInfo, nodeInfo);\n        if (node.nodeType === Node.TEXT_NODE) {\n          var parts = this._parseBindings(node.textContent, templateInfo);\n          if (parts) {\n            // Initialize the textContent with any literal parts\n            // NOTE: default to a space here so the textNode remains; some browsers\n            // (IE) evacipate an empty textNode following cloneNode/importNode.\n            node.textContent = literalFromParts(parts) || ' ';\n            addBinding(this, templateInfo, nodeInfo, 'text', 'textContent', parts);\n            noted = true;\n          }\n        }\n        return noted;\n      }\n\n      /**\n       * Overrides default `TemplateStamp` implementation to add support for\n       * parsing bindings from attributes.  A `bindings`\n       * array is added to `nodeInfo` and populated with binding metadata\n       * with information capturing the binding target, and a `parts` array\n       * with one or more metadata objects capturing the source(s) of the\n       * binding.\n       *\n       * @override\n       * @param {Element} node Node to parse\n       * @param {TemplateInfo} templateInfo Template metadata for current template\n       * @param {NodeInfo} nodeInfo Node metadata for current template node\n       * @return {boolean} `true` if the visited node added node-specific\n       *   metadata to `nodeInfo`\n       * @protected\n       * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n       */\n\n    }, {\n      key: '_parseTemplateNodeAttribute',\n      value: function _parseTemplateNodeAttribute(node, templateInfo, nodeInfo, name, value) {\n        var parts = this._parseBindings(value, templateInfo);\n        if (parts) {\n          // Attribute or property\n          var origName = name;\n          var kind = 'property';\n          if (name[name.length - 1] == '$') {\n            name = name.slice(0, -1);\n            kind = 'attribute';\n          }\n          // Initialize attribute bindings with any literal parts\n          var literal = literalFromParts(parts);\n          if (literal && kind == 'attribute') {\n            node.setAttribute(name, literal);\n          }\n          // Clear attribute before removing, since IE won't allow removing\n          // `value` attribute if it previously had a value (can't\n          // unconditionally set '' before removing since attributes with `$`\n          // can't be set using setAttribute)\n          if (node.localName === 'input' && origName === 'value') {\n            node.setAttribute(origName, '');\n          }\n          // Remove annotation\n          node.removeAttribute(origName);\n          // Case hackery: attributes are lower-case, but bind targets\n          // (properties) are case sensitive. Gambit is to map dash-case to\n          // camel-case: `foo-bar` becomes `fooBar`.\n          // Attribute bindings are excepted.\n          if (kind === 'property') {\n            name = (0, _caseMap.dashToCamelCase)(name);\n          }\n          addBinding(this, templateInfo, nodeInfo, kind, name, parts, literal);\n          return true;\n        } else {\n          return _get(PropertyEffects.__proto__ || Object.getPrototypeOf(PropertyEffects), '_parseTemplateNodeAttribute', this).call(this, node, templateInfo, nodeInfo, name, value);\n        }\n      }\n\n      /**\n       * Overrides default `TemplateStamp` implementation to add support for\n       * binding the properties that a nested template depends on to the template\n       * as `_host_<property>`.\n       *\n       * @override\n       * @param {Node} node Node to parse\n       * @param {TemplateInfo} templateInfo Template metadata for current template\n       * @param {NodeInfo} nodeInfo Node metadata for current template node\n       * @return {boolean} `true` if the visited node added node-specific\n       *   metadata to `nodeInfo`\n       * @protected\n       * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n       */\n\n    }, {\n      key: '_parseTemplateNestedTemplate',\n      value: function _parseTemplateNestedTemplate(node, templateInfo, nodeInfo) {\n        var noted = _get(PropertyEffects.__proto__ || Object.getPrototypeOf(PropertyEffects), '_parseTemplateNestedTemplate', this).call(this, node, templateInfo, nodeInfo);\n        // Merge host props into outer template and add bindings\n        var hostProps = nodeInfo.templateInfo.hostProps;\n        var mode = '{';\n        for (var source in hostProps) {\n          var parts = [{ mode: mode, source: source, dependencies: [source] }];\n          addBinding(this, templateInfo, nodeInfo, 'property', '_host_' + source, parts);\n        }\n        return noted;\n      }\n\n      /**\n       * Called to parse text in a template (either attribute values or\n       * textContent) into binding metadata.\n       *\n       * Any overrides of this method should return an array of binding part\n       * metadata  representing one or more bindings found in the provided text\n       * and any \"literal\" text in between.  Any non-literal parts will be passed\n       * to `_evaluateBinding` when any dependencies change.  The only required\n       * fields of each \"part\" in the returned array are as follows:\n       *\n       * - `dependencies` - Array containing trigger metadata for each property\n       *   that should trigger the binding to update\n       * - `literal` - String containing text if the part represents a literal;\n       *   in this case no `dependencies` are needed\n       *\n       * Additional metadata for use by `_evaluateBinding` may be provided in\n       * each part object as needed.\n       *\n       * The default implementation handles the following types of bindings\n       * (one or more may be intermixed with literal strings):\n       * - Property binding: `[[prop]]`\n       * - Path binding: `[[object.prop]]`\n       * - Negated property or path bindings: `[[!prop]]` or `[[!object.prop]]`\n       * - Two-way property or path bindings (supports negation):\n       *   `{{prop}}`, `{{object.prop}}`, `{{!prop}}` or `{{!object.prop}}`\n       * - Inline computed method (supports negation):\n       *   `[[compute(a, 'literal', b)]]`, `[[!compute(a, 'literal', b)]]`\n       *\n       * @param {string} text Text to parse from attribute or textContent\n       * @param {Object} templateInfo Current template metadata\n       * @return {Array<!BindingPart>} Array of binding part metadata\n       * @protected\n       */\n\n    }, {\n      key: '_parseBindings',\n      value: function _parseBindings(text, templateInfo) {\n        var parts = [];\n        var lastIndex = 0;\n        var m = void 0;\n        // Example: \"literal1{{prop}}literal2[[!compute(foo,bar)]]final\"\n        // Regex matches:\n        //        Iteration 1:  Iteration 2:\n        // m[1]: '{{'          '[['\n        // m[2]: ''            '!'\n        // m[3]: 'prop'        'compute(foo,bar)'\n        while ((m = bindingRegex.exec(text)) !== null) {\n          // Add literal part\n          if (m.index > lastIndex) {\n            parts.push({ literal: text.slice(lastIndex, m.index) });\n          }\n          // Add binding part\n          var mode = m[1][0];\n          var negate = Boolean(m[2]);\n          var source = m[3].trim();\n          var customEvent = false,\n              notifyEvent = '',\n              colon = -1;\n          if (mode == '{' && (colon = source.indexOf('::')) > 0) {\n            notifyEvent = source.substring(colon + 2);\n            source = source.substring(0, colon);\n            customEvent = true;\n          }\n          var signature = parseMethod(source);\n          var dependencies = [];\n          if (signature) {\n            // Inline computed function\n            var args = signature.args,\n                methodName = signature.methodName;\n\n            for (var i = 0; i < args.length; i++) {\n              var arg = args[i];\n              if (!arg.literal) {\n                dependencies.push(arg);\n              }\n            }\n            var dynamicFns = templateInfo.dynamicFns;\n            if (dynamicFns && dynamicFns[methodName] || signature.static) {\n              dependencies.push(methodName);\n              signature.dynamicFn = true;\n            }\n          } else {\n            // Property or path\n            dependencies.push(source);\n          }\n          parts.push({\n            source: source, mode: mode, negate: negate, customEvent: customEvent, signature: signature, dependencies: dependencies,\n            event: notifyEvent\n          });\n          lastIndex = bindingRegex.lastIndex;\n        }\n        // Add a final literal part\n        if (lastIndex && lastIndex < text.length) {\n          var literal = text.substring(lastIndex);\n          if (literal) {\n            parts.push({\n              literal: literal\n            });\n          }\n        }\n        if (parts.length) {\n          return parts;\n        } else {\n          return null;\n        }\n      }\n\n      /**\n       * Called to evaluate a previously parsed binding part based on a set of\n       * one or more changed dependencies.\n       *\n       * @param {this} inst Element that should be used as scope for\n       *   binding dependencies\n       * @param {BindingPart} part Binding part metadata\n       * @param {string} path Property/path that triggered this effect\n       * @param {Object} props Bag of current property changes\n       * @param {Object} oldProps Bag of previous values for changed properties\n       * @param {boolean} hasPaths True with `props` contains one or more paths\n       * @return {*} Value the binding part evaluated to\n       * @protected\n       */\n\n    }, {\n      key: '_evaluateBinding',\n      value: function _evaluateBinding(inst, part, path, props, oldProps, hasPaths) {\n        var value = void 0;\n        if (part.signature) {\n          value = runMethodEffect(inst, path, props, oldProps, part.signature);\n        } else if (path != part.source) {\n          value = (0, _path.get)(inst, part.source);\n        } else {\n          if (hasPaths && (0, _path.isPath)(path)) {\n            value = (0, _path.get)(inst, path);\n          } else {\n            value = inst.__data[path];\n          }\n        }\n        if (part.negate) {\n          value = !value;\n        }\n        return value;\n      }\n    }]);\n\n    return PropertyEffects;\n  }(propertyEffectsBase);\n\n  // make a typing for closure :P\n\n\n  PropertyEffectsType = PropertyEffects;\n\n  return PropertyEffects;\n});\n\n/**\n * Helper api for enqueing client dom created by a host element.\n *\n * By default elements are flushed via `_flushProperties` when\n * `connectedCallback` is called. Elements attach their client dom to\n * themselves at `ready` time which results from this first flush.\n * This provides an ordering guarantee that the client dom an element\n * creates is flushed before the element itself (i.e. client `ready`\n * fires before host `ready`).\n *\n * However, if `_flushProperties` is called *before* an element is connected,\n * as for example `Templatize` does, this ordering guarantee cannot be\n * satisfied because no elements are connected. (Note: Bound elements that\n * receive data do become enqueued clients and are properly ordered but\n * unbound elements are not.)\n *\n * To maintain the desired \"client before host\" ordering guarantee for this\n * case we rely on the \"host stack. Client nodes registers themselves with\n * the creating host element when created. This ensures that all client dom\n * is readied in the proper order, maintaining the desired guarantee.\n *\n * @private\n */\nvar hostStack = {\n\n  stack: [],\n\n  /**\n   * @param {*} inst Instance to add to hostStack\n   * @this {hostStack}\n   */\n  registerHost: function registerHost(inst) {\n    if (this.stack.length) {\n      var host = this.stack[this.stack.length - 1];\n      host._enqueueClient(inst);\n    }\n  },\n\n\n  /**\n   * @param {*} inst Instance to begin hosting\n   * @this {hostStack}\n   */\n  beginHosting: function beginHosting(inst) {\n    this.stack.push(inst);\n  },\n\n\n  /**\n   * @param {*} inst Instance to end hosting\n   * @this {hostStack}\n   */\n  endHosting: function endHosting(inst) {\n    var stackLen = this.stack.length;\n    if (stackLen && this.stack[stackLen - 1] == inst) {\n      this.stack.pop();\n    }\n  }\n};\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n__webpack_require__(33);\n\n__webpack_require__(1);\n\n__webpack_require__(57);\n\nvar script = document.createElement('script');\nscript.src = 'https://use.typekit.net/fed2dzd.js';\nscript.onload = function () {\n  try {\n    window.Typekit.load({ async: true });\n  } catch (e) {\n    console.log(e);\n  }\n};\ndocument.body.appendChild(script);\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _fragments = __webpack_require__(34);\n\nvar _fragments2 = _interopRequireDefault(_fragments);\n\nvar _window = __webpack_require__(7);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar LazyLoader = function (_HTMLElement) {\n  _inherits(LazyLoader, _HTMLElement);\n\n  function LazyLoader() {\n    _classCallCheck(this, LazyLoader);\n\n    return _possibleConstructorReturn(this, (LazyLoader.__proto__ || Object.getPrototypeOf(LazyLoader)).apply(this, arguments));\n  }\n\n  _createClass(LazyLoader, [{\n    key: 'import',\n    value: function _import(name) {\n      return _fragments2.default[name] && typeof _fragments2.default[name] === 'function' ? _fragments2.default[name]() : Promise.reject(new Error('No fragment found'));\n    }\n  }], [{\n    key: 'is',\n    get: function get() {\n      return 'lazy-loader';\n    }\n  }]);\n\n  return LazyLoader;\n}(_window.HTMLElement);\n\n!_window.customElements.get(LazyLoader.is) ? _window.customElements.define(LazyLoader.is, LazyLoader) : console.warn(LazyLoader.is + ' is already defined');\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  'page-home': function pageHome() {\n    return __webpack_require__.e/* import() */(9).then(__webpack_require__.bind(null, 91));\n  },\n  'page-speakers': function pageSpeakers() {\n    return __webpack_require__.e/* import() */(0).then(__webpack_require__.bind(null, 92));\n  },\n  'page-schedule': function pageSchedule() {\n    return __webpack_require__.e/* import() */(7).then(__webpack_require__.bind(null, 93));\n  },\n  'page-sessions': function pageSessions() {\n    return __webpack_require__.e/* import() */(3).then(__webpack_require__.bind(null, 94));\n  },\n  'page-sponsor': function pageSponsor() {\n    return __webpack_require__.e/* import() */(4).then(__webpack_require__.bind(null, 95));\n  },\n  'page-tickets': function pageTickets() {\n    return __webpack_require__.e/* import() */(2).then(__webpack_require__.bind(null, 96));\n  },\n  'page-about': function pageAbout() {\n    return __webpack_require__.e/* import() */(6).then(__webpack_require__.bind(null, 97));\n  },\n  'page-faq': function pageFaq() {\n    return __webpack_require__.e/* import() */(1).then(__webpack_require__.bind(null, 98));\n  },\n  'page-convince': function pageConvince() {\n    return __webpack_require__.e/* import() */(5).then(__webpack_require__.bind(null, 99));\n  },\n  'page-not-authorized': function pageNotAuthorized() {\n    return __webpack_require__.e/* import() */(10).then(__webpack_require__.bind(null, 100));\n  },\n  'page-not-found': function pageNotFound() {\n    return __webpack_require__.e/* import() */(8).then(__webpack_require__.bind(null, 101));\n  }\n};\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updateStyles = exports.registrations = exports.instanceCount = exports.ElementMixin = undefined;\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nexports._regLog = _regLog;\nexports.register = register;\nexports.dumpRegistrations = dumpRegistrations;\n\n__webpack_require__(0);\n\nvar _settings = __webpack_require__(18);\n\nvar _mixin = __webpack_require__(4);\n\nvar _caseMap = __webpack_require__(11);\n\nvar caseMap$0 = _interopRequireWildcard(_caseMap);\n\nvar _styleGather = __webpack_require__(36);\n\nvar _resolveUrl = __webpack_require__(9);\n\nvar _domModule = __webpack_require__(37);\n\nvar _propertyEffects = __webpack_require__(31);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ElementMixin = exports.ElementMixin = (0, _mixin.dedupingMixin)(function (base) {\n\n  /**\n   * @constructor\n   * @extends {base}\n   * @implements {Polymer_PropertyEffects}\n   */\n  var polymerElementBase = (0, _propertyEffects.PropertyEffects)(base);\n\n  var caseMap = caseMap$0;\n\n  /**\n   * Returns the `properties` object specifically on `klass`. Use for:\n   * (1) super chain mixes togther to make `propertiesForClass` which is\n   * then used to make `observedAttributes`.\n   * (2) properties effects and observers are created from it at `finalize` time.\n   *\n   * @param {HTMLElement} klass Element class\n   * @return {Object} Object containing own properties for this class\n   * @private\n   */\n  function ownPropertiesForClass(klass) {\n    if (!klass.hasOwnProperty(JSCompiler_renameProperty('__ownProperties', klass))) {\n      klass.__ownProperties = klass.hasOwnProperty(JSCompiler_renameProperty('properties', klass)) ?\n      /** @type PolymerElementConstructor */klass.properties : {};\n    }\n    return klass.__ownProperties;\n  }\n\n  /**\n   * Returns the `observers` array specifically on `klass`. Use for\n   * setting up observers.\n   *\n   * @param {HTMLElement} klass Element class\n   * @return {Array} Array containing own observers for this class\n   * @private\n   */\n  function ownObserversForClass(klass) {\n    if (!klass.hasOwnProperty(JSCompiler_renameProperty('__ownObservers', klass))) {\n      klass.__ownObservers = klass.hasOwnProperty(JSCompiler_renameProperty('observers', klass)) ?\n      /** @type PolymerElementConstructor */klass.observers : [];\n    }\n    return klass.__ownObservers;\n  }\n\n  /**\n   * Mixes `props` into `flattenedProps` but upgrades shorthand type\n   * syntax to { type: Type}.\n   *\n   * @param {Object} flattenedProps Bag to collect flattened properties into\n   * @param {Object} props Bag of properties to add to `flattenedProps`\n   * @return {Object} The input `flattenedProps` bag\n   * @private\n   */\n  function flattenProperties(flattenedProps, props) {\n    for (var p in props) {\n      var o = props[p];\n      if (typeof o == 'function') {\n        o = { type: o };\n      }\n      flattenedProps[p] = o;\n    }\n    return flattenedProps;\n  }\n\n  /**\n   * Returns a flattened list of properties mixed together from the chain of all\n   * constructor's `config.properties`. This list is used to create\n   * (1) observedAttributes,\n   * (2) class property default values\n   *\n   * @param {PolymerElementConstructor} klass Element class\n   * @return {PolymerElementProperties} Flattened properties for this class\n   * @suppress {missingProperties} class.prototype is not a property for some reason?\n   * @private\n   */\n  function propertiesForClass(klass) {\n    if (!klass.hasOwnProperty(JSCompiler_renameProperty('__classProperties', klass))) {\n      klass.__classProperties = flattenProperties({}, ownPropertiesForClass(klass));\n      var superCtor = Object.getPrototypeOf(klass.prototype).constructor;\n      if (superCtor.prototype instanceof PolymerElement) {\n        klass.__classProperties = Object.assign(Object.create(propertiesForClass( /** @type PolymerElementConstructor */superCtor)), klass.__classProperties);\n      }\n    }\n    return klass.__classProperties;\n  }\n\n  /**\n   * Returns a list of properties with default values.\n   * This list is created as an optimization since it is a subset of\n   * the list returned from `propertiesForClass`.\n   * This list is used in `_initializeProperties` to set property defaults.\n   *\n   * @param {PolymerElementConstructor} klass Element class\n   * @return {PolymerElementProperties} Flattened properties for this class\n   *   that have default values\n   * @private\n   */\n  function propertyDefaultsForClass(klass) {\n    if (!klass.hasOwnProperty(JSCompiler_renameProperty('__classPropertyDefaults', klass))) {\n      klass.__classPropertyDefaults = null;\n      var props = propertiesForClass(klass);\n      for (var p in props) {\n        var info = props[p];\n        if ('value' in info) {\n          klass.__classPropertyDefaults = klass.__classPropertyDefaults || {};\n          klass.__classPropertyDefaults[p] = info;\n        }\n      }\n    }\n    return klass.__classPropertyDefaults;\n  }\n\n  /**\n   * Returns true if a `klass` has finalized. Called in `ElementClass.finalize()`\n   * @param {PolymerElementConstructor} klass Element class\n   * @return {boolean} True if all metaprogramming for this class has been\n   *   completed\n   * @private\n   */\n  function hasClassFinalized(klass) {\n    return klass.hasOwnProperty(JSCompiler_renameProperty('__finalized', klass));\n  }\n\n  /**\n   * Called by `ElementClass.finalize()`. Ensures this `klass` and\n   * *all superclasses* are finalized by traversing the prototype chain\n   * and calling `klass.finalize()`.\n   *\n   * @param {PolymerElementConstructor} klass Element class\n   * @private\n   */\n  function finalizeClassAndSuper(klass) {\n    var proto = /** @type PolymerElementConstructor */klass.prototype;\n    var superCtor = Object.getPrototypeOf(proto).constructor;\n    if (superCtor.prototype instanceof PolymerElement) {\n      superCtor.finalize();\n    }\n    finalizeClass(klass);\n  }\n\n  /**\n   * Configures a `klass` based on a staic `klass.config` object and\n   * a `template`. This includes creating accessors and effects\n   * for properties in `config` and the `template` as well as preparing the\n   * `template` for stamping.\n   *\n   * @param {PolymerElementConstructor} klass Element class\n   * @private\n   */\n  function finalizeClass(klass) {\n    klass.__finalized = true;\n    var proto = /** @type PolymerElementConstructor */klass.prototype;\n    if (klass.hasOwnProperty(JSCompiler_renameProperty('is', klass)) && klass.is) {\n      register(proto);\n    }\n    var props = ownPropertiesForClass(klass);\n    if (props) {\n      finalizeProperties(proto, props);\n    }\n    var observers = ownObserversForClass(klass);\n    if (observers) {\n      finalizeObservers(proto, observers, props);\n    }\n    // note: create \"working\" template that is finalized at instance time\n    var template = /** @type PolymerElementConstructor */klass.template;\n    if (template) {\n      if (typeof template === 'string') {\n        var t = document.createElement('template');\n        t.innerHTML = template;\n        template = t;\n      } else {\n        template = template.cloneNode(true);\n      }\n      proto._template = template;\n    }\n  }\n\n  /**\n   * Configures a `proto` based on a `properties` object.\n   * Leverages `PropertyEffects` to create property accessors and effects\n   * supporting, observers, reflecting to attributes, change notification,\n   * computed properties, and read only properties.\n   * @param {PolymerElement} proto Element class prototype to add accessors\n   *    and effects to\n   * @param {Object} properties Flattened bag of property descriptors for\n   *    this class\n   * @private\n   */\n  function finalizeProperties(proto, properties) {\n    for (var p in properties) {\n      createPropertyFromConfig(proto, p, properties[p], properties);\n    }\n  }\n\n  /**\n   * Configures a `proto` based on a `observers` array.\n   * Leverages `PropertyEffects` to create observers.\n   * @param {PolymerElement} proto Element class prototype to add accessors\n   *   and effects to\n   * @param {Object} observers Flattened array of observer descriptors for\n   *   this class\n   * @param {Object} dynamicFns Object containing keys for any properties\n   *   that are functions and should trigger the effect when the function\n   *   reference is changed\n   * @private\n   */\n  function finalizeObservers(proto, observers, dynamicFns) {\n    for (var i = 0; i < observers.length; i++) {\n      proto._createMethodObserver(observers[i], dynamicFns);\n    }\n  }\n\n  /**\n   * Creates effects for a property.\n   *\n   * Note, once a property has been set to\n   * `readOnly`, `computed`, `reflectToAttribute`, or `notify`\n   * these values may not be changed. For example, a subclass cannot\n   * alter these settings. However, additional `observers` may be added\n   * by subclasses.\n   *\n   * The info object should may contain property metadata as follows:\n   *\n   * * `type`: {function} type to which an attribute matching the property\n   * is deserialized. Note the property is camel-cased from a dash-cased\n   * attribute. For example, 'foo-bar' attribute is dersialized to a\n   * property named 'fooBar'.\n   *\n   * * `readOnly`: {boolean} creates a readOnly property and\n   * makes a private setter for the private of the form '_setFoo' for a\n   * property 'foo',\n   *\n   * * `computed`: {string} creates a computed property. A computed property\n   * also automatically is set to `readOnly: true`. The value is calculated\n   * by running a method and arguments parsed from the given string. For\n   * example 'compute(foo)' will compute a given property when the\n   * 'foo' property changes by executing the 'compute' method. This method\n   * must return the computed value.\n   *\n   * * `reflectToAttriute`: {boolean} If true, the property value is reflected\n   * to an attribute of the same name. Note, the attribute is dash-cased\n   * so a property named 'fooBar' is reflected as 'foo-bar'.\n   *\n   * * `notify`: {boolean} sends a non-bubbling notification event when\n   * the property changes. For example, a property named 'foo' sends an\n   * event named 'foo-changed' with `event.detail` set to the value of\n   * the property.\n   *\n   * * observer: {string} name of a method that runs when the property\n   * changes. The arguments of the method are (value, previousValue).\n   *\n   * Note: Users may want control over modifying property\n   * effects via subclassing. For example, a user might want to make a\n   * reflectToAttribute property not do so in a subclass. We've chosen to\n   * disable this because it leads to additional complication.\n   * For example, a readOnly effect generates a special setter. If a subclass\n   * disables the effect, the setter would fail unexpectedly.\n   * Based on feedback, we may want to try to make effects more malleable\n   * and/or provide an advanced api for manipulating them.\n   * Also consider adding warnings when an effect cannot be changed.\n   *\n   * @param {PolymerElement} proto Element class prototype to add accessors\n   *   and effects to\n   * @param {string} name Name of the property.\n   * @param {Object} info Info object from which to create property effects.\n   * Supported keys:\n   * @param {Object} allProps Flattened map of all properties defined in this\n   *   element (including inherited properties)\n   * @private\n   */\n  function createPropertyFromConfig(proto, name, info, allProps) {\n    // computed forces readOnly...\n    if (info.computed) {\n      info.readOnly = true;\n    }\n    // Note, since all computed properties are readOnly, this prevents\n    // adding additional computed property effects (which leads to a confusing\n    // setup where multiple triggers for setting a property)\n    // While we do have `hasComputedEffect` this is set on the property's\n    // dependencies rather than itself.\n    if (info.computed && !proto._hasReadOnlyEffect(name)) {\n      proto._createComputedProperty(name, info.computed, allProps);\n    }\n    if (info.readOnly && !proto._hasReadOnlyEffect(name)) {\n      proto._createReadOnlyProperty(name, !info.computed);\n    }\n    if (info.reflectToAttribute && !proto._hasReflectEffect(name)) {\n      proto._createReflectedProperty(name);\n    }\n    if (info.notify && !proto._hasNotifyEffect(name)) {\n      proto._createNotifyingProperty(name);\n    }\n    // always add observer\n    if (info.observer) {\n      proto._createPropertyObserver(name, info.observer, allProps[info.observer]);\n    }\n  }\n\n  /**\n   * Configures an element `proto` to function with a given `template`.\n   * The element name `is` and extends `ext` must be specified for ShadyCSS\n   * style scoping.\n   *\n   * @param {PolymerElement} proto Element class prototype to add accessors\n   *   and effects to\n   * @param {!HTMLTemplateElement} template Template to process and bind\n   * @param {string} baseURI URL against which to resolve urls in\n   *   style element cssText\n   * @param {string} is Tag name (or type extension name) for this element\n   * @param {string=} ext For type extensions, the tag name that was extended\n   * @private\n   */\n  function finalizeTemplate(proto, template, baseURI, is, ext) {\n    // support `include=\"module-name\"`\n    var cssText = (0, _styleGather.cssFromModuleImports)(is) + (0, _styleGather.cssFromTemplate)(template, baseURI);\n    if (cssText) {\n      var style = document.createElement('style');\n      style.textContent = cssText;\n      template.content.insertBefore(style, template.content.firstChild);\n    }\n    if (window.ShadyCSS) {\n      window.ShadyCSS.prepareTemplate(template, is, ext);\n    }\n    proto._bindTemplate(template);\n  }\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @unrestricted\n   * @implements {Polymer_ElementMixin}\n   */\n\n  var PolymerElement = function (_polymerElementBase) {\n    _inherits(PolymerElement, _polymerElementBase);\n\n    _createClass(PolymerElement, null, [{\n      key: 'finalize',\n\n\n      /**\n       * Called automatically when the first element instance is created to\n       * ensure that class finalization work has been completed.\n       * May be called by users to eagerly perform class finalization work\n       * prior to the creation of the first element instance.\n       *\n       * Class finalization work generally includes meta-programming such as\n       * creating property accessors and any property effect metadata needed for\n       * the features used.\n       *\n       * @public\n       */\n      value: function finalize() {\n        if (!hasClassFinalized(this)) {\n          finalizeClassAndSuper(this);\n        }\n      }\n\n      /**\n       * Returns the template that will be stamped into this element's shadow root.\n       *\n       * If a `static get is()` getter is defined, the default implementation\n       * will return the first `<template>` in a `dom-module` whose `id`\n       * matches this element's `is`.\n       *\n       * Users may override this getter to return an arbitrary template\n       * (in which case the `is` getter is unnecessary). The template returned\n       * may be either an `HTMLTemplateElement` or a string that will be\n       * automatically parsed into a template.\n       *\n       * Note that when subclassing, if the super class overrode the default\n       * implementation and the subclass would like to provide an alternate\n       * template via a `dom-module`, it should override this getter and\n       * return `Polymer.DomModule.import(this.is, 'template')`.\n       *\n       * If a subclass would like to modify the super class template, it should\n       * clone it rather than modify it in place.  If the getter does expensive\n       * work such as cloning/modifying a template, it should memoize the\n       * template for maximum performance:\n       *\n       *   let memoizedTemplate;\n       *   class MySubClass extends MySuperClass {\n       *     static get template() {\n       *       if (!memoizedTemplate) {\n       *         memoizedTemplate = super.template.cloneNode(true);\n       *         let subContent = document.createElement('div');\n       *         subContent.textContent = 'This came from MySubClass';\n       *         memoizedTemplate.content.appendChild(subContent);\n       *       }\n       *       return memoizedTemplate;\n       *     }\n       *   }\n       *\n       * @return {HTMLTemplateElement|string} Template to be stamped\n       */\n\n    }, {\n      key: 'observedAttributes',\n\n\n      /**\n       * Standard Custom Elements V1 API.  The default implementation returns\n       * a list of dash-cased attributes based on a flattening of all properties\n       * declared in `static get properties()` for this element and any\n       * superclasses.\n       *\n       * @return {Array} Observed attribute list\n       */\n      get: function get() {\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('__observedAttributes', this))) {\n          var list = [];\n          var properties = propertiesForClass(this);\n          for (var prop in properties) {\n            list.push((0, _caseMap.camelToDashCase)(prop));\n          }\n          this.__observedAttributes = list;\n        }\n        return this.__observedAttributes;\n      }\n    }, {\n      key: 'template',\n      get: function get() {\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_template', this))) {\n          this._template = _domModule.DomModule && _domModule.DomModule.import(\n          /** @type PolymerElementConstructor*/this.is, 'template') ||\n          // note: implemented so a subclass can retrieve the super\n          // template; call the super impl this way so that `this` points\n          // to the superclass.\n          Object.getPrototypeOf( /** @type PolymerElementConstructor*/this.prototype).constructor.template;\n        }\n        return this._template;\n      }\n\n      /**\n       * Path matching the url from which the element was imported.\n       * This path is used to resolve url's in template style cssText.\n       * The `importPath` property is also set on element instances and can be\n       * used to create bindings relative to the import path.\n       * Defaults to the path matching the url containing a `dom-module` element\n       * matching this element's static `is` property.\n       * Note, this path should contain a trailing `/`.\n       *\n       * @return {string} The import path for this element class\n       */\n\n    }, {\n      key: 'importPath',\n      get: function get() {\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_importPath', this))) {\n          var module = _domModule.DomModule && _domModule.DomModule.import( /** @type PolymerElementConstructor */this.is);\n          this._importPath = module ? module.assetpath : '' || Object.getPrototypeOf( /** @type PolymerElementConstructor*/this.prototype).constructor.importPath;\n        }\n        return this._importPath;\n      }\n    }]);\n\n    function PolymerElement() {\n      _classCallCheck(this, PolymerElement);\n\n      /** @type {HTMLTemplateElement} */\n      var _this = _possibleConstructorReturn(this, (PolymerElement.__proto__ || Object.getPrototypeOf(PolymerElement)).call(this));\n\n      _this._template;\n      /** @type {string} */\n      _this._importPath;\n      /** @type {string} */\n      _this.rootPath;\n      /** @type {string} */\n      _this.importPath;\n      /** @type {StampedTemplate | HTMLElement | ShadowRoot} */\n      _this.root;\n      /** @type {!Object<string, !Node>} */\n      _this.$;\n      return _this;\n    }\n\n    /**\n     * Overrides the default `Polymer.PropertyAccessors` to ensure class\n     * metaprogramming related to property accessors and effects has\n     * completed (calls `finalize`).\n     *\n     * It also initializes any property defaults provided via `value` in\n     * `properties` metadata.\n     *\n     * @override\n     * @suppress {invalidCasts}\n     */\n\n\n    _createClass(PolymerElement, [{\n      key: '_initializeProperties',\n      value: function _initializeProperties() {\n        exports.instanceCount = instanceCount += 1;\n        this.constructor.finalize();\n        var importPath = this.constructor.importPath;\n        // note: finalize template when we have access to `localName` to\n        // avoid dependence on `is` for polyfilling styling.\n        if (this._template && !this._template.__polymerFinalized) {\n          this._template.__polymerFinalized = true;\n          var baseURI = importPath ? (0, _resolveUrl.resolveUrl)(importPath) : '';\n          finalizeTemplate( /** @type {!PolymerElement} */this.__proto__, this._template, baseURI,\n          /**@type {!HTMLElement}*/this.localName);\n        }\n        _get(PolymerElement.prototype.__proto__ || Object.getPrototypeOf(PolymerElement.prototype), '_initializeProperties', this).call(this);\n        // set path defaults\n        this.rootPath = _settings.rootPath;\n        this.importPath = importPath;\n        // apply property defaults...\n        var p$ = propertyDefaultsForClass(this.constructor);\n        if (!p$) {\n          return;\n        }\n        for (var p in p$) {\n          var info = p$[p];\n          // Don't set default value if there is already an own property, which\n          // happens when a `properties` property with default but no effects had\n          // a property set (e.g. bound) by its host before upgrade\n          if (!this.hasOwnProperty(p)) {\n            var value = typeof info.value == 'function' ? info.value.call(this) : info.value;\n            // Set via `_setProperty` if there is an accessor, to enable\n            // initializing readOnly property defaults\n            if (this._hasAccessor(p)) {\n              this._setPendingProperty(p, value, true);\n            } else {\n              this[p] = value;\n            }\n          }\n        }\n      }\n\n      /**\n       * Provides a default implementation of the standard Custom Elements\n       * `connectedCallback`.\n       *\n       * The default implementation enables the property effects system and\n       * flushes any pending properties, and updates shimmed CSS properties\n       * when using the ShadyCSS scoping/custom properties polyfill.\n       *\n       * @suppress {invalidCasts}\n       */\n\n    }, {\n      key: 'connectedCallback',\n      value: function connectedCallback() {\n        if (window.ShadyCSS && this._template) {\n          window.ShadyCSS.styleElement( /** @type {!HTMLElement} */this);\n        }\n        this._enableProperties();\n      }\n\n      /**\n       * Provides a default implementation of the standard Custom Elements\n       * `disconnectedCallback`.\n       */\n\n    }, {\n      key: 'disconnectedCallback',\n      value: function disconnectedCallback() {}\n\n      /**\n       * Stamps the element template.\n       *\n       * @override\n       */\n\n    }, {\n      key: 'ready',\n      value: function ready() {\n        if (this._template) {\n          this.root = this._stampTemplate(this._template);\n          this.$ = this.root.$;\n        }\n        _get(PolymerElement.prototype.__proto__ || Object.getPrototypeOf(PolymerElement.prototype), 'ready', this).call(this);\n      }\n\n      /**\n       * Implements `PropertyEffects`'s `_readyClients` call. Attaches\n       * element dom by calling `_attachDom` with the dom stamped from the\n       * element's template via `_stampTemplate`. Note that this allows\n       * client dom to be attached to the element prior to any observers\n       * running.\n       *\n       * @override\n       */\n\n    }, {\n      key: '_readyClients',\n      value: function _readyClients() {\n        if (this._template) {\n          this.root = this._attachDom( /** @type {StampedTemplate} */this.root);\n        }\n        // The super._readyClients here sets the clients initialized flag.\n        // We must wait to do this until after client dom is created/attached\n        // so that this flag can be checked to prevent notifications fired\n        // during this process from being handled before clients are ready.\n        _get(PolymerElement.prototype.__proto__ || Object.getPrototypeOf(PolymerElement.prototype), '_readyClients', this).call(this);\n      }\n\n      /**\n       * Attaches an element's stamped dom to itself. By default,\n       * this method creates a `shadowRoot` and adds the dom to it.\n       * However, this method may be overridden to allow an element\n       * to put its dom in another location.\n       *\n       * @throws {Error}\n       * @suppress {missingReturn}\n       * @param {StampedTemplate} dom to attach to the element.\n       * @return {ShadowRoot} node to which the dom has been attached.\n       */\n\n    }, {\n      key: '_attachDom',\n      value: function _attachDom(dom) {\n        if (this.attachShadow) {\n          if (dom) {\n            if (!this.shadowRoot) {\n              this.attachShadow({ mode: 'open' });\n            }\n            this.shadowRoot.appendChild(dom);\n            return this.shadowRoot;\n          }\n          return null;\n        } else {\n          throw new Error('ShadowDOM not available. ' +\n          // TODO(sorvell): move to compile-time conditional when supported\n          'Polymer.Element can create dom as children instead of in ' + 'ShadowDOM by setting `this.root = this;\\` before \\`ready\\`.');\n        }\n      }\n\n      /**\n       * Provides a default implementation of the standard Custom Elements\n       * `attributeChangedCallback`.\n       *\n       * By default, attributes declared in `properties` metadata are\n       * deserialized using their `type` information to properties of the\n       * same name.  \"Dash-cased\" attributes are deserialzed to \"camelCase\"\n       * properties.\n       *\n       * @param {string} name Name of attribute.\n       * @param {?string} old Old value of attribute.\n       * @param {?string} value Current value of attribute.\n       * @override\n       */\n\n    }, {\n      key: 'attributeChangedCallback',\n      value: function attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n          var property = caseMap.dashToCamelCase(name);\n          var type = propertiesForClass(this.constructor)[property].type;\n          if (!this._hasReadOnlyEffect(property)) {\n            this._attributeToProperty(name, value, type);\n          }\n        }\n      }\n\n      /**\n       * When using the ShadyCSS scoping and custom property shim, causes all\n       * shimmed styles in this element (and its subtree) to be updated\n       * based on current custom property values.\n       *\n       * The optional parameter overrides inline custom property styles with an\n       * object of properties where the keys are CSS properties, and the values\n       * are strings.\n       *\n       * Example: `this.updateStyles({'--color': 'blue'})`\n       *\n       * These properties are retained unless a value of `null` is set.\n       *\n       * @param {Object=} properties Bag of custom property key/values to\n       *   apply to this element.\n       * @suppress {invalidCasts}\n       */\n\n    }, {\n      key: 'updateStyles',\n      value: function updateStyles(properties) {\n        if (window.ShadyCSS) {\n          window.ShadyCSS.styleSubtree( /** @type {!HTMLElement} */this, properties);\n        }\n      }\n\n      /**\n       * Rewrites a given URL relative to a base URL. The base URL defaults to\n       * the original location of the document containing the `dom-module` for\n       * this element. This method will return the same URL before and after\n       * bundling.\n       *\n       * @param {string} url URL to resolve.\n       * @param {string=} base Optional base URL to resolve against, defaults\n       * to the element's `importPath`\n       * @return {string} Rewritten URL relative to base\n       */\n\n    }, {\n      key: 'resolveUrl',\n      value: function resolveUrl(url, base) {\n        if (!base && this.importPath) {\n          base = (0, _resolveUrl.resolveUrl)(this.importPath);\n        }\n        return (0, _resolveUrl.resolveUrl)(url, base);\n      }\n\n      /**\n       * Overrides `PropertyAccessors` to add map of dynamic functions on\n       * template info, for consumption by `PropertyEffects` template binding\n       * code. This map determines which method templates should have accessors\n       * created for them.\n       *\n       * @override\n       * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n       */\n\n    }], [{\n      key: '_parseTemplateContent',\n      value: function _parseTemplateContent(template, templateInfo, nodeInfo) {\n        templateInfo.dynamicFns = templateInfo.dynamicFns || propertiesForClass(this);\n        return _get(PolymerElement.__proto__ || Object.getPrototypeOf(PolymerElement), '_parseTemplateContent', this).call(this, template, templateInfo, nodeInfo);\n      }\n    }]);\n\n    return PolymerElement;\n  }(polymerElementBase);\n\n  return PolymerElement;\n});\n\nvar instanceCount = exports.instanceCount = 0;\nvar registrations = exports.registrations = [];\n\nfunction _regLog(prototype) {\n  console.log('[' + prototype.is + ']: registered');\n}\n\nfunction register(prototype) {\n  registrations.push(prototype);\n  undefined && _regLog(prototype);\n}\n\nfunction dumpRegistrations() {\n  registrations.forEach(_regLog);\n}\n\nvar updateStyles = exports.updateStyles = function updateStyles(props) {\n  if (window.ShadyCSS) {\n    window.ShadyCSS.styleDocument(props);\n  }\n};\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cssFromModules = cssFromModules;\nexports.cssFromModule = cssFromModule;\nexports.cssFromTemplate = cssFromTemplate;\nexports.cssFromModuleImports = cssFromModuleImports;\nexports._cssFromModuleImports = _cssFromModuleImports;\n\nvar _resolveUrl = __webpack_require__(9);\n\nvar MODULE_STYLE_LINK_SELECTOR = 'link[rel=import][type~=css]';\nvar INCLUDE_ATTR = 'include';\n\nfunction importModule(moduleId) {\n  var /** Polymer.DomModule */PolymerDomModule = customElements.get('dom-module');\n  if (!PolymerDomModule) {\n    return null;\n  }\n  return PolymerDomModule.import(moduleId);\n}\n\n/** @typedef {{assetpath: string}} */\nvar templateWithAssetPath = void 0; // eslint-disable-line no-unused-vars\n\nfunction cssFromModules(moduleIds) {\n  var modules = moduleIds.trim().split(/\\s+/);\n  var cssText = '';\n  for (var i = 0; i < modules.length; i++) {\n    cssText += cssFromModule(modules[i]);\n  }\n  return cssText;\n}\n\nfunction cssFromModule(moduleId) {\n  var m = importModule(moduleId);\n  if (m && m._cssText === undefined) {\n    // module imports: <link rel=\"import\" type=\"css\">\n    var cssText = _cssFromModuleImports(m);\n    // include css from the first template in the module\n    var t = m.querySelector('template');\n    if (t) {\n      cssText += cssFromTemplate(t, /** @type {templateWithAssetPath} */m.assetpath);\n    }\n    m._cssText = cssText || null;\n  }\n  if (!m) {\n    console.warn('Could not find style data in module named', moduleId);\n  }\n  return m && m._cssText || '';\n}\n\nfunction cssFromTemplate(template, baseURI) {\n  var cssText = '';\n  // if element is a template, get content from its .content\n  var e$ = template.content.querySelectorAll('style');\n  for (var i = 0; i < e$.length; i++) {\n    var e = e$[i];\n    // support style sharing by allowing styles to \"include\"\n    // other dom-modules that contain styling\n    var include = e.getAttribute(INCLUDE_ATTR);\n    if (include) {\n      cssText += cssFromModules(include);\n    }\n    e.parentNode.removeChild(e);\n    cssText += baseURI ? (0, _resolveUrl.resolveCss)(e.textContent, baseURI) : e.textContent;\n  }\n  return cssText;\n}\n\nfunction cssFromModuleImports(moduleId) {\n  var m = importModule(moduleId);\n  return m ? _cssFromModuleImports(m) : '';\n}\n\nfunction _cssFromModuleImports(module) {\n  var cssText = '';\n  var p$ = module.querySelectorAll(MODULE_STYLE_LINK_SELECTOR);\n  for (var i = 0; i < p$.length; i++) {\n    var p = p$[i];\n    if (p.import) {\n      var importDoc = p.import;\n      // NOTE: polyfill affordance.\n      // under the HTMLImports polyfill, there will be no 'body',\n      // but the import pseudo-doc can be used directly.\n      var container = importDoc.body ? importDoc.body : importDoc;\n      cssText += (0, _resolveUrl.resolveCss)(container.textContent, importDoc.baseURI);\n    }\n  }\n  return cssText;\n}\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DomModule = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n__webpack_require__(0);\n\nvar _resolveUrl = __webpack_require__(9);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar modules = {};\nvar lcModules = {};\nfunction findModule(id) {\n  return modules[id] || lcModules[id.toLowerCase()];\n}\n\nfunction styleOutsideTemplateCheck(inst) {\n  if (inst.querySelector('style')) {\n    console.warn('dom-module %s has style outside template', inst.id);\n  }\n}\n\n/**\n * The `dom-module` element registers the dom it contains to the name given\n * by the module's id attribute. It provides a unified database of dom\n * accessible via its static `import` API.\n *\n * A key use case of `dom-module` is for providing custom element `<template>`s\n * via HTML imports that are parsed by the native HTML parser, that can be\n * relocated during a bundling pass and still looked up by `id`.\n *\n * Example:\n *\n *     <dom-module id=\"foo\">\n *       <img src=\"stuff.png\">\n *     </dom-module>\n *\n * Then in code in some other location that cannot access the dom-module above\n *\n *     let img = customElements.get('dom-module').import('foo', 'img');\n *\n * @customElement\n * @extends HTMLElement\n * @memberof Polymer\n * @summary Custom element that provides a registry of relocatable DOM content\n *   by `id` that is agnostic to bundling.\n * @unrestricted\n */\n\nvar DomModule = function (_HTMLElement) {\n  _inherits(DomModule, _HTMLElement);\n\n  function DomModule() {\n    _classCallCheck(this, DomModule);\n\n    return _possibleConstructorReturn(this, (DomModule.__proto__ || Object.getPrototypeOf(DomModule)).apply(this, arguments));\n  }\n\n  _createClass(DomModule, [{\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, old, value) {\n      if (old !== value) {\n        this.register();\n      }\n    }\n\n    /**\n     * The absolute URL of the original location of this `dom-module`.\n     *\n     * This value will differ from this element's `ownerDocument` in the\n     * following ways:\n     * - Takes into account any `assetpath` attribute added during bundling\n     *   to indicate the original location relative to the bundled location\n     * - Uses the HTMLImports polyfill's `importForElement` API to ensure\n     *   the path is relative to the import document's location since\n     *   `ownerDocument` is not currently polyfilled\n     */\n\n  }, {\n    key: 'register',\n\n\n    /**\n     * Registers the dom-module at a given id. This method should only be called\n     * when a dom-module is imperatively created. For\n     * example, `document.createElement('dom-module').register('foo')`.\n     * @param {string=} id The id at which to register the dom-module.\n     */\n    value: function register(id) {\n      id = id || this.id;\n      if (id) {\n        this.id = id;\n        // store id separate from lowercased id so that\n        // in all cases mixedCase id will stored distinctly\n        // and lowercase version is a fallback\n        modules[id] = this;\n        lcModules[id.toLowerCase()] = this;\n        styleOutsideTemplateCheck(this);\n      }\n    }\n  }, {\n    key: 'assetpath',\n    get: function get() {\n      // Don't override existing assetpath.\n      if (!this.__assetpath) {\n        // note: assetpath set via an attribute must be relative to this\n        // element's location; accomodate polyfilled HTMLImports\n        var owner = window.HTMLImports && HTMLImports.importForElement ? HTMLImports.importForElement(this) || document : this.ownerDocument;\n        var url = (0, _resolveUrl.resolveUrl)(this.getAttribute('assetpath') || '', owner.baseURI);\n        this.__assetpath = (0, _resolveUrl.pathFromUrl)(url);\n      }\n      return this.__assetpath;\n    }\n  }], [{\n    key: 'import',\n\n\n    /**\n     * Retrieves the element specified by the css `selector` in the module\n     * registered by `id`. For example, this.import('foo', 'img');\n     * @param {string} id The id of the dom-module in which to search.\n     * @param {string=} selector The css selector by which to find the element.\n     * @return {Element} Returns the element which matches `selector` in the\n     * module registered at the specified `id`.\n     */\n    value: function _import(id, selector) {\n      if (id) {\n        var m = findModule(id);\n        if (m && selector) {\n          return m.querySelector(selector);\n        }\n        return m;\n      }\n      return null;\n    }\n  }, {\n    key: 'observedAttributes',\n    get: function get() {\n      return ['id'];\n    }\n  }]);\n\n  return DomModule;\n}(HTMLElement);\n\nDomModule.prototype['modules'] = modules;\n\ncustomElements.define('dom-module', DomModule);\n\nexports.DomModule = DomModule;\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PropertyAccessors = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n__webpack_require__(0);\n\nvar _mixin = __webpack_require__(4);\n\nvar _caseMap = __webpack_require__(11);\n\nvar caseMap$0 = _interopRequireWildcard(_caseMap);\n\nvar _async = __webpack_require__(8);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar caseMap = caseMap$0;\n\nvar microtask = _async.microTask;\n\n// Save map of native properties; this forms a blacklist or properties\n// that won't have their values \"saved\" by `saveAccessorValue`, since\n// reading from an HTMLElement accessor from the context of a prototype throws\nvar nativeProperties = {};\nvar proto = HTMLElement.prototype;\nwhile (proto) {\n  var props = Object.getOwnPropertyNames(proto);\n  for (var i = 0; i < props.length; i++) {\n    nativeProperties[props[i]] = true;\n  }\n  proto = Object.getPrototypeOf(proto);\n}\n\n/**\n * Used to save the value of a property that will be overridden with\n * an accessor. If the `model` is a prototype, the values will be saved\n * in `__dataProto`, and it's up to the user (or downstream mixin) to\n * decide how/when to set these values back into the accessors.\n * If `model` is already an instance (it has a `__data` property), then\n * the value will be set as a pending property, meaning the user should\n * call `_invalidateProperties` or `_flushProperties` to take effect\n *\n * @param {Object} model Prototype or instance\n * @param {string} property Name of property\n * @private\n */\nfunction saveAccessorValue(model, property) {\n  // Don't read/store value for any native properties since they could throw\n  if (!nativeProperties[property]) {\n    var value = model[property];\n    if (value !== undefined) {\n      if (model.__data) {\n        // Adding accessor to instance; update the property\n        // It is the user's responsibility to call _flushProperties\n        model._setPendingProperty(property, value);\n      } else {\n        // Adding accessor to proto; save proto's value for instance-time use\n        if (!model.__dataProto) {\n          model.__dataProto = {};\n        } else if (!model.hasOwnProperty(JSCompiler_renameProperty('__dataProto', model))) {\n          model.__dataProto = Object.create(model.__dataProto);\n        }\n        model.__dataProto[property] = value;\n      }\n    }\n  }\n}\n\nvar PropertyAccessors = exports.PropertyAccessors = (0, _mixin.dedupingMixin)(function (superClass) {\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_PropertyAccessors}\n   * @extends HTMLElement\n   * @unrestricted\n   */\n  var PropertyAccessors = function (_superClass) {\n    _inherits(PropertyAccessors, _superClass);\n\n    _createClass(PropertyAccessors, null, [{\n      key: 'createPropertiesForAttributes',\n\n\n      /**\n       * Generates property accessors for all attributes in the standard\n       * static `observedAttributes` array.\n       *\n       * Attribute names are mapped to property names using the `dash-case` to\n       * `camelCase` convention\n       *\n       */\n      value: function createPropertiesForAttributes() {\n        var a$ = this.observedAttributes;\n        for (var _i = 0; _i < a$.length; _i++) {\n          this.prototype._createPropertyAccessor(caseMap.dashToCamelCase(a$[_i]));\n        }\n      }\n    }]);\n\n    function PropertyAccessors() {\n      _classCallCheck(this, PropertyAccessors);\n\n      /** @type {boolean} */\n      var _this = _possibleConstructorReturn(this, (PropertyAccessors.__proto__ || Object.getPrototypeOf(PropertyAccessors)).call(this));\n\n      _this.__serializing;\n      /** @type {number} */\n      _this.__dataCounter;\n      /** @type {boolean} */\n      _this.__dataEnabled;\n      /** @type {boolean} */\n      _this.__dataReady;\n      /** @type {boolean} */\n      _this.__dataInvalid;\n      /** @type {!Object} */\n      _this.__data;\n      /** @type {Object} */\n      _this.__dataPending;\n      /** @type {Object} */\n      _this.__dataOld;\n      /** @type {Object} */\n      _this.__dataProto;\n      /** @type {Object} */\n      _this.__dataHasAccessor;\n      /** @type {Object} */\n      _this.__dataInstanceProps;\n      _this._initializeProperties();\n      return _this;\n    }\n\n    /**\n     * Implements native Custom Elements `attributeChangedCallback` to\n     * set an attribute value to a property via `_attributeToProperty`.\n     *\n     * @param {string} name Name of attribute that changed\n     * @param {?string} old Old attribute value\n     * @param {?string} value New attribute value\n     */\n\n\n    _createClass(PropertyAccessors, [{\n      key: 'attributeChangedCallback',\n      value: function attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n          this._attributeToProperty(name, value);\n        }\n      }\n\n      /**\n       * Initializes the local storage for property accessors.\n       *\n       * Provided as an override point for performing any setup work prior\n       * to initializing the property accessor system.\n       *\n       * @protected\n       */\n\n    }, {\n      key: '_initializeProperties',\n      value: function _initializeProperties() {\n        this.__serializing = false;\n        this.__dataCounter = 0;\n        this.__dataEnabled = false;\n        this.__dataReady = false;\n        this.__dataInvalid = false;\n        this.__data = {};\n        this.__dataPending = null;\n        this.__dataOld = null;\n        if (this.__dataProto) {\n          this._initializeProtoProperties(this.__dataProto);\n          this.__dataProto = null;\n        }\n        // Capture instance properties; these will be set into accessors\n        // during first flush. Don't set them here, since we want\n        // these to overwrite defaults/constructor assignments\n        for (var p in this.__dataHasAccessor) {\n          if (this.hasOwnProperty(p)) {\n            this.__dataInstanceProps = this.__dataInstanceProps || {};\n            this.__dataInstanceProps[p] = this[p];\n            delete this[p];\n          }\n        }\n      }\n\n      /**\n       * Called at instance time with bag of properties that were overwritten\n       * by accessors on the prototype when accessors were created.\n       *\n       * The default implementation sets these properties back into the\n       * setter at instance time.  This method is provided as an override\n       * point for customizing or providing more efficient initialization.\n       *\n       * @param {Object} props Bag of property values that were overwritten\n       *   when creating property accessors.\n       * @protected\n       */\n\n    }, {\n      key: '_initializeProtoProperties',\n      value: function _initializeProtoProperties(props) {\n        for (var p in props) {\n          this._setProperty(p, props[p]);\n        }\n      }\n\n      /**\n       * Called at ready time with bag of instance properties that overwrote\n       * accessors when the element upgraded.\n       *\n       * The default implementation sets these properties back into the\n       * setter at ready time.  This method is provided as an override\n       * point for customizing or providing more efficient initialization.\n       *\n       * @param {Object} props Bag of property values that were overwritten\n       *   when creating property accessors.\n       * @protected\n       */\n\n    }, {\n      key: '_initializeInstanceProperties',\n      value: function _initializeInstanceProperties(props) {\n        Object.assign(this, props);\n      }\n\n      /**\n       * Ensures the element has the given attribute. If it does not,\n       * assigns the given value to the attribute.\n       *\n       *\n       * @param {string} attribute Name of attribute to ensure is set.\n       * @param {string} value of the attribute.\n       */\n\n    }, {\n      key: '_ensureAttribute',\n      value: function _ensureAttribute(attribute, value) {\n        if (!this.hasAttribute(attribute)) {\n          this._valueToNodeAttribute(this, value, attribute);\n        }\n      }\n\n      /**\n       * Deserializes an attribute to its associated property.\n       *\n       * This method calls the `_deserializeValue` method to convert the string to\n       * a typed value.\n       *\n       * @param {string} attribute Name of attribute to deserialize.\n       * @param {?string} value of the attribute.\n       * @param {*=} type type to deserialize to.\n       */\n\n    }, {\n      key: '_attributeToProperty',\n      value: function _attributeToProperty(attribute, value, type) {\n        // Don't deserialize back to property if currently reflecting\n        if (!this.__serializing) {\n          var property = caseMap.dashToCamelCase(attribute);\n          this[property] = this._deserializeValue(value, type);\n        }\n      }\n\n      /**\n       * Serializes a property to its associated attribute.\n       *\n       * @param {string} property Property name to reflect.\n       * @param {string=} attribute Attribute name to reflect.\n       * @param {*=} value Property value to refect.\n       */\n\n    }, {\n      key: '_propertyToAttribute',\n      value: function _propertyToAttribute(property, attribute, value) {\n        this.__serializing = true;\n        value = arguments.length < 3 ? this[property] : value;\n        this._valueToNodeAttribute(this, value, attribute || caseMap.camelToDashCase(property));\n        this.__serializing = false;\n      }\n\n      /**\n       * Sets a typed value to an HTML attribute on a node.\n       *\n       * This method calls the `_serializeValue` method to convert the typed\n       * value to a string.  If the `_serializeValue` method returns `undefined`,\n       * the attribute will be removed (this is the default for boolean\n       * type `false`).\n       *\n       * @param {Element} node Element to set attribute to.\n       * @param {*} value Value to serialize.\n       * @param {string} attribute Attribute name to serialize to.\n       */\n\n    }, {\n      key: '_valueToNodeAttribute',\n      value: function _valueToNodeAttribute(node, value, attribute) {\n        var str = this._serializeValue(value);\n        if (str === undefined) {\n          node.removeAttribute(attribute);\n        } else {\n          node.setAttribute(attribute, str);\n        }\n      }\n\n      /**\n       * Converts a typed JavaScript value to a string.\n       *\n       * This method is called by Polymer when setting JS property values to\n       * HTML attributes.  Users may override this method on Polymer element\n       * prototypes to provide serialization for custom types.\n       *\n       * @param {*} value Property value to serialize.\n       * @return {string | undefined} String serialized from the provided property value.\n       */\n\n    }, {\n      key: '_serializeValue',\n      value: function _serializeValue(value) {\n        /* eslint-disable no-fallthrough */\n        switch (typeof value === 'undefined' ? 'undefined' : _typeof(value)) {\n          case 'boolean':\n            return value ? '' : undefined;\n\n          case 'object':\n            if (value instanceof Date) {\n              return value.toString();\n            } else if (value) {\n              try {\n                return JSON.stringify(value);\n              } catch (x) {\n                return '';\n              }\n            }\n\n          default:\n            return value != null ? value.toString() : undefined;\n        }\n      }\n\n      /**\n       * Converts a string to a typed JavaScript value.\n       *\n       * This method is called by Polymer when reading HTML attribute values to\n       * JS properties.  Users may override this method on Polymer element\n       * prototypes to provide deserialization for custom `type`s.  Note,\n       * the `type` argument is the value of the `type` field provided in the\n       * `properties` configuration object for a given property, and is\n       * by convention the constructor for the type to deserialize.\n       *\n       * Note: The return value of `undefined` is used as a sentinel value to\n       * indicate the attribute should be removed.\n       *\n       * @param {?string} value Attribute value to deserialize.\n       * @param {*=} type Type to deserialize the string to.\n       * @return {*} Typed value deserialized from the provided string.\n       */\n\n    }, {\n      key: '_deserializeValue',\n      value: function _deserializeValue(value, type) {\n        /**\n         * @type {*}\n         */\n        var outValue = void 0;\n        switch (type) {\n          case Number:\n            outValue = Number(value);\n            break;\n\n          case Boolean:\n            outValue = value !== null;\n            break;\n\n          case Object:\n            try {\n              outValue = JSON.parse( /** @type string */value);\n            } catch (x) {\n              // allow non-JSON literals like Strings and Numbers\n            }\n            break;\n\n          case Array:\n            try {\n              outValue = JSON.parse( /** @type string */value);\n            } catch (x) {\n              outValue = null;\n              console.warn('Polymer::Attributes: couldn\\'t decode Array as JSON: ' + value);\n            }\n            break;\n\n          case Date:\n            outValue = new Date(value);\n            break;\n\n          case String:\n          default:\n            outValue = value;\n            break;\n        }\n\n        return outValue;\n      }\n      /* eslint-enable no-fallthrough */\n\n      /**\n       * Creates a setter/getter pair for the named property with its own\n       * local storage.  The getter returns the value in the local storage,\n       * and the setter calls `_setProperty`, which updates the local storage\n       * for the property and enqueues a `_propertiesChanged` callback.\n       *\n       * This method may be called on a prototype or an instance.  Calling\n       * this method may overwrite a property value that already exists on\n       * the prototype/instance by creating the accessor.  When calling on\n       * a prototype, any overwritten values are saved in `__dataProto`,\n       * and it is up to the subclasser to decide how/when to set those\n       * properties back into the accessor.  When calling on an instance,\n       * the overwritten value is set via `_setPendingProperty`, and the\n       * user should call `_invalidateProperties` or `_flushProperties`\n       * for the values to take effect.\n       *\n       * @param {string} property Name of the property\n       * @param {boolean=} readOnly When true, no setter is created; the\n       *   protected `_setProperty` function must be used to set the property\n       * @protected\n       */\n\n    }, {\n      key: '_createPropertyAccessor',\n      value: function _createPropertyAccessor(property, readOnly) {\n        if (!this.hasOwnProperty('__dataHasAccessor')) {\n          this.__dataHasAccessor = Object.assign({}, this.__dataHasAccessor);\n        }\n        if (!this.__dataHasAccessor[property]) {\n          this.__dataHasAccessor[property] = true;\n          saveAccessorValue(this, property);\n          Object.defineProperty(this, property, {\n            /* eslint-disable valid-jsdoc */\n            /** @this {PropertyAccessors} */\n            get: function get() {\n              return this.__data[property];\n            },\n            /** @this {PropertyAccessors} */\n            set: readOnly ? function () {} : function (value) {\n              this._setProperty(property, value);\n            }\n            /* eslint-enable */\n          });\n        }\n      }\n\n      /**\n       * Returns true if this library created an accessor for the given property.\n       *\n       * @param {string} property Property name\n       * @return {boolean} True if an accessor was created\n       */\n\n    }, {\n      key: '_hasAccessor',\n      value: function _hasAccessor(property) {\n        return this.__dataHasAccessor && this.__dataHasAccessor[property];\n      }\n\n      /**\n       * Updates the local storage for a property (via `_setPendingProperty`)\n       * and enqueues a `_proeprtiesChanged` callback.\n       *\n       * @param {string} property Name of the property\n       * @param {*} value Value to set\n       * @protected\n       */\n\n    }, {\n      key: '_setProperty',\n      value: function _setProperty(property, value) {\n        if (this._setPendingProperty(property, value)) {\n          this._invalidateProperties();\n        }\n      }\n\n      /**\n       * Updates the local storage for a property, records the previous value,\n       * and adds it to the set of \"pending changes\" that will be passed to the\n       * `_propertiesChanged` callback.  This method does not enqueue the\n       * `_propertiesChanged` callback.\n       *\n       * @param {string} property Name of the property\n       * @param {*} value Value to set\n       * @return {boolean} Returns true if the property changed\n       * @protected\n       */\n\n    }, {\n      key: '_setPendingProperty',\n      value: function _setPendingProperty(property, value) {\n        var old = this.__data[property];\n        var changed = this._shouldPropertyChange(property, value, old);\n        if (changed) {\n          if (!this.__dataPending) {\n            this.__dataPending = {};\n            this.__dataOld = {};\n          }\n          // Ensure old is captured from the last turn\n          if (this.__dataOld && !(property in this.__dataOld)) {\n            this.__dataOld[property] = old;\n          }\n          this.__data[property] = value;\n          this.__dataPending[property] = value;\n        }\n        return changed;\n      }\n\n      /**\n       * Returns true if the specified property has a pending change.\n       *\n       * @param {string} prop Property name\n       * @return {boolean} True if property has a pending change\n       * @protected\n       */\n\n    }, {\n      key: '_isPropertyPending',\n      value: function _isPropertyPending(prop) {\n        return Boolean(this.__dataPending && prop in this.__dataPending);\n      }\n\n      /**\n       * Marks the properties as invalid, and enqueues an async\n       * `_propertiesChanged` callback.\n       *\n       * @protected\n       */\n\n    }, {\n      key: '_invalidateProperties',\n      value: function _invalidateProperties() {\n        var _this2 = this;\n\n        if (!this.__dataInvalid && this.__dataReady) {\n          this.__dataInvalid = true;\n          microtask.run(function () {\n            if (_this2.__dataInvalid) {\n              _this2.__dataInvalid = false;\n              _this2._flushProperties();\n            }\n          });\n        }\n      }\n\n      /**\n       * Call to enable property accessor processing. Before this method is\n       * called accessor values will be set but side effects are\n       * queued. When called, any pending side effects occur immediately.\n       * For elements, generally `connectedCallback` is a normal spot to do so.\n       * It is safe to call this method multiple times as it only turns on\n       * property accessors once.\n       */\n\n    }, {\n      key: '_enableProperties',\n      value: function _enableProperties() {\n        if (!this.__dataEnabled) {\n          this.__dataEnabled = true;\n          if (this.__dataInstanceProps) {\n            this._initializeInstanceProperties(this.__dataInstanceProps);\n            this.__dataInstanceProps = null;\n          }\n          this.ready();\n        }\n      }\n\n      /**\n       * Calls the `_propertiesChanged` callback with the current set of\n       * pending changes (and old values recorded when pending changes were\n       * set), and resets the pending set of changes. Generally, this method\n       * should not be called in user code.\n       *\n       *\n       * @protected\n       */\n\n    }, {\n      key: '_flushProperties',\n      value: function _flushProperties() {\n        if (this.__dataPending && this.__dataOld) {\n          var changedProps = this.__dataPending;\n          this.__dataPending = null;\n          this.__dataCounter++;\n          this._propertiesChanged(this.__data, changedProps, this.__dataOld);\n          this.__dataCounter--;\n        }\n      }\n\n      /**\n       * Lifecycle callback called the first time properties are being flushed.\n       * Prior to `ready`, all property sets through accessors are queued and\n       * their effects are flushed after this method returns.\n       *\n       * Users may override this function to implement behavior that is\n       * dependent on the element having its properties initialized, e.g.\n       * from defaults (initialized from `constructor`, `_initializeProperties`),\n       * `attributeChangedCallback`, or values propagated from host e.g. via\n       * bindings.  `super.ready()` must be called to ensure the data system\n       * becomes enabled.\n       *\n       * @public\n       */\n\n    }, {\n      key: 'ready',\n      value: function ready() {\n        this.__dataReady = true;\n        // Run normal flush\n        this._flushProperties();\n      }\n\n      /**\n       * Callback called when any properties with accessors created via\n       * `_createPropertyAccessor` have been set.\n       *\n       * @param {!Object} currentProps Bag of all current accessor values\n       * @param {!Object} changedProps Bag of properties changed since the last\n       *   call to `_propertiesChanged`\n       * @param {!Object} oldProps Bag of previous values for each property\n       *   in `changedProps`\n       * @protected\n       */\n\n    }, {\n      key: '_propertiesChanged',\n      value: function _propertiesChanged(currentProps, changedProps, oldProps) {} // eslint-disable-line no-unused-vars\n\n\n      /**\n       * Method called to determine whether a property value should be\n       * considered as a change and cause the `_propertiesChanged` callback\n       * to be enqueued.\n       *\n       * The default implementation returns `true` for primitive types if a\n       * strict equality check fails, and returns `true` for all Object/Arrays.\n       * The method always returns false for `NaN`.\n       *\n       * Override this method to e.g. provide stricter checking for\n       * Objects/Arrays when using immutable patterns.\n       *\n       * @param {string} property Property name\n       * @param {*} value New property value\n       * @param {*} old Previous property value\n       * @return {boolean} Whether the property should be considered a change\n       *   and enqueue a `_proeprtiesChanged` callback\n       * @protected\n       */\n\n    }, {\n      key: '_shouldPropertyChange',\n      value: function _shouldPropertyChange(property, value, old) {\n        return (\n          // Strict equality check\n          old !== value && (\n          // This ensures (old==NaN, value==NaN) always returns false\n          old === old || value === value)\n        );\n      }\n    }]);\n\n    return PropertyAccessors;\n  }(superClass);\n\n  return PropertyAccessors;\n});\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TemplateStamp = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n__webpack_require__(0);\n\nvar _mixin = __webpack_require__(4);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// 1.x backwards-compatible auto-wrapper for template type extensions\n// This is a clear layering violation and gives favored-nation status to\n// dom-if and dom-repeat templates.  This is a conceit we're choosing to keep\n// a.) to ease 1.x backwards-compatibility due to loss of `is`, and\n// b.) to maintain if/repeat capability in parser-constrained elements\n//     (e.g. table, select) in lieu of native CE type extensions without\n//     massive new invention in this space (e.g. directive system)\nvar templateExtensions = {\n  'dom-if': true,\n  'dom-repeat': true\n};\nfunction wrapTemplateExtension(node) {\n  var is = node.getAttribute('is');\n  if (is && templateExtensions[is]) {\n    var t = node;\n    t.removeAttribute('is');\n    node = t.ownerDocument.createElement(is);\n    t.parentNode.replaceChild(node, t);\n    node.appendChild(t);\n    while (t.attributes.length) {\n      node.setAttribute(t.attributes[0].name, t.attributes[0].value);\n      t.removeAttribute(t.attributes[0].name);\n    }\n  }\n  return node;\n}\n\nfunction findTemplateNode(root, nodeInfo) {\n  // recursively ascend tree until we hit root\n  var parent = nodeInfo.parentInfo && findTemplateNode(root, nodeInfo.parentInfo);\n  // unwind the stack, returning the indexed node at each level\n  if (parent) {\n    // note: marginally faster than indexing via childNodes\n    // (http://jsperf.com/childnodes-lookup)\n    for (var n = parent.firstChild, i = 0; n; n = n.nextSibling) {\n      if (nodeInfo.parentIndex === i++) {\n        return n;\n      }\n    }\n  } else {\n    return root;\n  }\n}\n\n// construct `$` map (from id annotations)\nfunction applyIdToMap(inst, map, node, nodeInfo) {\n  if (nodeInfo.id) {\n    map[nodeInfo.id] = node;\n  }\n}\n\n// install event listeners (from event annotations)\nfunction applyEventListener(inst, node, nodeInfo) {\n  if (nodeInfo.events && nodeInfo.events.length) {\n    for (var j = 0, e$ = nodeInfo.events, e; j < e$.length && (e = e$[j]); j++) {\n      inst._addMethodEventListenerToNode(node, e.name, e.value, inst);\n    }\n  }\n}\n\n// push configuration references at configure time\nfunction applyTemplateContent(inst, node, nodeInfo) {\n  if (nodeInfo.templateInfo) {\n    node._templateInfo = nodeInfo.templateInfo;\n  }\n}\n\nfunction createNodeEventHandler(context, eventName, methodName) {\n  // Instances can optionally have a _methodHost which allows redirecting where\n  // to find methods. Currently used by `templatize`.\n  context = context._methodHost || context;\n  var handler = function handler(e) {\n    if (context[methodName]) {\n      context[methodName](e, e.detail);\n    } else {\n      console.warn('listener method `' + methodName + '` not defined');\n    }\n  };\n  return handler;\n}\n\nvar TemplateStamp = exports.TemplateStamp = (0, _mixin.dedupingMixin)(function (superClass) {\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_TemplateStamp}\n   */\n  var TemplateStamp = function (_superClass) {\n    _inherits(TemplateStamp, _superClass);\n\n    function TemplateStamp() {\n      _classCallCheck(this, TemplateStamp);\n\n      return _possibleConstructorReturn(this, (TemplateStamp.__proto__ || Object.getPrototypeOf(TemplateStamp)).apply(this, arguments));\n    }\n\n    _createClass(TemplateStamp, [{\n      key: '_stampTemplate',\n\n\n      /**\n       * Clones the provided template content and returns a document fragment\n       * containing the cloned dom.\n       *\n       * The template is parsed (once and memoized) using this library's\n       * template parsing features, and provides the following value-added\n       * features:\n       * * Adds declarative event listeners for `on-event=\"handler\"` attributes\n       * * Generates an \"id map\" for all nodes with id's under `$` on returned\n       *   document fragment\n       * * Passes template info including `content` back to templates as\n       *   `_templateInfo` (a performance optimization to avoid deep template\n       *   cloning)\n       *\n       * Note that the memoized template parsing process is destructive to the\n       * template: attributes for bindings and declarative event listeners are\n       * removed after being noted in notes, and any nested `<template>.content`\n       * is removed and stored in notes as well.\n       *\n       * @param {!HTMLTemplateElement} template Template to stamp\n       * @return {!StampedTemplate} Cloned template content\n       */\n      value: function _stampTemplate(template) {\n        // Polyfill support: bootstrap the template if it has not already been\n        if (template && !template.content && window.HTMLTemplateElement && HTMLTemplateElement.decorate) {\n          HTMLTemplateElement.decorate(template);\n        }\n        var templateInfo = this.constructor._parseTemplate(template);\n        var nodeInfo = templateInfo.nodeInfoList;\n        var content = templateInfo.content || template.content;\n        var dom = /** @type DocumentFragment */document.importNode(content, true);\n        // NOTE: ShadyDom optimization indicating there is an insertion point\n        dom.__noInsertionPoint = !templateInfo.hasInsertionPoint;\n        var nodes = dom.nodeList = new Array(nodeInfo.length);\n        dom.$ = {};\n        for (var i = 0, l = nodeInfo.length, info; i < l && (info = nodeInfo[i]); i++) {\n          var node = nodes[i] = findTemplateNode(dom, info);\n          applyIdToMap(this, dom.$, node, info);\n          applyTemplateContent(this, node, info);\n          applyEventListener(this, node, info);\n        }\n        return (/** @type {!StampedTemplate} */dom\n        );\n      }\n\n      /**\n       * Adds an event listener by method name for the event provided.\n       *\n       * This method generates a handler function that looks up the method\n       * name at handling time.\n       *\n       * @param {Node} node Node to add listener on\n       * @param {string} eventName Name of event\n       * @param {string} methodName Name of method\n       * @param {*=} context Context the method will be called on (defaults\n       *   to `node`)\n       * @return {Function} Generated handler function\n       */\n\n    }, {\n      key: '_addMethodEventListenerToNode',\n      value: function _addMethodEventListenerToNode(node, eventName, methodName, context) {\n        context = context || node;\n        var handler = createNodeEventHandler(context, eventName, methodName);\n        this._addEventListenerToNode(node, eventName, handler);\n        return handler;\n      }\n\n      /**\n       * Override point for adding custom or simulated event handling.\n       *\n       * @param {Node} node Node to add event listener to\n       * @param {string} eventName Name of event\n       * @param {Function} handler Listener function to add\n       */\n\n    }, {\n      key: '_addEventListenerToNode',\n      value: function _addEventListenerToNode(node, eventName, handler) {\n        node.addEventListener(eventName, handler);\n      }\n\n      /**\n       * Override point for adding custom or simulated event handling.\n       *\n       * @param {Node} node Node to remove event listener from\n       * @param {string} eventName Name of event\n       * @param {Function} handler Listener function to remove\n       */\n\n    }, {\n      key: '_removeEventListenerFromNode',\n      value: function _removeEventListenerFromNode(node, eventName, handler) {\n        node.removeEventListener(eventName, handler);\n      }\n    }], [{\n      key: '_parseTemplate',\n\n\n      /**\n       * Scans a template to produce template metadata.\n       *\n       * Template-specific metadata are stored in the object returned, and node-\n       * specific metadata are stored in objects in its flattened `nodeInfoList`\n       * array.  Only nodes in the template that were parsed as nodes of\n       * interest contain an object in `nodeInfoList`.  Each `nodeInfo` object\n       * contains an `index` (`childNodes` index in parent) and optionally\n       * `parent`, which points to node info of its parent (including its index).\n       *\n       * The template metadata object returned from this method has the following\n       * structure (many fields optional):\n       *\n       * ```js\n       *   {\n       *     // Flattened list of node metadata (for nodes that generated metadata)\n       *     nodeInfoList: [\n       *       {\n       *         // `id` attribute for any nodes with id's for generating `$` map\n       *         id: {string},\n       *         // `on-event=\"handler\"` metadata\n       *         events: [\n       *           {\n       *             name: {string},   // event name\n       *             value: {string},  // handler method name\n       *           }, ...\n       *         ],\n       *         // Notes when the template contained a `<slot>` for shady DOM\n       *         // optimization purposes\n       *         hasInsertionPoint: {boolean},\n       *         // For nested `<template>`` nodes, nested template metadata\n       *         templateInfo: {object}, // nested template metadata\n       *         // Metadata to allow efficient retrieval of instanced node\n       *         // corresponding to this metadata\n       *         parentInfo: {number},   // reference to parent nodeInfo>\n       *         parentIndex: {number},  // index in parent's `childNodes` collection\n       *         infoIndex: {number},    // index of this `nodeInfo` in `templateInfo.nodeInfoList`\n       *       },\n       *       ...\n       *     ],\n       *     // When true, the template had the `strip-whitespace` attribute\n       *     // or was nested in a template with that setting\n       *     stripWhitespace: {boolean},\n       *     // For nested templates, nested template content is moved into\n       *     // a document fragment stored here; this is an optimization to\n       *     // avoid the cost of nested template cloning\n       *     content: {DocumentFragment}\n       *   }\n       * ```\n       *\n       * This method kicks off a recursive treewalk as follows:\n       *\n       * ```\n       *    _parseTemplate <---------------------+\n       *      _parseTemplateContent              |\n       *        _parseTemplateNode  <------------|--+\n       *          _parseTemplateNestedTemplate --+  |\n       *          _parseTemplateChildNodes ---------+\n       *          _parseTemplateNodeAttributes\n       *            _parseTemplateNodeAttribute\n       *\n       * ```\n       *\n       * These methods may be overridden to add custom metadata about templates\n       * to either `templateInfo` or `nodeInfo`.\n       *\n       * Note that this method may be destructive to the template, in that\n       * e.g. event annotations may be removed after being noted in the\n       * template metadata.\n       *\n       * @param {!HTMLTemplateElement} template Template to parse\n       * @param {TemplateInfo=} outerTemplateInfo Template metadata from the outer\n       *   template, for parsing nested templates\n       * @return {!TemplateInfo} Parsed template metadata\n       */\n      value: function _parseTemplate(template, outerTemplateInfo) {\n        // since a template may be re-used, memo-ize metadata\n        if (!template._templateInfo) {\n          var templateInfo = template._templateInfo = {};\n          templateInfo.nodeInfoList = [];\n          templateInfo.stripWhiteSpace = outerTemplateInfo && outerTemplateInfo.stripWhiteSpace || template.hasAttribute('strip-whitespace');\n          this._parseTemplateContent(template, templateInfo, { parent: null });\n        }\n        return template._templateInfo;\n      }\n    }, {\n      key: '_parseTemplateContent',\n      value: function _parseTemplateContent(template, templateInfo, nodeInfo) {\n        return this._parseTemplateNode(template.content, templateInfo, nodeInfo);\n      }\n\n      /**\n       * Parses template node and adds template and node metadata based on\n       * the current node, and its `childNodes` and `attributes`.\n       *\n       * This method may be overridden to add custom node or template specific\n       * metadata based on this node.\n       *\n       * @param {Node} node Node to parse\n       * @param {!TemplateInfo} templateInfo Template metadata for current template\n       * @param {!NodeInfo} nodeInfo Node metadata for current template.\n       * @return {boolean} `true` if the visited node added node-specific\n       *   metadata to `nodeInfo`\n       */\n\n    }, {\n      key: '_parseTemplateNode',\n      value: function _parseTemplateNode(node, templateInfo, nodeInfo) {\n        var noted = void 0;\n        var element = /** @type Element */node;\n        if (element.localName == 'template' && !element.hasAttribute('preserve-content')) {\n          noted = this._parseTemplateNestedTemplate(element, templateInfo, nodeInfo) || noted;\n        } else if (element.localName === 'slot') {\n          // For ShadyDom optimization, indicating there is an insertion point\n          templateInfo.hasInsertionPoint = true;\n        }\n        if (element.firstChild) {\n          noted = this._parseTemplateChildNodes(element, templateInfo, nodeInfo) || noted;\n        }\n        if (element.hasAttributes && element.hasAttributes()) {\n          noted = this._parseTemplateNodeAttributes(element, templateInfo, nodeInfo) || noted;\n        }\n        return noted;\n      }\n\n      /**\n       * Parses template child nodes for the given root node.\n       *\n       * This method also wraps whitelisted legacy template extensions\n       * (`is=\"dom-if\"` and `is=\"dom-repeat\"`) with their equivalent element\n       * wrappers, collapses text nodes, and strips whitespace from the template\n       * if the `templateInfo.stripWhitespace` setting was provided.\n       *\n       * @param {Node} root Root node whose `childNodes` will be parsed\n       * @param {!TemplateInfo} templateInfo Template metadata for current template\n       * @param {!NodeInfo} nodeInfo Node metadata for current template.\n       */\n\n    }, {\n      key: '_parseTemplateChildNodes',\n      value: function _parseTemplateChildNodes(root, templateInfo, nodeInfo) {\n        for (var node = root.firstChild, parentIndex = 0, next; node; node = next) {\n          // Wrap templates\n          if (node.localName == 'template') {\n            node = wrapTemplateExtension(node);\n          }\n          // collapse adjacent textNodes: fixes an IE issue that can cause\n          // text nodes to be inexplicably split =(\n          // note that root.normalize() should work but does not so we do this\n          // manually.\n          next = node.nextSibling;\n          if (node.nodeType === Node.TEXT_NODE) {\n            var /** Node */n = next;\n            while (n && n.nodeType === Node.TEXT_NODE) {\n              node.textContent += n.textContent;\n              next = n.nextSibling;\n              root.removeChild(n);\n              n = next;\n            }\n            // optionally strip whitespace\n            if (templateInfo.stripWhiteSpace && !node.textContent.trim()) {\n              root.removeChild(node);\n              continue;\n            }\n          }\n          var childInfo = { parentIndex: parentIndex, parentInfo: nodeInfo };\n          if (this._parseTemplateNode(node, templateInfo, childInfo)) {\n            childInfo.infoIndex = templateInfo.nodeInfoList.push( /** @type {!NodeInfo} */childInfo) - 1;\n          }\n          // Increment if not removed\n          if (node.parentNode) {\n            parentIndex++;\n          }\n        }\n      }\n\n      /**\n       * Parses template content for the given nested `<template>`.\n       *\n       * Nested template info is stored as `templateInfo` in the current node's\n       * `nodeInfo`. `template.content` is removed and stored in `templateInfo`.\n       * It will then be the responsibility of the host to set it back to the\n       * template and for users stamping nested templates to use the\n       * `_contentForTemplate` method to retrieve the content for this template\n       * (an optimization to avoid the cost of cloning nested template content).\n       *\n       * @param {HTMLTemplateElement} node Node to parse (a <template>)\n       * @param {TemplateInfo} outerTemplateInfo Template metadata for current template\n       *   that includes the template `node`\n       * @param {!NodeInfo} nodeInfo Node metadata for current template.\n       * @return {boolean} `true` if the visited node added node-specific\n       *   metadata to `nodeInfo`\n       */\n\n    }, {\n      key: '_parseTemplateNestedTemplate',\n      value: function _parseTemplateNestedTemplate(node, outerTemplateInfo, nodeInfo) {\n        var templateInfo = this._parseTemplate(node, outerTemplateInfo);\n        var content = templateInfo.content = node.content.ownerDocument.createDocumentFragment();\n        content.appendChild(node.content);\n        nodeInfo.templateInfo = templateInfo;\n        return true;\n      }\n\n      /**\n       * Parses template node attributes and adds node metadata to `nodeInfo`\n       * for nodes of interest.\n       *\n       * @param {Element} node Node to parse\n       * @param {TemplateInfo} templateInfo Template metadata for current template\n       * @param {NodeInfo} nodeInfo Node metadata for current template.\n       * @return {boolean} `true` if the visited node added node-specific\n       *   metadata to `nodeInfo`\n       */\n\n    }, {\n      key: '_parseTemplateNodeAttributes',\n      value: function _parseTemplateNodeAttributes(node, templateInfo, nodeInfo) {\n        // Make copy of original attribute list, since the order may change\n        // as attributes are added and removed\n        var noted = false;\n        var attrs = Array.from(node.attributes);\n        for (var i = attrs.length - 1, a; a = attrs[i]; i--) {\n          noted = this._parseTemplateNodeAttribute(node, templateInfo, nodeInfo, a.name, a.value) || noted;\n        }\n        return noted;\n      }\n\n      /**\n       * Parses a single template node attribute and adds node metadata to\n       * `nodeInfo` for attributes of interest.\n       *\n       * This implementation adds metadata for `on-event=\"handler\"` attributes\n       * and `id` attributes.\n       *\n       * @param {Element} node Node to parse\n       * @param {!TemplateInfo} templateInfo Template metadata for current template\n       * @param {!NodeInfo} nodeInfo Node metadata for current template.\n       * @param {string} name Attribute name\n       * @param {string} value Attribute value\n       * @return {boolean} `true` if the visited node added node-specific\n       *   metadata to `nodeInfo`\n       */\n\n    }, {\n      key: '_parseTemplateNodeAttribute',\n      value: function _parseTemplateNodeAttribute(node, templateInfo, nodeInfo, name, value) {\n        // events (on-*)\n        if (name.slice(0, 3) === 'on-') {\n          node.removeAttribute(name);\n          nodeInfo.events = nodeInfo.events || [];\n          nodeInfo.events.push({\n            name: name.slice(3),\n            value: value\n          });\n          return true;\n        }\n        // static id\n        else if (name === 'id') {\n            nodeInfo.id = value;\n            return true;\n          }\n        return false;\n      }\n\n      /**\n       * Returns the `content` document fragment for a given template.\n       *\n       * For nested templates, Polymer performs an optimization to cache nested\n       * template content to avoid the cost of cloning deeply nested templates.\n       * This method retrieves the cached content for a given template.\n       *\n       * @param {HTMLTemplateElement} template Template to retrieve `content` for\n       * @return {DocumentFragment} Content fragment\n       */\n\n    }, {\n      key: '_contentForTemplate',\n      value: function _contentForTemplate(template) {\n        var templateInfo = /** @type {HTMLTemplateElementWithInfo} */template._templateInfo;\n        return templateInfo && templateInfo.content || template.content;\n      }\n    }]);\n\n    return TemplateStamp;\n  }(superClass);\n\n  return TemplateStamp;\n});\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.remove = exports.add = exports.findOriginalTarget = exports.prevent = exports._fire = exports.recognizers = exports.gestures = undefined;\nexports.deepTargetFind = deepTargetFind;\nexports._findOriginalTarget = _findOriginalTarget;\nexports._handleNative = _handleNative;\nexports._handleTouchAction = _handleTouchAction;\nexports.addListener = addListener;\nexports.removeListener = removeListener;\nexports._add = _add;\nexports._remove = _remove;\nexports.register = register;\nexports._findRecognizerByEvent = _findRecognizerByEvent;\nexports.setTouchAction = setTouchAction;\nexports.resetMouseCanceller = resetMouseCanceller;\n\n__webpack_require__(0);\n\nvar _async = __webpack_require__(8);\n\nvar _debounce = __webpack_require__(17);\n\n// detect native touch action support\nvar HAS_NATIVE_TA = typeof document.head.style.touchAction === 'string';\nvar GESTURE_KEY = '__polymerGestures';\nvar HANDLED_OBJ = '__polymerGesturesHandled';\nvar TOUCH_ACTION = '__polymerGesturesTouchAction';\n// radius for tap and track\nvar TAP_DISTANCE = 25;\nvar TRACK_DISTANCE = 5;\n// number of last N track positions to keep\nvar TRACK_LENGTH = 2;\n\n// Disabling \"mouse\" handlers for 2500ms is enough\nvar MOUSE_TIMEOUT = 2500;\nvar MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'click'];\n// an array of bitmask values for mapping MouseEvent.which to MouseEvent.buttons\nvar MOUSE_WHICH_TO_BUTTONS = [0, 1, 4, 2];\nvar MOUSE_HAS_BUTTONS = function () {\n  try {\n    return new MouseEvent('test', { buttons: 1 }).buttons === 1;\n  } catch (e) {\n    return false;\n  }\n}();\n\n/* eslint no-empty: [\"error\", { \"allowEmptyCatch\": true }] */\n// check for passive event listeners\nvar SUPPORTS_PASSIVE = false;\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', { get: function get() {\n        SUPPORTS_PASSIVE = true;\n      } });\n    window.addEventListener('test', null, opts);\n    window.removeEventListener('test', null, opts);\n  } catch (e) {}\n})();\n\n// Check for touch-only devices\nvar IS_TOUCH_ONLY = navigator.userAgent.match(/iP(?:[oa]d|hone)|Android/);\n\nvar GestureRecognizer = function GestureRecognizer() {}; // eslint-disable-line no-unused-vars\nGestureRecognizer.prototype.reset = function () {};\n/** @type {function(MouseEvent) | undefined} */\nGestureRecognizer.prototype.mousedown;\n/** @type {(function(MouseEvent) | undefined)} */\nGestureRecognizer.prototype.mousemove;\n/** @type {(function(MouseEvent) | undefined)} */\nGestureRecognizer.prototype.mouseup;\n/** @type {(function(TouchEvent) | undefined)} */\nGestureRecognizer.prototype.touchstart;\n/** @type {(function(TouchEvent) | undefined)} */\nGestureRecognizer.prototype.touchmove;\n/** @type {(function(TouchEvent) | undefined)} */\nGestureRecognizer.prototype.touchend;\n/** @type {(function(MouseEvent) | undefined)} */\nGestureRecognizer.prototype.click;\n\n// touch will make synthetic mouse events\n// `preventDefault` on touchend will cancel them,\n// but this breaks `<input>` focus and link clicks\n// disable mouse handlers for MOUSE_TIMEOUT ms after\n// a touchend to ignore synthetic mouse events\nvar mouseCanceller = function mouseCanceller(mouseEvent) {\n  // Check for sourceCapabilities, used to distinguish synthetic events\n  // if mouseEvent did not come from a device that fires touch events,\n  // it was made by a real mouse and should be counted\n  // http://wicg.github.io/InputDeviceCapabilities/#dom-inputdevicecapabilities-firestouchevents\n  var sc = mouseEvent.sourceCapabilities;\n  if (sc && !sc.firesTouchEvents) {\n    return;\n  }\n  // skip synthetic mouse events\n  mouseEvent[HANDLED_OBJ] = { skip: true };\n  // disable \"ghost clicks\"\n  if (mouseEvent.type === 'click') {\n    var path = mouseEvent.composedPath && mouseEvent.composedPath();\n    if (path) {\n      for (var i = 0; i < path.length; i++) {\n        if (path[i] === POINTERSTATE.mouse.target) {\n          return;\n        }\n      }\n    }\n    mouseEvent.preventDefault();\n    mouseEvent.stopPropagation();\n  }\n};\n\n/**\n * @param {boolean=} setup True to add, false to remove.\n */\nfunction setupTeardownMouseCanceller(setup) {\n  var events = IS_TOUCH_ONLY ? ['click'] : MOUSE_EVENTS;\n  for (var i = 0, en; i < events.length; i++) {\n    en = events[i];\n    if (setup) {\n      document.addEventListener(en, mouseCanceller, true);\n    } else {\n      document.removeEventListener(en, mouseCanceller, true);\n    }\n  }\n}\n\nfunction ignoreMouse(e) {\n  if (!POINTERSTATE.mouse.mouseIgnoreJob) {\n    setupTeardownMouseCanceller(true);\n  }\n  var unset = function unset() {\n    setupTeardownMouseCanceller();\n    POINTERSTATE.mouse.target = null;\n    POINTERSTATE.mouse.mouseIgnoreJob = null;\n  };\n  POINTERSTATE.mouse.target = e.composedPath()[0];\n  POINTERSTATE.mouse.mouseIgnoreJob = _debounce.Debouncer.debounce(POINTERSTATE.mouse.mouseIgnoreJob, _async.timeOut.after(MOUSE_TIMEOUT), unset);\n}\n\n/**\n * @param {MouseEvent} ev event to test for left mouse button down\n * @return {boolean} has left mouse button down\n */\nfunction hasLeftMouseButton(ev) {\n  var type = ev.type;\n  // exit early if the event is not a mouse event\n  if (MOUSE_EVENTS.indexOf(type) === -1) {\n    return false;\n  }\n  // ev.button is not reliable for mousemove (0 is overloaded as both left button and no buttons)\n  // instead we use ev.buttons (bitmask of buttons) or fall back to ev.which (deprecated, 0 for no buttons, 1 for left button)\n  if (type === 'mousemove') {\n    // allow undefined for testing events\n    var buttons = ev.buttons === undefined ? 1 : ev.buttons;\n    if (ev instanceof window.MouseEvent && !MOUSE_HAS_BUTTONS) {\n      buttons = MOUSE_WHICH_TO_BUTTONS[ev.which] || 0;\n    }\n    // buttons is a bitmask, check that the left button bit is set (1)\n    return Boolean(buttons & 1);\n  } else {\n    // allow undefined for testing events\n    var button = ev.button === undefined ? 0 : ev.button;\n    // ev.button is 0 in mousedown/mouseup/click for left button activation\n    return button === 0;\n  }\n}\n\nfunction isSyntheticClick(ev) {\n  if (ev.type === 'click') {\n    // ev.detail is 0 for HTMLElement.click in most browsers\n    if (ev.detail === 0) {\n      return true;\n    }\n    // in the worst case, check that the x/y position of the click is within\n    // the bounding box of the target of the event\n    // Thanks IE 10 >:(\n    var t = _findOriginalTarget(ev);\n    // make sure the target of the event is an element so we can use getBoundingClientRect,\n    // if not, just assume it is a synthetic click\n    if (!t.nodeType || /** @type {Element} */t.nodeType !== Node.ELEMENT_NODE) {\n      return true;\n    }\n    var bcr = /** @type {Element} */t.getBoundingClientRect();\n    // use page x/y to account for scrolling\n    var x = ev.pageX,\n        y = ev.pageY;\n    // ev is a synthetic click if the position is outside the bounding box of the target\n    return !(x >= bcr.left && x <= bcr.right && y >= bcr.top && y <= bcr.bottom);\n  }\n  return false;\n}\n\nvar POINTERSTATE = {\n  mouse: {\n    target: null,\n    mouseIgnoreJob: null\n  },\n  touch: {\n    x: 0,\n    y: 0,\n    id: -1,\n    scrollDecided: false\n  }\n};\n\nfunction firstTouchAction(ev) {\n  var ta = 'auto';\n  var path = ev.composedPath && ev.composedPath();\n  if (path) {\n    for (var i = 0, n; i < path.length; i++) {\n      n = path[i];\n      if (n[TOUCH_ACTION]) {\n        ta = n[TOUCH_ACTION];\n        break;\n      }\n    }\n  }\n  return ta;\n}\n\nfunction trackDocument(stateObj, movefn, upfn) {\n  stateObj.movefn = movefn;\n  stateObj.upfn = upfn;\n  document.addEventListener('mousemove', movefn);\n  document.addEventListener('mouseup', upfn);\n}\n\nfunction untrackDocument(stateObj) {\n  document.removeEventListener('mousemove', stateObj.movefn);\n  document.removeEventListener('mouseup', stateObj.upfn);\n  stateObj.movefn = null;\n  stateObj.upfn = null;\n}\n\n// use a document-wide touchend listener to start the ghost-click prevention mechanism\n// Use passive event listeners, if supported, to not affect scrolling performance\ndocument.addEventListener('touchend', ignoreMouse, SUPPORTS_PASSIVE ? { passive: true } : false);\n\nvar gestures = exports.gestures = {};\nvar recognizers = exports.recognizers = [];\n\nfunction deepTargetFind(x, y) {\n  var node = document.elementFromPoint(x, y);\n  var next = node;\n  // this code path is only taken when native ShadowDOM is used\n  // if there is a shadowroot, it may have a node at x/y\n  // if there is not a shadowroot, exit the loop\n  while (next && next.shadowRoot && !window.ShadyDOM) {\n    // if there is a node at x/y in the shadowroot, look deeper\n    var oldNext = next;\n    next = next.shadowRoot.elementFromPoint(x, y);\n    // on Safari, elementFromPoint may return the shadowRoot host\n    if (oldNext === next) {\n      break;\n    }\n    if (next) {\n      node = next;\n    }\n  }\n  return node;\n}\n\nfunction _findOriginalTarget(ev) {\n  // shadowdom\n  if (ev.composedPath) {\n    return (/** @type {EventTarget} */ev.composedPath()[0]\n    );\n  }\n  // shadydom\n  return ev.target;\n}\n\nfunction _handleNative(ev) {\n  var handled = void 0;\n  var type = ev.type;\n  var node = ev.currentTarget;\n  var gobj = node[GESTURE_KEY];\n  if (!gobj) {\n    return;\n  }\n  var gs = gobj[type];\n  if (!gs) {\n    return;\n  }\n  if (!ev[HANDLED_OBJ]) {\n    ev[HANDLED_OBJ] = {};\n    if (type.slice(0, 5) === 'touch') {\n      ev = /** @type {TouchEvent} */ev; // eslint-disable-line no-self-assign\n      var t = ev.changedTouches[0];\n      if (type === 'touchstart') {\n        // only handle the first finger\n        if (ev.touches.length === 1) {\n          POINTERSTATE.touch.id = t.identifier;\n        }\n      }\n      if (POINTERSTATE.touch.id !== t.identifier) {\n        return;\n      }\n      if (!HAS_NATIVE_TA) {\n        if (type === 'touchstart' || type === 'touchmove') {\n          _handleTouchAction(ev);\n        }\n      }\n    }\n  }\n  handled = ev[HANDLED_OBJ];\n  // used to ignore synthetic mouse events\n  if (handled.skip) {\n    return;\n  }\n  // reset recognizer state\n  for (var i = 0, r; i < recognizers.length; i++) {\n    r = recognizers[i];\n    if (gs[r.name] && !handled[r.name]) {\n      if (r.flow && r.flow.start.indexOf(ev.type) > -1 && r.reset) {\n        r.reset();\n      }\n    }\n  }\n  // enforce gesture recognizer order\n  for (var _i = 0, _r; _i < recognizers.length; _i++) {\n    _r = recognizers[_i];\n    if (gs[_r.name] && !handled[_r.name]) {\n      handled[_r.name] = true;\n      _r[type](ev);\n    }\n  }\n}\n\nfunction _handleTouchAction(ev) {\n  var t = ev.changedTouches[0];\n  var type = ev.type;\n  if (type === 'touchstart') {\n    POINTERSTATE.touch.x = t.clientX;\n    POINTERSTATE.touch.y = t.clientY;\n    POINTERSTATE.touch.scrollDecided = false;\n  } else if (type === 'touchmove') {\n    if (POINTERSTATE.touch.scrollDecided) {\n      return;\n    }\n    POINTERSTATE.touch.scrollDecided = true;\n    var ta = firstTouchAction(ev);\n    var _prevent = false;\n    var dx = Math.abs(POINTERSTATE.touch.x - t.clientX);\n    var dy = Math.abs(POINTERSTATE.touch.y - t.clientY);\n    if (!ev.cancelable) {\n      // scrolling is happening\n    } else if (ta === 'none') {\n      _prevent = true;\n    } else if (ta === 'pan-x') {\n      _prevent = dy > dx;\n    } else if (ta === 'pan-y') {\n      _prevent = dx > dy;\n    }\n    if (_prevent) {\n      ev.preventDefault();\n    } else {\n      _prevent('track');\n    }\n  }\n}\n\nfunction addListener(node, evType, handler) {\n  if (gestures[evType]) {\n    _add(node, evType, handler);\n    return true;\n  }\n  return false;\n}\n\nfunction removeListener(node, evType, handler) {\n  if (gestures[evType]) {\n    _remove(node, evType, handler);\n    return true;\n  }\n  return false;\n}\n\nfunction _add(node, evType, handler) {\n  var recognizer = gestures[evType];\n  var deps = recognizer.deps;\n  var name = recognizer.name;\n  var gobj = node[GESTURE_KEY];\n  if (!gobj) {\n    node[GESTURE_KEY] = gobj = {};\n  }\n  for (var i = 0, dep, gd; i < deps.length; i++) {\n    dep = deps[i];\n    // don't add mouse handlers on iOS because they cause gray selection overlays\n    if (IS_TOUCH_ONLY && MOUSE_EVENTS.indexOf(dep) > -1 && dep !== 'click') {\n      continue;\n    }\n    gd = gobj[dep];\n    if (!gd) {\n      gobj[dep] = gd = { _count: 0 };\n    }\n    if (gd._count === 0) {\n      node.addEventListener(dep, _handleNative);\n    }\n    gd[name] = (gd[name] || 0) + 1;\n    gd._count = (gd._count || 0) + 1;\n  }\n  node.addEventListener(evType, handler);\n  if (recognizer.touchAction) {\n    setTouchAction(node, recognizer.touchAction);\n  }\n}\n\nfunction _remove(node, evType, handler) {\n  var recognizer = gestures[evType];\n  var deps = recognizer.deps;\n  var name = recognizer.name;\n  var gobj = node[GESTURE_KEY];\n  if (gobj) {\n    for (var i = 0, dep, gd; i < deps.length; i++) {\n      dep = deps[i];\n      gd = gobj[dep];\n      if (gd && gd[name]) {\n        gd[name] = (gd[name] || 1) - 1;\n        gd._count = (gd._count || 1) - 1;\n        if (gd._count === 0) {\n          node.removeEventListener(dep, _handleNative);\n        }\n      }\n    }\n  }\n  node.removeEventListener(evType, handler);\n}\n\nfunction register(recog) {\n  recognizers.push(recog);\n  for (var i = 0; i < recog.emits.length; i++) {\n    gestures[recog.emits[i]] = recog;\n  }\n}\n\nfunction _findRecognizerByEvent(evName) {\n  for (var i = 0, r; i < recognizers.length; i++) {\n    r = recognizers[i];\n    for (var j = 0, n; j < r.emits.length; j++) {\n      n = r.emits[j];\n      if (n === evName) {\n        return r;\n      }\n    }\n  }\n  return null;\n}\n\nfunction setTouchAction(node, value) {\n  if (HAS_NATIVE_TA) {\n    node.style.touchAction = value;\n  }\n  node[TOUCH_ACTION] = value;\n}\n\nfunction _fire2(target, type, detail) {\n  var ev = new Event(type, { bubbles: true, cancelable: true, composed: true });\n  ev.detail = detail;\n  target.dispatchEvent(ev);\n  // forward `preventDefault` in a clean way\n  if (ev.defaultPrevented) {\n    var preventer = detail.preventer || detail.sourceEvent;\n    if (preventer && preventer.preventDefault) {\n      preventer.preventDefault();\n    }\n  }\n}\n\nexports._fire = _fire2;\nfunction _prevent2(evName) {\n  var recognizer = _findRecognizerByEvent(evName);\n  if (recognizer.info) {\n    recognizer.info.prevent = true;\n  }\n}\n\nexports.prevent = _prevent2;\nfunction resetMouseCanceller() {\n  if (POINTERSTATE.mouse.mouseIgnoreJob) {\n    POINTERSTATE.mouse.mouseIgnoreJob.flush();\n  }\n}\n\n/* eslint-disable valid-jsdoc */\n\nregister({\n  name: 'downup',\n  deps: ['mousedown', 'touchstart', 'touchend'],\n  flow: {\n    start: ['mousedown', 'touchstart'],\n    end: ['mouseup', 'touchend']\n  },\n  emits: ['down', 'up'],\n\n  info: {\n    movefn: null,\n    upfn: null\n  },\n\n  /** @this {GestureRecognizer} */\n  reset: function reset() {\n    untrackDocument(this.info);\n  },\n\n  /**\n   * @this {GestureRecognizer}\n   * @param {MouseEvent} e\n   */\n  mousedown: function mousedown(e) {\n    if (!hasLeftMouseButton(e)) {\n      return;\n    }\n    var t = _findOriginalTarget(e);\n    var self = this;\n    var movefn = function movefn(e) {\n      if (!hasLeftMouseButton(e)) {\n        self._fire('up', t, e);\n        untrackDocument(self.info);\n      }\n    };\n    var upfn = function upfn(e) {\n      if (hasLeftMouseButton(e)) {\n        self._fire('up', t, e);\n      }\n      untrackDocument(self.info);\n    };\n    trackDocument(this.info, movefn, upfn);\n    this._fire('down', t, e);\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   */\n  touchstart: function touchstart(e) {\n    this._fire('down', _findOriginalTarget(e), e.changedTouches[0], e);\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   */\n  touchend: function touchend(e) {\n    this._fire('up', _findOriginalTarget(e), e.changedTouches[0], e);\n  },\n  /**\n   * @param {string} type\n   * @param {EventTarget} target\n   * @param {Event} event\n   * @param {Function} preventer\n   */\n  _fire: function _fire(type, target, event, preventer) {\n    _fire2(target, type, {\n      x: event.clientX,\n      y: event.clientY,\n      sourceEvent: event,\n      preventer: preventer,\n      prevent: function prevent(e) {\n        return _prevent2(e);\n      }\n    });\n  }\n});\n\nregister({\n  name: 'track',\n  touchAction: 'none',\n  deps: ['mousedown', 'touchstart', 'touchmove', 'touchend'],\n  flow: {\n    start: ['mousedown', 'touchstart'],\n    end: ['mouseup', 'touchend']\n  },\n  emits: ['track'],\n\n  info: {\n    x: 0,\n    y: 0,\n    state: 'start',\n    started: false,\n    moves: [],\n    /** @this {GestureRecognizer} */\n    addMove: function addMove(move) {\n      if (this.moves.length > TRACK_LENGTH) {\n        this.moves.shift();\n      }\n      this.moves.push(move);\n    },\n    movefn: null,\n    upfn: null,\n    prevent: false\n  },\n\n  /** @this {GestureRecognizer} */\n  reset: function reset() {\n    this.info.state = 'start';\n    this.info.started = false;\n    this.info.moves = [];\n    this.info.x = 0;\n    this.info.y = 0;\n    this.info.prevent = false;\n    untrackDocument(this.info);\n  },\n\n  /**\n   * @this {GestureRecognizer}\n   * @param {number} x\n   * @param {number} y\n   * @return {boolean}\n   */\n  hasMovedEnough: function hasMovedEnough(x, y) {\n    if (this.info.prevent) {\n      return false;\n    }\n    if (this.info.started) {\n      return true;\n    }\n    var dx = Math.abs(this.info.x - x);\n    var dy = Math.abs(this.info.y - y);\n    return dx >= TRACK_DISTANCE || dy >= TRACK_DISTANCE;\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {MouseEvent} e\n   */\n  mousedown: function mousedown(e) {\n    if (!hasLeftMouseButton(e)) {\n      return;\n    }\n    var t = _findOriginalTarget(e);\n    var self = this;\n    var movefn = function movefn(e) {\n      var x = e.clientX,\n          y = e.clientY;\n      if (self.hasMovedEnough(x, y)) {\n        // first move is 'start', subsequent moves are 'move', mouseup is 'end'\n        self.info.state = self.info.started ? e.type === 'mouseup' ? 'end' : 'track' : 'start';\n        if (self.info.state === 'start') {\n          // if and only if tracking, always prevent tap\n          _prevent2('tap');\n        }\n        self.info.addMove({ x: x, y: y });\n        if (!hasLeftMouseButton(e)) {\n          // always _fire \"end\"\n          self.info.state = 'end';\n          untrackDocument(self.info);\n        }\n        self._fire(t, e);\n        self.info.started = true;\n      }\n    };\n    var upfn = function upfn(e) {\n      if (self.info.started) {\n        movefn(e);\n      }\n\n      // remove the temporary listeners\n      untrackDocument(self.info);\n    };\n    // add temporary document listeners as mouse retargets\n    trackDocument(this.info, movefn, upfn);\n    this.info.x = e.clientX;\n    this.info.y = e.clientY;\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   */\n  touchstart: function touchstart(e) {\n    var ct = e.changedTouches[0];\n    this.info.x = ct.clientX;\n    this.info.y = ct.clientY;\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   */\n  touchmove: function touchmove(e) {\n    var t = _findOriginalTarget(e);\n    var ct = e.changedTouches[0];\n    var x = ct.clientX,\n        y = ct.clientY;\n    if (this.hasMovedEnough(x, y)) {\n      if (this.info.state === 'start') {\n        // if and only if tracking, always prevent tap\n        _prevent2('tap');\n      }\n      this.info.addMove({ x: x, y: y });\n      this._fire(t, ct);\n      this.info.state = 'track';\n      this.info.started = true;\n    }\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   */\n  touchend: function touchend(e) {\n    var t = _findOriginalTarget(e);\n    var ct = e.changedTouches[0];\n    // only trackend if track was started and not aborted\n    if (this.info.started) {\n      // reset started state on up\n      this.info.state = 'end';\n      this.info.addMove({ x: ct.clientX, y: ct.clientY });\n      this._fire(t, ct, e);\n    }\n  },\n\n  /**\n   * @this {GestureRecognizer}\n   * @param {EventTarget} target\n   * @param {Touch} touch\n   */\n  _fire: function _fire(target, touch) {\n    var secondlast = this.info.moves[this.info.moves.length - 2];\n    var lastmove = this.info.moves[this.info.moves.length - 1];\n    var dx = lastmove.x - this.info.x;\n    var dy = lastmove.y - this.info.y;\n    var ddx = void 0,\n        ddy = 0;\n    if (secondlast) {\n      ddx = lastmove.x - secondlast.x;\n      ddy = lastmove.y - secondlast.y;\n    }\n    _fire2(target, 'track', {\n      state: this.info.state,\n      x: touch.clientX,\n      y: touch.clientY,\n      dx: dx,\n      dy: dy,\n      ddx: ddx,\n      ddy: ddy,\n      sourceEvent: touch,\n      hover: function hover() {\n        return deepTargetFind(touch.clientX, touch.clientY);\n      }\n    });\n  }\n\n});\n\nregister({\n  name: 'tap',\n  deps: ['mousedown', 'click', 'touchstart', 'touchend'],\n  flow: {\n    start: ['mousedown', 'touchstart'],\n    end: ['click', 'touchend']\n  },\n  emits: ['tap'],\n  info: {\n    x: NaN,\n    y: NaN,\n    prevent: false\n  },\n  /** @this {GestureRecognizer} */\n  reset: function reset() {\n    this.info.x = NaN;\n    this.info.y = NaN;\n    this.info.prevent = false;\n  },\n  /** @this {GestureRecognizer} */\n  save: function save(e) {\n    this.info.x = e.clientX;\n    this.info.y = e.clientY;\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {MouseEvent} e\n   */\n  mousedown: function mousedown(e) {\n    if (hasLeftMouseButton(e)) {\n      this.save(e);\n    }\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {MouseEvent} e\n   */\n  click: function click(e) {\n    if (hasLeftMouseButton(e)) {\n      this.forward(e);\n    }\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   */\n  touchstart: function touchstart(e) {\n    this.save(e.changedTouches[0], e);\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   */\n  touchend: function touchend(e) {\n    this.forward(e.changedTouches[0], e);\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {Event | Touch} e\n   * @param {Event=} preventer\n   */\n  forward: function forward(e, preventer) {\n    var dx = Math.abs(e.clientX - this.info.x);\n    var dy = Math.abs(e.clientY - this.info.y);\n    // find original target from `preventer` for TouchEvents, or `e` for MouseEvents\n    var t = _findOriginalTarget(preventer || e);\n    // dx,dy can be NaN if `click` has been simulated and there was no `down` for `start`\n    if (isNaN(dx) || isNaN(dy) || dx <= TAP_DISTANCE && dy <= TAP_DISTANCE || isSyntheticClick(e)) {\n      // prevent taps from being generated if an event has canceled them\n      if (!this.info.prevent) {\n        _fire2(t, 'tap', {\n          x: e.clientX,\n          y: e.clientY,\n          sourceEvent: e,\n          preventer: preventer\n        });\n      }\n    }\n  }\n});\n\nvar findOriginalTarget = exports.findOriginalTarget = _findOriginalTarget;\nvar add = exports.add = addListener;\nvar remove = exports.remove = removeListener;\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Symbol2 = __webpack_require__(21);\n\nvar _Symbol3 = _interopRequireDefault(_Symbol2);\n\nvar _getRawTag = __webpack_require__(44);\n\nvar _getRawTag2 = _interopRequireDefault(_getRawTag);\n\nvar _objectToString = __webpack_require__(45);\n\nvar _objectToString2 = _interopRequireDefault(_objectToString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = _Symbol3.default ? _Symbol3.default.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return symToStringTag && symToStringTag in Object(value) ? (0, _getRawTag2.default)(value) : (0, _objectToString2.default)(value);\n}\n\nexports.default = baseGetTag;\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _freeGlobal = __webpack_require__(43);\n\nvar _freeGlobal2 = _interopRequireDefault(_freeGlobal);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Detect free variable `self`. */\nvar freeSelf = (typeof self === 'undefined' ? 'undefined' : _typeof(self)) == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = _freeGlobal2.default || freeSelf || Function('return this')();\n\nexports.default = root;\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = (typeof global === 'undefined' ? 'undefined' : _typeof(global)) == 'object' && global && global.Object === Object && global;\n\nexports.default = freeGlobal;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Symbol2 = __webpack_require__(21);\n\nvar _Symbol3 = _interopRequireDefault(_Symbol2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = _Symbol3.default ? _Symbol3.default.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexports.default = getRawTag;\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexports.default = objectToString;\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _overArg = __webpack_require__(47);\n\nvar _overArg2 = _interopRequireDefault(_overArg);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Built-in value references. */\nvar getPrototype = (0, _overArg2.default)(Object.getPrototypeOf, Object);\n\nexports.default = getPrototype;\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nexports.default = overArg;\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) == 'object';\n}\n\nexports.default = isObjectLike;\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = __webpack_require__(50);\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global, module) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ponyfill = __webpack_require__(52);\n\nvar _ponyfill2 = _interopRequireDefault(_ponyfill);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { 'default': obj };\n}\n\nvar root; /* global window */\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (true) {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = (0, _ponyfill2['default'])(root);\nexports['default'] = result;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(51)(module)))\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function () {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function get() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function get() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports['default'] = symbolObservablePonyfill;\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar _Symbol = root.Symbol;\n\n\tif (typeof _Symbol === 'function') {\n\t\tif (_Symbol.observable) {\n\t\t\tresult = _Symbol.observable;\n\t\t} else {\n\t\t\tresult = _Symbol('observable');\n\t\t\t_Symbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = combineReducers;\n\nvar _createStore = __webpack_require__(19);\n\nvar _isPlainObject = __webpack_require__(20);\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _warning = __webpack_require__(22);\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionName = actionType && '\"' + actionType.toString() + '\"' || 'an action';\n\n  return 'Given action ' + actionName + ', reducer \"' + key + '\" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!(0, _isPlainObject2.default)(inputState)) {\n    return 'The ' + argumentName + ' has unexpected type of \"' + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + '\". Expected argument to be an object with the following ' + ('keys: \"' + reducerKeys.join('\", \"') + '\"');\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n\n  if (unexpectedKeys.length > 0) {\n    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('\"' + unexpectedKeys.join('\", \"') + '\" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('\"' + reducerKeys.join('\", \"') + '\". Unexpected keys will be ignored.');\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, { type: _createStore.ActionTypes.INIT });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');\n    }\n\n    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');\n    if (typeof reducer(undefined, { type: type }) === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined when probed with a random type. ' + ('Don\\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in \"redux/*\" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');\n    }\n  });\n}\n\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (false) {\n      if (typeof reducers[key] === 'undefined') {\n        (0, _warning2.default)('No reducer provided for key \"' + key + '\"');\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n  var finalReducerKeys = Object.keys(finalReducers);\n\n  var unexpectedKeyCache = void 0;\n  if (false) {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError = void 0;\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments[1];\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (false) {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n      if (warningMessage) {\n        (0, _warning2.default)(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = bindActionCreators;\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(undefined, arguments));\n  };\n}\n\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass a single function as the first argument,\n * and get a function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if ((typeof actionCreators === 'undefined' ? 'undefined' : _typeof(actionCreators)) !== 'object' || actionCreators === null) {\n    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators === 'undefined' ? 'undefined' : _typeof(actionCreators)) + '. ' + 'Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');\n  }\n\n  var keys = Object.keys(actionCreators);\n  var boundActionCreators = {};\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var actionCreator = actionCreators[key];\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n  return boundActionCreators;\n}\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = applyMiddleware;\n\nvar _compose = __webpack_require__(23);\n\nvar _compose2 = _interopRequireDefault(_compose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }return target;\n};\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function (reducer, preloadedState, enhancer) {\n      var store = createStore(reducer, preloadedState, enhancer);\n      var _dispatch = store.dispatch;\n      var chain = [];\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch(action) {\n          return _dispatch(action);\n        }\n      };\n      chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = _compose2.default.apply(undefined, chain)(store.dispatch);\n\n      return _extends({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nexports.default = PolymerRedux;\n\nvar _path = __webpack_require__(16);\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Polymer Redux\n *\n * Creates a Class mixin for decorating Elements with a given Redux store.\n *\n * @polymerMixin\n *\n * @param {Object} store Redux store.\n * @return {Function} Class mixin.\n */\nfunction PolymerRedux(store) {\n  if (!store) {\n    throw new TypeError('PolymerRedux: expecting a redux store.');\n  } else if (!['getState', 'dispatch', 'subscribe'].every(function (k) {\n    return typeof store[k] === 'function';\n  })) {\n    throw new TypeError('PolymerRedux: invalid store object.');\n  }\n\n  var subscribers = new Map();\n\n  /**\n   * Binds element's properties to state changes from the Redux store.\n   *\n   * @example\n   *     const update = bind(el, props) // set bindings\n   *     update(state) // manual update\n   *\n   * @private\n   * @param {HTMLElement} element\n   * @param {Object} properties\n   * @return {Function} Update function.\n   */\n  var bind = function bind(element, properties) {\n    var bindings = Object.keys(properties).filter(function (name) {\n      var property = properties[name];\n      if (Object.prototype.hasOwnProperty.call(property, 'statePath')) {\n        if (!property.readOnly && property.notify) {\n          console.warn('PolymerRedux: <' + element.constructor.is + '>.' + name + ' has \"notify\" enabled, two-way bindings goes against Redux\\'s paradigm');\n        }\n        return true;\n      }\n      return false;\n    });\n\n    /**\n     * Updates an element's properties with the given state.\n     *\n     * @private\n     * @param {Object} state\n     */\n    var update = function update(state) {\n      var propertiesChanged = false;\n      bindings.forEach(function (name) {\n        // Perhaps .reduce() to a boolean?\n        var statePath = properties[name].statePath;\n\n        var value = typeof statePath === 'function' ? statePath.call(element, state) : (0, _path.get)(state, statePath);\n\n        var changed = element._setPendingPropertyOrPath(name, value, true);\n        propertiesChanged = propertiesChanged || changed;\n      });\n      if (propertiesChanged) {\n        element._invalidateProperties();\n      }\n    };\n\n    // Redux listener\n    var unsubscribe = store.subscribe(function () {\n      var detail = store.getState();\n      update(detail);\n\n      element.dispatchEvent(new window.CustomEvent('state-changed', { detail: detail }));\n    });\n\n    subscribers.set(element, unsubscribe);\n\n    return update(store.getState());\n  };\n\n  /**\n   * Unbinds an element from state changes in the Redux store.\n   *\n   * @private\n   * @param {HTMLElement} element\n   */\n  var unbind = function unbind(element) {\n    var off = subscribers.get(element);\n    if (typeof off === 'function') {\n      off();\n    }\n  };\n\n  /**\n   * Merges a property's object value using the defaults way.\n   *\n   * @private\n   * @param {Object} what Initial prototype\n   * @param {String} which Property to collect.\n   * @return {Object} the collected values\n   */\n  var collect = function collect(what, which) {\n    var res = {};\n    while (what) {\n      res = Object.assign({}, what[which], res); // Respect prototype priority\n      what = Object.getPrototypeOf(what);\n    }\n    return res;\n  };\n\n  /**\n   * ReduxMixin\n   *\n   * @example\n   *     const ReduxMixin = PolymerRedux(store)\n   *     class Foo extends ReduxMixin(Polymer.Element) { }\n   *\n   * @polymerMixinClass\n   *\n   * @param {Polymer.Element} parent The polymer parent element.\n   * @return {Function} PolymerRedux mixed class.\n   */\n  return function (parent) {\n    return function (_parent) {\n      _inherits(ReduxMixin, _parent);\n\n      function ReduxMixin() {\n        _classCallCheck(this, ReduxMixin);\n\n        // Collect the action creators first as property changes trigger\n        // dispatches from observers, see #65, #66, #67\n        var _this = _possibleConstructorReturn(this, (ReduxMixin.__proto__ || Object.getPrototypeOf(ReduxMixin)).call(this));\n\n        var actions = collect(_this.constructor, 'actions');\n        Object.defineProperty(_this, '_reduxActions', {\n          configurable: true,\n          value: actions\n        });\n        return _this;\n      }\n\n      _createClass(ReduxMixin, [{\n        key: 'connectedCallback',\n        value: function connectedCallback() {\n          _get(ReduxMixin.prototype.__proto__ || Object.getPrototypeOf(ReduxMixin.prototype), 'connectedCallback', this).call(this);\n          var properties = collect(this.constructor, 'properties');\n          bind(this, properties);\n        }\n      }, {\n        key: 'disconnectedCallback',\n        value: function disconnectedCallback() {\n          _get(ReduxMixin.prototype.__proto__ || Object.getPrototypeOf(ReduxMixin.prototype), 'disconnectedCallback', this).call(this);\n          unbind(this);\n        }\n\n        /**\n         * Dispatches an action to the Redux store.\n         *\n         * @example\n         *     element.dispatch({ type: 'ACTION' })\n         *\n         * @example\n         *     element.dispatch('actionCreator', 'foo', 'bar')\n         *\n         * @example\n         *     element.dispatch((dispatch) => {\n         *         dispatch({ type: 'MIDDLEWARE'})\n         *     })\n         *\n         * @param  {...*} args\n         * @return {Object} The action.\n         */\n\n      }, {\n        key: 'dispatch',\n        value: function dispatch() {\n          var _this2 = this;\n\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          var actions = this._reduxActions;\n\n          // Action creator\n          var action = args[0];\n\n          if (typeof action === 'string') {\n            if (typeof actions[action] !== 'function') {\n              throw new TypeError('PolymerRedux: <' + this.constructor.is + '> invalid action creator \"' + action + '\"');\n            }\n            action = actions[action].apply(actions, _toConsumableArray(args.slice(1)));\n          }\n\n          // Proxy async dispatch\n          if (typeof action === 'function') {\n            var originalAction = action;\n            action = function action() {\n              for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                args[_key2] = arguments[_key2];\n              }\n\n              // Replace redux dispatch\n              args.splice(0, 1, function () {\n                return _this2.dispatch.apply(_this2, arguments);\n              });\n              return originalAction.apply(undefined, args);\n            };\n\n            // Copy props from the original action to the proxy.\n            // see https://github.com/tur-nr/polymer-redux/issues/98\n            Object.keys(originalAction).forEach(function (prop) {\n              action[prop] = originalAction[prop];\n            });\n          }\n\n          return store.dispatch(action);\n        }\n\n        /**\n         * Gets the current state in the Redux store.\n         *\n         * @return {*}\n         */\n\n      }, {\n        key: 'getState',\n        value: function getState() {\n          return store.getState();\n        }\n      }]);\n\n      return ReduxMixin;\n    }(parent);\n  };\n}\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n__webpack_require__(58);\n\n__webpack_require__(63);\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _polymerElement = __webpack_require__(15);\n\nvar _debounce = __webpack_require__(17);\n\nvar _async = __webpack_require__(8);\n\nvar _stateManager = __webpack_require__(1);\n\nvar _window = __webpack_require__(7);\n\nvar _reducer = __webpack_require__(24);\n\nvar _getAnimationEvent = __webpack_require__(59);\n\nvar _getAnimationEvent2 = _interopRequireDefault(_getAnimationEvent);\n\nvar _pathToRegexp = __webpack_require__(25);\n\nvar _pathToRegexp2 = _interopRequireDefault(_pathToRegexp);\n\nvar _locationMixin = __webpack_require__(26);\n\nvar _locationMixin2 = _interopRequireDefault(_locationMixin);\n\nvar _queryParamsMixin = __webpack_require__(27);\n\nvar _queryParamsMixin2 = _interopRequireDefault(_queryParamsMixin);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar LittleqRouter = function (_ReduxMixin) {\n  _inherits(LittleqRouter, _ReduxMixin);\n\n  _createClass(LittleqRouter, null, [{\n    key: 'is',\n    get: function get() {\n      return 'littleq-router';\n    }\n  }, {\n    key: 'template',\n    get: function get() {\n      return '\\n    <style>\\n      ::slotted(.animated) {\\n        animation-duration: 0.3s;\\n        animation-fill-mode: both;\\n      }\\n\\n      ::slotted(*) > .animated {\\n        animation-duration: 1s;\\n        animation-fill-mode: both;\\n      }\\n\\n      ::slotted(.fadeOut) {\\n        animation-name: fadeOut;\\n      }\\n\\n      ::slotted(*) > .fadeOut {\\n        animation-name: fadeOut;\\n      }\\n\\n      ::slotted(.fadeIn) {\\n        animation-name: fadeIn;\\n      }\\n\\n      ::slotted(*) > .fadeIn {\\n        animation-name: fadeIn;\\n      }\\n    </style>\\n    <main role=\"main\">\\n      <slot name=\"page\"></slot>\\n    </main>\\n    ';\n    }\n  }, {\n    key: 'properties',\n    get: function get() {\n      return {\n        defaultRedirect: {\n          type: String\n        },\n\n        params: {\n          type: Object,\n          statePath: 'router.params'\n        },\n\n        currentRoute: {\n          type: String,\n          statePath: 'router.route'\n        }\n      };\n    }\n  }]);\n\n  function LittleqRouter() {\n    _classCallCheck(this, LittleqRouter);\n\n    var _this = _possibleConstructorReturn(this, (LittleqRouter.__proto__ || Object.getPrototypeOf(LittleqRouter)).call(this));\n\n    _this._setKeyframeStyles();\n    _this._getLazyLoader();\n    return _this;\n  }\n\n  _createClass(LittleqRouter, [{\n    key: '_setKeyframeStyles',\n    value: function _setKeyframeStyles() {\n      var style = document.createElement('style');\n      style.id = 'littlq-router-animation-styles';\n      style.innerHTML = '\\n      @keyframes fadeOut {\\n        from {\\n          opacity: 1;\\n        }\\n\\n        to {\\n          opacity: 0;\\n        }\\n      }\\n\\n      @keyframes fadeIn {\\n        from {\\n          opacity: 0;\\n        }\\n\\n        to {\\n          opacity: 1;\\n        }\\n      }\\n    ';\n      if (!document.querySelector('#littlq-router-animation-styles')) document.head.appendChild(style);\n    }\n  }, {\n    key: '_getLazyLoader',\n    value: function _getLazyLoader() {\n      var lazy = this.getAttribute('lazy-loader') || 'lazy-loader';\n      this._lazyLoader = document.querySelector(lazy);\n      if (!this._lazyLoader) console.warn('will not be able to lazy load components without the lazy-loader tag. Install lazy-loader tag');\n    }\n\n    /**\n     * Check path and route if it matches. Because the matching happens in the routes\n     * themselves, it will wait for 200 milliseconds before showing the default, which\n     * is the not-found route.\n     *\n     * @param {any} path\n     * @param {any} route\n     * @memberof LittleqRouter\n     */\n\n  }, {\n    key: '_checkPathRouteIfExists',\n    value: function _checkPathRouteIfExists(path, route) {\n      var _this2 = this;\n\n      this._debouncer = _debounce.Debouncer.debounce(this._debouncer, _async.timeOut.after(200), function () {\n        var keys = [];\n        var re = (0, _pathToRegexp2.default)(route || '', keys);\n        var exec = re.exec(path);\n        if (!exec) {\n          _this2.dispatch({\n            type: _reducer.ROUTER_ACTION.ROUTE,\n            route: 'not-found'\n          });\n        }\n      });\n    }\n  }, {\n    key: '_removePageAfterTransition',\n    value: function _removePageAfterTransition(oldPage, route, transition, fn) {\n      if (this._timeOut) clearTimeout(this._timeOut);\n      if (transition && fn) oldPage.removeEventListener(transition, fn);\n      if (this.contains(oldPage)) this.removeChild(oldPage);\n      this._checkMiddlewares(route);\n    }\n  }, {\n    key: '_removePageListenerFallback',\n    value: function _removePageListenerFallback(oldPage, route, transition) {\n      var _this3 = this;\n\n      this._timeOut = setTimeout(function () {\n        _this3._removePageAfterTransition(oldPage, route, transition);\n      }, 550);\n      var fn = function fn() {\n        _this3._removePageAfterTransition(oldPage, route, transition, fn);\n      };\n      oldPage.addEventListener(transition, fn);\n    }\n  }, {\n    key: '_removePage',\n    value: function _removePage(oldPage, route) {\n      var animation = (0, _getAnimationEvent2.default)(oldPage);\n      oldPage.classList.remove('fadeIn');\n      !animation ? this._removePageAfterTransition(oldPage, route) : this._removePageListenerFallback(oldPage, route, animation);\n      oldPage.classList.add('animated');\n      oldPage.classList.add('fadeOut');\n    }\n  }, {\n    key: '_getMiddlewares',\n    value: function _getMiddlewares(parent) {\n      var middlewares = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n      for (var i = 0; i < parent.children.length; i++) {\n        var child = parent.children[i];\n        this._addMiddleware(!_window.customElements.get(child.tagName.toLowerCase()) ? this._lazyLoadMiddleware(child) : this._getMiddleware(child), middlewares);\n      }\n      return parent.tagName.toLowerCase() === 'littleq-router' || !parent.parentNode ? middlewares : this._getMiddlewares(parent.parentNode, middlewares);\n    }\n  }, {\n    key: '_addMiddleware',\n    value: function _addMiddleware(middleware, middlewares) {\n      if (middleware !== undefined) {\n        middleware instanceof Promise ? middlewares.push(middleware) : middlewares.push(Promise.resolve(middleware));\n      }\n    }\n  }, {\n    key: '_getMiddleware',\n    value: function _getMiddleware(middleware) {\n      if (typeof middleware.middleware === 'function' && middleware.tagName.toLowerCase() !== 'littleq-route') return middleware.middleware();\n    }\n  }, {\n    key: '_lazyLoadMiddleware',\n    value: function _lazyLoadMiddleware(middleware) {\n      var _this4 = this;\n\n      return this._lazyLoader.import(middleware.tagName.toLowerCase()).then(function () {\n        return _this4._getMiddleware(middleware);\n      }).catch(function (e) {\n        console.error(e);\n        (0, _window.alert)(e.message);\n        return false;\n        // if (this.currentRoute !== 'not-found') {\n        //   this.dispatch({\n        //     type: ROUTER_ACTION.ROUTE,\n        //     route: 'not-found'\n        //   });\n        // }\n      });\n    }\n  }, {\n    key: '_processMiddlewares',\n    value: function _processMiddlewares(page, redirect, middlewares) {\n      middlewares.reduce(function (middleware, prev) {\n        return prev && middleware && typeof middleware === 'boolean';\n      }) ? this._loadPage(page) : this._loadRedirect(redirect);\n    }\n  }, {\n    key: '_loadRedirect',\n    value: function _loadRedirect(redirect) {\n      redirect ? this._loadPage(redirect) : this._loadDefaultRedirect();\n    }\n  }, {\n    key: '_loadDefaultRedirect',\n    value: function _loadDefaultRedirect() {\n      var redirect = this.defaultRedirect ? document.createElement(this.defaultRedirect) : null;\n      redirect ? this._loadPage(redirect) : this.dispatch({\n        type: _reducer.ROUTER_ACTION.ROUTE,\n        route: 'not-found'\n      });\n    }\n  }, {\n    key: '_checkMiddlewares',\n    value: function _checkMiddlewares(route) {\n      if (this.querySelector('[slot=\"page\"]')) this.removeChild(this.querySelector('[slot=\"page\"]'));\n      var middlewares = this._getMiddlewares(route);\n      var page = document.createElement(route.page);\n      var redirect = route.redirect ? document.createElement(route.redirect) : null;\n      middlewares.length ? Promise.all(middlewares).then(this._processMiddlewares.bind(this, page, redirect)) : this._loadPage(page);\n    }\n  }, {\n    key: '_loadPage',\n    value: function _loadPage(page) {\n      !_window.customElements.get(page.tagName.toLowerCase()) ? this._lazyLoadPage(page) : this._showPage(page);\n    }\n  }, {\n    key: '_lazyLoadPage',\n    value: function _lazyLoadPage(page) {\n      var _this5 = this;\n\n      this._lazyLoader.import(page.tagName.toLowerCase()).then(function () {\n        _this5._showPage(page);\n      }).catch(function (e) {\n        if (_this5.currentRoute !== 'not-found') {\n          _this5.dispatch({\n            type: _reducer.ROUTER_ACTION.ROUTE,\n            route: 'not-found'\n          });\n        }\n      });\n    }\n  }, {\n    key: '_showPage',\n    value: function _showPage(page) {\n      page.setAttribute('slot', 'page');\n      page.classList.add('animated');\n      page.classList.add('fadeIn');\n      this.appendChild(page);\n\n      if (window.ga) {\n        ga('set', 'page', this.path);\n        ga('send', 'pageview');\n      }\n    }\n  }], [{\n    key: 'observers',\n    get: function get() {\n      return ['_checkPathRouteIfExists(path, currentRoute)'];\n    }\n  }]);\n\n  return LittleqRouter;\n}((0, _stateManager.ReduxMixin)((0, _queryParamsMixin2.default)((0, _locationMixin2.default)(_polymerElement.Element))));\n\n!_window.customElements.get(LittleqRouter.is) ? _window.customElements.define(LittleqRouter.is, LittleqRouter) : console.warn(LittleqRouter.is + ' is already defined');\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/* From Modernizr */\nexports.default = function (el) {\n  var animations = {\n    'animation': 'animationend',\n    'OAnimation': 'oAnimationEnd',\n    'MozAnimation': 'animationend',\n    'WebkitAnimation': 'webkitAnimationEnd'\n  };\n\n  for (var t in animations) {\n    if (el.style[t] !== undefined) {\n      return animations[t];\n    }\n  }\n};\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LOCATION_ACTION = undefined;\n\nvar _stateManager = __webpack_require__(1);\n\nvar _redux = __webpack_require__(10);\n\nvar LOCATION_ACTION = {\n  PATH: 'LOCATION_UPDATE_PATH',\n  QUERY: 'LOCATION_UPDATE_QUERY',\n  HASH: 'LOCATION_UPDATE_HASH'\n};\n\n_stateManager.reducers.location = function () {\n  var location = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments[1];\n\n  switch (action.type) {\n    case LOCATION_ACTION.PATH:\n      return Object.assign({}, location, {\n        path: action.path\n      });\n    case LOCATION_ACTION.QUERY:\n      return Object.assign({}, location, {\n        query: action.query\n      });\n    case LOCATION_ACTION.HASH:\n      return Object.assign({}, location, {\n        hash: action.query\n      });\n    default:\n      return location;\n  }\n};\n\n_stateManager.store.replaceReducer((0, _redux.combineReducers)(_stateManager.reducers));\n\nexports.LOCATION_ACTION = LOCATION_ACTION;\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _window = __webpack_require__(7);\n\nvar workingURL;\nvar urlDoc, urlBase, anchor;\n\n/**\n * @param {string} path\n * @param {string=} base\n * @return {!URL|!HTMLAnchorElement}\n */\n\nexports.default = function (path, base) {\n  if (workingURL === undefined) {\n    workingURL = false;\n    try {\n      var u = new _window.URL('b', 'http://a');\n      u.pathname = 'c%20d';\n      workingURL = u.href === 'http://a/c%20d';\n      workingURL = workingURL && new _window.URL('http://www.google.com/?foo bar').href === 'http://www.google.com/?foo%20bar';\n    } catch (e) {}\n  }\n  if (workingURL) {\n    return new _window.URL(path, base);\n  }\n  if (!urlDoc) {\n    urlDoc = document.implementation.createHTMLDocument('url');\n    urlBase = urlDoc.createElement('base');\n    urlDoc.head.appendChild(urlBase);\n    anchor = /** @type {HTMLAnchorElement} */urlDoc.createElement('a');\n  }\n  urlBase.href = base;\n  anchor.href = path.replace(/ /g, '%20');\n  return anchor;\n};\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.QUERYPARAMS_ACTION = undefined;\n\nvar _stateManager = __webpack_require__(1);\n\nvar _redux = __webpack_require__(10);\n\nvar QUERYPARAMS_ACTION = {\n  UPDATE: 'QUERYPARAMS_UPDATE'\n};\n\n_stateManager.reducers.query = function () {\n  var query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments[1];\n\n  switch (action.type) {\n    case QUERYPARAMS_ACTION.UPDATE:\n      return Object.assign({}, query, {\n        params: action.params\n      });\n    default:\n      return query;\n  }\n};\n\n_stateManager.store.replaceReducer((0, _redux.combineReducers)(_stateManager.reducers));\n\nexports.QUERYPARAMS_ACTION = QUERYPARAMS_ACTION;\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _polymerElement = __webpack_require__(15);\n\nvar _stateManager = __webpack_require__(1);\n\nvar _locationMixin = __webpack_require__(26);\n\nvar _locationMixin2 = _interopRequireDefault(_locationMixin);\n\nvar _queryParamsMixin = __webpack_require__(27);\n\nvar _queryParamsMixin2 = _interopRequireDefault(_queryParamsMixin);\n\nvar _pathToRegexp = __webpack_require__(25);\n\nvar _pathToRegexp2 = _interopRequireDefault(_pathToRegexp);\n\nvar _window = __webpack_require__(7);\n\nvar _reducer = __webpack_require__(24);\n\nvar _getRoutes = __webpack_require__(64);\n\nvar _getRoutes2 = _interopRequireDefault(_getRoutes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar LittleqRoute = function (_ReduxMixin) {\n  _inherits(LittleqRoute, _ReduxMixin);\n\n  function LittleqRoute() {\n    _classCallCheck(this, LittleqRoute);\n\n    return _possibleConstructorReturn(this, (LittleqRoute.__proto__ || Object.getPrototypeOf(LittleqRoute)).apply(this, arguments));\n  }\n\n  _createClass(LittleqRoute, [{\n    key: '_processPage',\n    value: function _processPage() {\n      var router = this;\n      do {\n        router = router.parentNode;\n      } while (router.tagName.toLowerCase() !== 'littleq-router');\n      var page = router.querySelector('[slot=\"page\"]');\n      page ? router._removePage(page, this) : router._checkMiddlewares(this);\n    }\n  }, {\n    key: '_checkRoute',\n    value: function _checkRoute(route) {\n      if (route === (0, _getRoutes2.default)(this)) this._processPage();\n    }\n  }, {\n    key: '_routeMatches',\n    value: function _routeMatches(route, exec, keys) {\n      var params = {};\n      keys.forEach(function (key, index) {\n        var name = key.name;\n\n        params[name] = exec[index + 1] || null;\n      });\n\n      this.dispatch({\n        type: _reducer.ROUTER_ACTION.PARAMS,\n        params: params\n      });\n\n      this.dispatch({\n        type: _reducer.ROUTER_ACTION.ROUTE,\n        route: route\n      });\n    }\n  }, {\n    key: '_checkIfRouteMatches',\n    value: function _checkIfRouteMatches(path) {\n      var route = (0, _getRoutes2.default)(this);\n      var keys = [];\n      var re = (0, _pathToRegexp2.default)(route, keys);\n      var exec = re.exec(path);\n      if (exec) this._routeMatches(route, exec, keys);\n    }\n  }, {\n    key: '_pathChanged',\n    value: function _pathChanged(path) {\n      path = path.replace(/index\\.html$/, '');\n      if (this.route) this._checkIfRouteMatches(path);\n    }\n  }], [{\n    key: 'is',\n    get: function get() {\n      return 'littleq-route';\n    }\n  }, {\n    key: 'properties',\n    get: function get() {\n      return {\n        page: {\n          type: String\n        },\n\n        redirect: {\n          type: String\n        },\n\n        route: {\n          type: String,\n          value: 'not-found'\n        },\n\n        params: {\n          type: Object,\n          statePath: 'router.params'\n        },\n\n        currentRoute: {\n          type: String,\n          observer: '_checkRoute',\n          statePath: 'router.route'\n        }\n      };\n    }\n  }]);\n\n  return LittleqRoute;\n}((0, _stateManager.ReduxMixin)((0, _queryParamsMixin2.default)((0, _locationMixin2.default)(_polymerElement.Element))));\n\n!_window.customElements.get(LittleqRoute.is) ? _window.customElements.define(LittleqRoute.is, LittleqRoute) : console.warn(LittleqRoute.is + ' is already defined');\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar getRoutes = function getRoutes(el) {\n  var route = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  route = el.route + route;\n  return el.parentNode && el.parentNode.tagName.toLowerCase() === 'littleq-route' ? getRoutes(el.parentNode, route) : route;\n};\n\nexports.default = getRoutes;\n\n/***/ }),\n/* 65 */,\n/* 66 */,\n/* 67 */,\n/* 68 */,\n/* 69 */,\n/* 70 */,\n/* 71 */,\n/* 72 */,\n/* 73 */,\n/* 74 */,\n/* 75 */,\n/* 76 */,\n/* 77 */,\n/* 78 */,\n/* 79 */,\n/* 80 */,\n/* 81 */,\n/* 82 */,\n/* 83 */,\n/* 84 */,\n/* 85 */,\n/* 86 */,\n/* 87 */,\n/* 88 */,\n/* 89 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GestureEventListeners = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\n__webpack_require__(0);\n\nvar _mixin = __webpack_require__(4);\n\nvar _gestures = __webpack_require__(40);\n\nvar gestures$0 = _interopRequireWildcard(_gestures);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @const {Polymer.Gestures}\n */\nvar gestures = gestures$0;\n\nvar GestureEventListeners = exports.GestureEventListeners = (0, _mixin.dedupingMixin)(function (superClass) {\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_GestureEventListeners}\n   */\n  var GestureEventListeners = function (_superClass) {\n    _inherits(GestureEventListeners, _superClass);\n\n    function GestureEventListeners() {\n      _classCallCheck(this, GestureEventListeners);\n\n      return _possibleConstructorReturn(this, (GestureEventListeners.__proto__ || Object.getPrototypeOf(GestureEventListeners)).apply(this, arguments));\n    }\n\n    _createClass(GestureEventListeners, [{\n      key: '_addEventListenerToNode',\n      value: function _addEventListenerToNode(node, eventName, handler) {\n        if (!gestures.addListener(node, eventName, handler)) {\n          _get(GestureEventListeners.prototype.__proto__ || Object.getPrototypeOf(GestureEventListeners.prototype), '_addEventListenerToNode', this).call(this, node, eventName, handler);\n        }\n      }\n    }, {\n      key: '_removeEventListenerFromNode',\n      value: function _removeEventListenerFromNode(node, eventName, handler) {\n        if (!gestures.removeListener(node, eventName, handler)) {\n          _get(GestureEventListeners.prototype.__proto__ || Object.getPrototypeOf(GestureEventListeners.prototype), '_removeEventListenerFromNode', this).call(this, node, eventName, handler);\n        }\n      }\n    }]);\n\n    return GestureEventListeners;\n  }(superClass);\n\n  return GestureEventListeners;\n});\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function (useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif (item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function (modules, mediaQuery) {\n\t\tif (typeof modules === \"string\") modules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor (var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif (typeof id === \"number\") alreadyImportedModules[id] = true;\n\t\t}\n\t\tfor (i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif (typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif (mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if (mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// main.js"," \t// install a JSONP callback for chunk loading\n \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules, executeModules) {\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [], result;\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules, executeModules);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// objects to store loaded and loading chunks\n \tvar installedChunks = {\n \t\t11: 0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData === 0) {\n \t\t\treturn new Promise(function(resolve) { resolve(); });\n \t\t}\n\n \t\t// a Promise means \"currently loading\".\n \t\tif(installedChunkData) {\n \t\t\treturn installedChunkData[2];\n \t\t}\n\n \t\t// setup Promise in chunk cache\n \t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t});\n \t\tinstalledChunkData[2] = promise;\n\n \t\t// start chunk loading\n \t\tvar head = document.getElementsByTagName('head')[0];\n \t\tvar script = document.createElement('script');\n \t\tscript.type = 'text/javascript';\n \t\tscript.charset = 'utf-8';\n \t\tscript.async = true;\n \t\tscript.timeout = 120000;\n\n \t\tif (__webpack_require__.nc) {\n \t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t}\n \t\tscript.src = __webpack_require__.p + \"\" + ({\"0\":\"page-speakers\",\"1\":\"page-faq\",\"2\":\"page-tickets\",\"3\":\"page-sessions\",\"4\":\"page-sponsor\",\"5\":\"page-convince\",\"6\":\"page-about\",\"7\":\"page-schedule\",\"8\":\"page-not-found\",\"9\":\"page-home\",\"10\":\"page-not-authorized\"}[chunkId]||chunkId) + \".fragment.\" + chunkId + \".js\";\n \t\tvar timeout = setTimeout(onScriptComplete, 120000);\n \t\tscript.onerror = script.onload = onScriptComplete;\n \t\tfunction onScriptComplete() {\n \t\t\t// avoid mem leaks in IE.\n \t\t\tscript.onerror = script.onload = null;\n \t\t\tclearTimeout(timeout);\n \t\t\tvar chunk = installedChunks[chunkId];\n \t\t\tif(chunk !== 0) {\n \t\t\t\tif(chunk) {\n \t\t\t\t\tchunk[1](new Error('Loading chunk ' + chunkId + ' failed.'));\n \t\t\t\t}\n \t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t}\n \t\t};\n \t\thead.appendChild(script);\n\n \t\treturn promise;\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 32);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 561aaffc58d2b18210ec","window.JSCompiler_renameProperty = function(prop, obj) { return prop; }\n\n/** @namespace */\nlet Polymer;\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@polymer/polymer/lib/utils/boot.js","import { createStore } from 'redux';\nimport PolymerRedux from './mixins/polymer-redux';\n\nconst reducers = {};\nconst initial = {};\nconst store = createStore((state = initial, action) => state);\nconst ReduxMixin = PolymerRedux(store);\n\nexport { reducers, store, ReduxMixin };\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@littleq/state-manager/index.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n// WEBPACK FOOTER //\n// (webpack)/buildin/global.js","import './boot.js';\n\n// unique global id for deduping mixins.\nlet dedupeId = 0;\n\n/**\n * @constructor\n * @extends {Function}\n */\nfunction MixinFunction(){}\n/** @type {(WeakMap | undefined)} */\nMixinFunction.prototype.__mixinApplications;\n/** @type {(Object | undefined)} */\nMixinFunction.prototype.__mixinSet;\n\nexport const dedupingMixin = function(mixin) {\n  let mixinApplications = /** @type {!MixinFunction} */(mixin).__mixinApplications;\n  if (!mixinApplications) {\n    mixinApplications = new WeakMap();\n    /** @type {!MixinFunction} */(mixin).__mixinApplications = mixinApplications;\n  }\n  // maintain a unique id for each mixin\n  let mixinDedupeId = dedupeId++;\n  function dedupingMixin(base) {\n    let baseSet = /** @type {!MixinFunction} */(base).__mixinSet;\n    if (baseSet && baseSet[mixinDedupeId]) {\n      return base;\n    }\n    let map = mixinApplications;\n    let extended = map.get(base);\n    if (!extended) {\n      extended = /** @type {!Function} */(mixin)(base);\n      map.set(base, extended);\n    }\n    // copy inherited mixin set from the extended class, or the base class\n    // NOTE: we avoid use of Set here because some browser (IE11)\n    // cannot extend a base Set via the constructor.\n    let mixinSet = Object.create(/** @type {!MixinFunction} */(extended).__mixinSet || baseSet || null);\n    mixinSet[mixinDedupeId] = true;\n    /** @type {!MixinFunction} */(extended).__mixinSet = mixinSet;\n    return extended;\n  }\n\n  return dedupingMixin;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@polymer/polymer/lib/utils/mixin.js","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/global/window.js","import './boot.js';\n\n/** @typedef {{run: function(function(), number=):number, cancel: function(number)}} */\nlet AsyncInterface; // eslint-disable-line no-unused-vars\n\n// Microtask implemented using Mutation Observer\nlet microtaskCurrHandle = 0;\nlet microtaskLastHandle = 0;\nlet microtaskCallbacks = [];\nlet microtaskNodeContent = 0;\nlet microtaskNode = document.createTextNode('');\nnew window.MutationObserver(microtaskFlush).observe(microtaskNode, {characterData: true});\n\nfunction microtaskFlush() {\n  const len = microtaskCallbacks.length;\n  for (let i = 0; i < len; i++) {\n    let cb = microtaskCallbacks[i];\n    if (cb) {\n      try {\n        cb();\n      } catch (e) {\n        setTimeout(() => { throw e; });\n      }\n    }\n  }\n  microtaskCallbacks.splice(0, len);\n  microtaskLastHandle += len;\n}\n\nexport const timeOut = {\n  /**\n   * Returns a sub-module with the async interface providing the provided\n   * delay.\n   *\n   * @memberof Polymer.Async.timeOut\n   * @param {number} delay Time to wait before calling callbacks in ms\n   * @return {AsyncInterface} An async timeout interface\n   */\n  after(delay) {\n    return  {\n      run(fn) { return setTimeout(fn, delay); },\n      cancel: window.clearTimeout.bind(window)\n    };\n  },\n  /**\n   * Enqueues a function called in the next task.\n   *\n   * @memberof Polymer.Async.timeOut\n   * @param {Function} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run: window.setTimeout.bind(window),\n  /**\n   * Cancels a previously enqueued `timeOut` callback.\n   *\n   * @memberof Polymer.Async.timeOut\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   */\n  cancel: window.clearTimeout.bind(window)\n};\n\nexport const animationFrame = {\n  /**\n   * Enqueues a function called at `requestAnimationFrame` timing.\n   *\n   * @memberof Polymer.Async.animationFrame\n   * @param {Function} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run: window.requestAnimationFrame.bind(window),\n  /**\n   * Cancels a previously enqueued `animationFrame` callback.\n   *\n   * @memberof Polymer.Async.timeOut\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   */\n  cancel: window.cancelAnimationFrame.bind(window)\n};\n\nexport const idlePeriod = {\n  /**\n   * Enqueues a function called at `requestIdleCallback` timing.\n   *\n   * @memberof Polymer.Async.idlePeriod\n   * @param {function(IdleDeadline)} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(fn) {\n    return window.requestIdleCallback ?\n      window.requestIdleCallback(fn) :\n      window.setTimeout(fn, 16);\n  },\n  /**\n   * Cancels a previously enqueued `idlePeriod` callback.\n   *\n   * @memberof Polymer.Async.idlePeriod\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   */\n  cancel(handle) {\n    window.cancelIdleCallback ?\n      window.cancelIdleCallback(handle) :\n      window.clearTimeout(handle);\n  }\n};\n\nexport const microTask = {\n\n  /**\n   * Enqueues a function called at microtask timing.\n   *\n   * @memberof Polymer.Async.microTask\n   * @param {Function} callback Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(callback) {\n    microtaskNode.textContent = microtaskNodeContent++;\n    microtaskCallbacks.push(callback);\n    return microtaskCurrHandle++;\n  },\n\n  /**\n   * Cancels a previously enqueued `microTask` callback.\n   *\n   * @memberof Polymer.Async.microTask\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   */\n  cancel(handle) {\n    const idx = handle - microtaskLastHandle;\n    if (idx >= 0) {\n      if (!microtaskCallbacks[idx]) {\n        throw new Error('invalid async handle: ' + handle);\n      }\n      microtaskCallbacks[idx] = null;\n    }\n  }\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@polymer/polymer/lib/utils/async.js","import './boot.js';\n\nlet CSS_URL_RX = /(url\\()([^)]*)(\\))/g;\nlet ABS_URL = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\nlet workingURL;\nlet resolveDoc;\n/**\n * Resolves the given URL against the provided `baseUri'.\n *\n * @memberof Polymer.ResolveUrl\n * @param {string} url Input URL to resolve\n * @param {?string=} baseURI Base URI to resolve the URL against\n * @return {string} resolved URL\n */\nfunction resolveUrl(url, baseURI) {\n  if (url && ABS_URL.test(url)) {\n    return url;\n  }\n  // Lazy feature detection.\n  if (workingURL === undefined) {\n    workingURL = false;\n    try {\n      const u = new URL('b', 'http://a');\n      u.pathname = 'c%20d';\n      workingURL = (u.href === 'http://a/c%20d');\n    } catch (e) {\n      // silently fail\n    }\n  }\n  if (!baseURI) {\n    baseURI = document.baseURI || window.location.href;\n  }\n  if (workingURL) {\n    return (new URL(url, baseURI)).href;\n  }\n  // Fallback to creating an anchor into a disconnected document.\n  if (!resolveDoc) {\n    resolveDoc = document.implementation.createHTMLDocument('temp');\n    resolveDoc.base = resolveDoc.createElement('base');\n    resolveDoc.head.appendChild(resolveDoc.base);\n    resolveDoc.anchor = resolveDoc.createElement('a');\n    resolveDoc.body.appendChild(resolveDoc.anchor);\n  }\n  resolveDoc.base.href = baseURI;\n  resolveDoc.anchor.href = url;\n  return resolveDoc.anchor.href || url;\n\n}\n\n/**\n * Resolves any relative URL's in the given CSS text against the provided\n * `ownerDocument`'s `baseURI`.\n *\n * @memberof Polymer.ResolveUrl\n * @param {string} cssText CSS text to process\n * @param {string} baseURI Base URI to resolve the URL against\n * @return {string} Processed CSS text with resolved URL's\n */\nfunction resolveCss(cssText, baseURI) {\n  return cssText.replace(CSS_URL_RX, function(m, pre, url, post) {\n    return pre + '\\'' +\n      resolveUrl(url.replace(/[\"']/g, ''), baseURI) +\n      '\\'' + post;\n  });\n}\n\n/**\n * Returns a path from a given `url`. The path includes the trailing\n * `/` from the url.\n *\n * @memberof Polymer.ResolveUrl\n * @param {string} url Input URL to transform\n * @return {string} resolved path\n */\nfunction pathFromUrl(url) {\n  return url.substring(0, url.lastIndexOf('/') + 1);\n}\n\nexport { resolveCss };\nexport { resolveUrl };\nexport { pathFromUrl };\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@polymer/polymer/lib/utils/resolve-url.js","import createStore from './createStore';\nimport combineReducers from './combineReducers';\nimport bindActionCreators from './bindActionCreators';\nimport applyMiddleware from './applyMiddleware';\nimport compose from './compose';\nimport warning from './utils/warning';\n\n/*\n* This is a dummy function to check if the function name has been altered by minification.\n* If the function has been minified and NODE_ENV !== 'production', warn the user.\n*/\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \\'production\\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { createStore, combineReducers, bindActionCreators, applyMiddleware, compose };\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/redux/es/index.js","import './boot.js';\n\nconst caseMap = {};\nconst DASH_TO_CAMEL = /-[a-z]/g;\nconst CAMEL_TO_DASH = /([A-Z])/g;\n\nexport function dashToCamelCase(dash) {\n  return caseMap[dash] || (\n    caseMap[dash] = dash.indexOf('-') < 0 ? dash : dash.replace(DASH_TO_CAMEL,\n      (m) => m[1].toUpperCase()\n    )\n  );\n}\n\nexport function camelToDashCase(camel) {\n  return caseMap[camel] || (\n    caseMap[camel] = camel.replace(CAMEL_TO_DASH, '-$1').toLowerCase()\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@polymer/polymer/lib/utils/case-map.js","import { ElementMixin } from './lib/mixins/element-mixin.js';\n\n/**\n * Base class that provides the core API for Polymer's meta-programming\n * features including template stamping, data-binding, attribute deserialization,\n * and property change observation.\n *\n * @customElement\n * @polymer\n * @memberof Polymer\n * @constructor\n * @implements {Polymer_ElementMixin}\n * @extends HTMLElement\n * @appliesMixin Polymer.ElementMixin\n * @summary Custom element base class that provides the core API for Polymer's\n *   key meta-programming features including template stamping, data-binding,\n *   attribute deserialization, and property change observation\n */\nconst Element = ElementMixin(HTMLElement);\nexport { Element };\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@polymer/polymer/polymer-element.js","import './boot.js';\n\nexport function isPath(path) {\n  return path.indexOf('.') >= 0;\n}\n\nexport function root(path) {\n  let dotIndex = path.indexOf('.');\n  if (dotIndex === -1) {\n    return path;\n  }\n  return path.slice(0, dotIndex);\n}\n\nexport function isAncestor(base, path) {\n  //     base.startsWith(path + '.');\n  return base.indexOf(path + '.') === 0;\n}\n\nexport function isDescendant(base, path) {\n  //     path.startsWith(base + '.');\n  return path.indexOf(base + '.') === 0;\n}\n\nexport function translate(base, newBase, path) {\n  return newBase + path.slice(base.length);\n}\n\nexport function matches(base, path) {\n  return (base === path) ||\n         isAncestor(base, path) ||\n         isDescendant(base, path);\n}\n\nexport function normalize(path) {\n  if (Array.isArray(path)) {\n    let parts = [];\n    for (let i=0; i<path.length; i++) {\n      let args = path[i].toString().split('.');\n      for (let j=0; j<args.length; j++) {\n        parts.push(args[j]);\n      }\n    }\n    return parts.join('.');\n  } else {\n    return path;\n  }\n}\n\nexport function split(path) {\n  if (Array.isArray(path)) {\n    return normalize(path).split('.');\n  }\n  return path.toString().split('.');\n}\n\nexport function get(root, path, info) {\n  let prop = root;\n  let parts = split(path);\n  // Loop over path parts[0..n-1] and dereference\n  for (let i=0; i<parts.length; i++) {\n    if (!prop) {\n      return;\n    }\n    let part = parts[i];\n    prop = prop[part];\n  }\n  if (info) {\n    info.path = parts.join('.');\n  }\n  return prop;\n}\n\nexport function set(root, path, value) {\n  let prop = root;\n  let parts = split(path);\n  let last = parts[parts.length-1];\n  if (parts.length > 1) {\n    // Loop over path parts[0..n-2] and dereference\n    for (let i=0; i<parts.length-1; i++) {\n      let part = parts[i];\n      prop = prop[part];\n      if (!prop) {\n        return;\n      }\n    }\n    // Set value to object at end of path\n    prop[last] = value;\n  } else {\n    // Simple property set\n    prop[path] = value;\n  }\n  return parts.join('.');\n}\n\nexport const isDeep = isPath;\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@polymer/polymer/lib/utils/path.js","import './boot.js';\nimport './mixin.js';\nimport './async.js';\n\n/** @typedef {{run: function(function(), number=):number, cancel: function(number)}} */\nlet AsyncModule; // eslint-disable-line no-unused-vars\n\n/**\n * @summary Collapse multiple callbacks into one invocation after a timer.\n * @memberof Polymer\n */\nclass Debouncer {\n  constructor() {\n    this._asyncModule = null;\n    this._callback = null;\n    this._timer = null;\n  }\n  /**\n   * Sets the scheduler; that is, a module with the Async interface,\n   * a callback and optional arguments to be passed to the run function\n   * from the async module.\n   *\n   * @param {!AsyncModule} asyncModule Object with Async interface.\n   * @param {function()} callback Callback to run.\n   */\n  setConfig(asyncModule, callback) {\n    this._asyncModule = asyncModule;\n    this._callback = callback;\n    this._timer = this._asyncModule.run(() => {\n      this._timer = null;\n      this._callback();\n    });\n  }\n  /**\n   * Cancels an active debouncer and returns a reference to itself.\n   */\n  cancel() {\n    if (this.isActive()) {\n      this._asyncModule.cancel(this._timer);\n      this._timer = null;\n    }\n  }\n  /**\n   * Flushes an active debouncer and returns a reference to itself.\n   */\n  flush() {\n    if (this.isActive()) {\n      this.cancel();\n      this._callback();\n    }\n  }\n  /**\n   * Returns true if the debouncer is active.\n   *\n   * @return {boolean} True if active.\n   */\n  isActive() {\n    return this._timer != null;\n  }\n/**\n * Creates a debouncer if no debouncer is passed as a parameter\n * or it cancels an active debouncer otherwise. The following\n * example shows how a debouncer can be called multiple times within a\n * microtask and \"debounced\" such that the provided callback function is\n * called once. Add this method to a custom element:\n *\n * _debounceWork() {\n *   this._debounceJob = Polymer.Debouncer.debounce(this._debounceJob,\n *       Polymer.Async.microTask, () => {\n *     this._doWork();\n *   });\n * }\n *\n * If the `_debounceWork` method is called multiple times within the same\n * microtask, the `_doWork` function will be called only once at the next\n * microtask checkpoint.\n *\n * Note: In testing it is often convenient to avoid asynchrony. To accomplish\n * this with a debouncer, you can use `Polymer.enqueueDebouncer` and\n * `Polymer.flush`. For example, extend the above example by adding\n * `Polymer.enqueueDebouncer(this._debounceJob)` at the end of the\n * `_debounceWork` method. Then in a test, call `Polymer.flush` to ensure\n * the debouncer has completed.\n *\n * @param {Debouncer?} debouncer Debouncer object.\n * @param {!AsyncModule} asyncModule Object with Async interface\n * @param {function()} callback Callback to run.\n * @return {!Debouncer} Returns a debouncer object.\n */\n  static debounce(debouncer, asyncModule, callback) {\n    if (debouncer instanceof Debouncer) {\n      debouncer.cancel();\n    } else {\n      debouncer = new Debouncer();\n    }\n    debouncer.setConfig(asyncModule, callback);\n    return debouncer;\n  }\n}\n\nexport { Debouncer };\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@polymer/polymer/lib/utils/debounce.js","import './boot.js';\nimport { pathFromUrl } from './resolve-url.js';\n\n/**\n * Legacy settings.\n * @namespace\n * @memberof Polymer\n */\nconst settings = undefined || {};\nexport const useShadow = !(window.ShadyDOM);\nexport const useNativeCSSProperties = Boolean(!window.ShadyCSS || window.ShadyCSS.nativeCss);\nexport const useNativeCustomElements = !(window.customElements.polyfillWrapFlushCallback);\nexport { settings as Settings };\n\n/**\n * Globally settable property that is automatically assigned to\n * `Polymer.ElementMixin` instances, useful for binding in templates to\n * make URL's relative to an application's root.  Defaults to the main\n * document URL, but can be overridden by users.  It may be useful to set\n * `Polymer.rootPath` to provide a stable application mount path when\n * using client side routing.\n *\n * @memberof Polymer\n */\nlet rootPath = undefined ||\n  pathFromUrl(document.baseURI || window.location.href);\n\nexport { rootPath };\n\nexport const setRootPath = function(path) {\n  rootPath = path;\n};\n\n/**\n * A global callback used to sanitize any value before inserting it into the DOM. The callback signature is:\n *\n *     Polymer = {\n *       sanitizeDOMValue: function(value, name, type, node) { ... }\n *     }\n *\n * Where:\n *\n * `value` is the value to sanitize.\n * `name` is the name of an attribute or property (for example, href).\n * `type` indicates where the value is being inserted: one of property, attribute, or text.\n * `node` is the node where the value is being inserted.\n *\n * @type {(function(*,string,string,Node):*)|undefined}\n * @memberof Polymer\n */\nlet sanitizeDOMValue = undefined;\n\nexport { sanitizeDOMValue };\n\nexport const setSanitizeDOMValue = function(newSanitizeDOMValue) {\n  sanitizeDOMValue = newSanitizeDOMValue;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@polymer/polymer/lib/utils/settings.js","import isPlainObject from 'lodash-es/isPlainObject';\nimport $$observable from 'symbol-observable';\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nexport var ActionTypes = {\n  INIT: '@@redux/INIT'\n\n  /**\n   * Creates a Redux store that holds the state tree.\n   * The only way to change the data in the store is to call `dispatch()` on it.\n   *\n   * There should only be a single store in your app. To specify how different\n   * parts of the state tree respond to actions, you may combine several reducers\n   * into a single reducer function by using `combineReducers`.\n   *\n   * @param {Function} reducer A function that returns the next state tree, given\n   * the current state tree and the action to handle.\n   *\n   * @param {any} [preloadedState] The initial state. You may optionally specify it\n   * to hydrate the state from the server in universal apps, or to restore a\n   * previously serialized user session.\n   * If you use `combineReducers` to produce the root reducer function, this must be\n   * an object with the same shape as `combineReducers` keys.\n   *\n   * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n   * to enhance the store with third-party capabilities such as middleware,\n   * time travel, persistence, etc. The only store enhancer that ships with Redux\n   * is `applyMiddleware()`.\n   *\n   * @returns {Store} A Redux store that lets you read the state, dispatch actions\n   * and subscribe to changes.\n   */\n};export default function createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n  function getState() {\n    return currentState;\n  }\n\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected listener to be a function.');\n    }\n\n    var isSubscribed = true;\n\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      isSubscribed = false;\n\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer;\n    dispatch({ type: ActionTypes.INIT });\n  }\n\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object') {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return { unsubscribe: unsubscribe };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  }\n\n  // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n  dispatch({ type: ActionTypes.INIT });\n\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/redux/es/createStore.js","import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/lodash-es/isPlainObject.js","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/lodash-es/_Symbol.js","/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nexport default function warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n    /* eslint-disable no-empty */\n  } catch (e) {}\n  /* eslint-enable no-empty */\n}\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/redux/es/utils/warning.js","/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\n\nexport default function compose() {\n  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(undefined, arguments));\n    };\n  });\n}\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/redux/es/compose.js","import { reducers, store } from '@littleq/state-manager';\nimport { combineReducers } from 'redux';\n\nconst ROUTER_ACTION = {\n  PARAMS: 'ROUTER_UPDATE_PARAMS',\n  ROUTE: 'ROUTER_UPDATE_ROUTE'\n};\n\nreducers.router = (router = {}, action) => {\n  switch (action.type) {\n    case ROUTER_ACTION.PARAMS:\n      return Object.assign({}, router, {\n        params: action.params\n      });\n    case ROUTER_ACTION.ROUTE:\n      return Object.assign({}, router, {\n        route: action.route\n      });\n    default:\n      return router;\n  }\n};\n\nstore.replaceReducer(combineReducers(reducers));\n\nexport { ROUTER_ACTION };\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@littleq/littleq-router/lib/reducer.js","/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp\nmodule.exports.parse = parse\nmodule.exports.compile = compile\nmodule.exports.tokensToFunction = tokensToFunction\nmodule.exports.tokensToRegExp = tokensToRegExp\n\n/**\n * Default configs.\n */\nvar DEFAULT_DELIMITER = '/'\nvar DEFAULT_DELIMITERS = './'\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\"]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined]\n  '(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var defaultDelimiter = (options && options.delimiter) || DEFAULT_DELIMITER\n  var delimiters = (options && options.delimiters) || DEFAULT_DELIMITERS\n  var pathEscaped = false\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) !== null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      pathEscaped = true\n      continue\n    }\n\n    var prev = ''\n    var next = str[index]\n    var name = res[2]\n    var capture = res[3]\n    var group = res[4]\n    var modifier = res[5]\n\n    if (!pathEscaped && path.length) {\n      var k = path.length - 1\n\n      if (delimiters.indexOf(path[k]) > -1) {\n        prev = path[k]\n        path = path.slice(0, k)\n      }\n    }\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n      pathEscaped = false\n    }\n\n    var partial = prev !== '' && next !== undefined && next !== prev\n    var repeat = modifier === '+' || modifier === '*'\n    var optional = modifier === '?' || modifier === '*'\n    var delimiter = prev || defaultDelimiter\n    var pattern = capture || group\n\n    tokens.push({\n      name: name || key++,\n      prefix: prev,\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      pattern: pattern ? escapeGroup(pattern) : '[^' + escapeString(delimiter) + ']+?'\n    })\n  }\n\n  // Push any remaining characters.\n  if (path || index < str.length) {\n    tokens.push(path + str.substr(index))\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$')\n    }\n  }\n\n  return function (data, options) {\n    var path = ''\n    var encode = (options && options.encode) || encodeURIComponent\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n        continue\n      }\n\n      var value = data ? data[token.name] : undefined\n      var segment\n\n      if (Array.isArray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but got array')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) continue\n\n          throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j])\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\"')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        segment = encode(String(value))\n\n        if (!matches[i].test(segment)) {\n          throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but got \"' + segment + '\"')\n        }\n\n        path += token.prefix + segment\n        continue\n      }\n\n      if (token.optional) {\n        // Prepend partial segment prefixes.\n        if (token.partial) path += token.prefix\n\n        continue\n      }\n\n      throw new TypeError('Expected \"' + token.name + '\" to be ' + (token.repeat ? 'an array' : 'a string'))\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$/()])/g, '\\\\$1')\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {Array=}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  if (!keys) return path\n\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        pattern: null\n      })\n    }\n  }\n\n  return path\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  return new RegExp('(?:' + parts.join('|') + ')', flags(options))\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}  tokens\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  options = options || {}\n\n  var strict = options.strict\n  var end = options.end !== false\n  var delimiter = escapeString(options.delimiter || DEFAULT_DELIMITER)\n  var delimiters = options.delimiters || DEFAULT_DELIMITERS\n  var endsWith = [].concat(options.endsWith || []).map(escapeString).concat('$').join('|')\n  var route = ''\n  var isEndDelimited = false\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n      isEndDelimited = i === tokens.length - 1 && delimiters.indexOf(token[token.length - 1]) > -1\n    } else {\n      var prefix = escapeString(token.prefix)\n      var capture = token.repeat\n        ? '(?:' + token.pattern + ')(?:' + prefix + '(?:' + token.pattern + '))*'\n        : token.pattern\n\n      if (keys) keys.push(token)\n\n      if (token.optional) {\n        if (token.partial) {\n          route += prefix + '(' + capture + ')?'\n        } else {\n          route += '(?:' + prefix + '(' + capture + '))?'\n        }\n      } else {\n        route += prefix + '(' + capture + ')'\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += '(?:' + delimiter + ')?'\n\n    route += endsWith === '$' ? '$' : '(?=' + endsWith + ')'\n  } else {\n    if (!strict) route += '(?:' + delimiter + '(?=' + endsWith + '))?'\n    if (!isEndDelimited) route += '(?=' + delimiter + '|' + endsWith + ')'\n  }\n\n  return new RegExp('^' + route, flags(options))\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {Array=}                keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, keys)\n  }\n\n  if (Array.isArray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), keys, options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), keys, options)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/path-to-regexp/index.js","import { ReduxMixin } from '@littleq/state-manager';\nimport { LOCATION_ACTION } from './lib/reducer';\nimport resolveUrl from './lib/resolve-url';\n\nexport default (superClass) => {\n  return class extends ReduxMixin(superClass) {\n    static get properties () {\n      return {\n        // location-mixin\n        path: {\n          type: String,\n          observer: '_pathChanged',\n          statePath: 'location.path'\n        },\n\n        query: {\n          type: String,\n          observer: '_queryChanged',\n          statePath: 'location.query'\n        },\n\n        urlSpaceRegex: {\n          type: String\n        },\n\n        hash: {\n          type: String,\n          statePath: 'location.hash'\n        },\n\n        dwellTime: {\n          type: Number\n        },\n\n        _urlSpaceRegExp: {\n          type: String,\n          computed: '_makeRegExp(urlSpaceRegex)'\n        },\n\n        _lastChangedAt: {\n          type: String\n        },\n\n        _initialized: {\n          type: Boolean\n        }\n      };\n    }\n\n    constructor () {\n      super();\n      this._boundHashChanged = this._hashChanged.bind(this);\n      this._boundUrlChanged = this._urlChanged.bind(this);\n      this._boundGlobalOnClick = this._globalOnClick.bind(this);\n    }\n\n    connectedCallback () {\n      if (super.disconnectedCallback) {\n        super.connectedCallback();\n      }\n      window.addEventListener('hashchange', this._boundHashChanged);\n      window.addEventListener('location-changed', this._boundUrlChanged);\n      window.addEventListener('popstate', this._boundUrlChanged);\n      document.body.addEventListener('click', this._boundGlobalOnClick, true);\n      this._lastChangedAt = window.performance.now() - (this.dwellTime - 200);\n      this._initialized = true;\n\n      // set initialize values\n      // this.path = window.decodeURIComponent(window.location.pathname);\n      // this.query = window.location.search.slice(1);\n      // this.hash = window.decodeURIComponent(window.location.hash.slice(1));\n      this.dwellTime = 2000;\n      this._initialized = false;\n      this._urlChanged();\n    }\n\n    disconnectedCallback () {\n      if (super.disconnectedCallback) {\n        super.disconnectedCallback();\n      }\n      window.removeEventListener('hashchange', this._boundHashChanged);\n      window.removeEventListener('location-changed', this._boundUrlChanged);\n      window.removeEventListener('popstate', this._boundUrlChanged);\n      document.body.removeEventListener('click', this._boundGlobalOnClick);\n      this._initialized = false;\n    }\n\n    _pathChanged (path) {}\n\n    _queryChanged (query) {}\n\n    _hashChanged () {\n      this.dispatch({\n        type: LOCATION_ACTION.HASH,\n        path: window.decodeURIComponent(window.location.hash.substring(1))\n      });\n      // this.hash = window.decodeURIComponent(window.location.hash.substring(1));\n    }\n\n    _urlChanged () {\n      // We want to extract all info out of the updated URL before we\n      // try to write anything back into it.\n      //\n      // i.e. without _dontUpdateUrl we'd overwrite the new path with the old\n      // one when we set this.hash. Likewise for query.\n      this._dontUpdateUrl = true;\n      this._hashChanged();\n\n      this.dispatch({\n        type: LOCATION_ACTION.PATH,\n        path: window.decodeURIComponent(window.location.pathname)\n      });\n\n      this.dispatch({\n        type: LOCATION_ACTION.QUERY,\n        query: window.location.search.substring(1)\n      });\n\n      // this.path =\n      // this.query =\n      this._dontUpdateUrl = false;\n      this._updateUrl();\n    }\n\n    _getUrl () {\n      var partiallyEncodedPath = window.encodeURI(this.path).replace(/\\#/g, '%23').replace(/\\?/g, '%3F'); // eslint-disable-line no-useless-escape\n      var partiallyEncodedQuery = '';\n      if (this.query) {\n        partiallyEncodedQuery = '?' + this.query.replace(/\\#/g, '%23'); // eslint-disable-line no-useless-escape\n      }\n      var partiallyEncodedHash = '';\n      if (this.hash) {\n        partiallyEncodedHash = '#' + window.encodeURI(this.hash);\n      }\n      return (partiallyEncodedPath + partiallyEncodedQuery + partiallyEncodedHash);\n    }\n\n    _updateUrl () {\n      if (this._dontUpdateUrl || !this._initialized) {\n        return;\n      }\n\n      if (this.path === window.decodeURIComponent(window.location.pathname) &&\n          this.query === window.location.search.substring(1) &&\n          this.hash === window.decodeURIComponent(window.location.hash.substring(1))) {\n        // Nothing to do, the current URL is a representation of our properties.\n        return;\n      }\n      var newUrl = this._getUrl();\n      // Need to use a full URL in case the containing page has a base URI.\n      var fullNewUrl = resolveUrl(newUrl, window.location.protocol + '//' + window.location.host).href;\n      var now = window.performance.now();\n      var shouldReplace = this._lastChangedAt + this.dwellTime > now;\n      this._lastChangedAt = now;\n      if (shouldReplace) {\n        window.history.replaceState({}, '', fullNewUrl);\n      } else {\n        window.history.pushState({}, '', fullNewUrl);\n      }\n      window.dispatchEvent(new window.CustomEvent('location-changed'));\n    }\n\n    /**\n     * A necessary evil so that links work as expected. Does its best to\n     * bail out early if possible.\n     *\n     * @param {MouseEvent} event .\n     */\n    _globalOnClick (event) {\n      // If another event handler has stopped this event then there's nothing\n      // for us to do. This can happen e.g. when there are multiple\n      // iron-location elements in a page.\n      if (event.defaultPrevented) {\n        return;\n      }\n      var href = this._getSameOriginLinkHref(event);\n      if (!href) {\n        return;\n      }\n      event.preventDefault();\n      // If the navigation is to the current page we shouldn't add a history\n      // entry or fire a change event.\n      if (href === window.location.href) {\n        return;\n      }\n\n      window.history.pushState({}, '', href);\n      window.dispatchEvent(new window.CustomEvent('location-changed'));\n    }\n\n    /**\n     * Returns the absolute URL of the link (if any) that this click event\n     * is clicking on, if we can and should override the resulting full\n     * page navigation. Returns null otherwise.\n     *\n     * @param {MouseEvent} event .\n     * @return {string?} .\n     */\n    _getSameOriginLinkHref (event) {\n      // We only care about left-clicks.\n      if (event.button !== 0) {\n        return null;\n      }\n      // We don't want modified clicks, where the intent is to open the page\n      // in a new tab.\n      if (event.metaKey || event.ctrlKey) {\n        return null;\n      }\n      var eventPath = event.composedPath();\n      var anchor = null;\n      for (var i = 0; i < eventPath.length; i++) {\n        var element = eventPath[i];\n        if (element.tagName === 'A' && element.href) {\n          anchor = element;\n          break;\n        }\n      }\n      // If there's no link there's nothing to do.\n      if (!anchor) {\n        return null;\n      }\n      // Target blank is a new tab, don't intercept.\n      if (anchor.target === '_blank') {\n        // capture link click\n        if (anchor.href && window.ga) {\n          window.ga('send', 'event', 'Link', 'Click', anchor.href, 1);\n        }\n        return null;\n      }\n      // If the link is for an existing parent frame, don't intercept.\n      if ((anchor.target === '_top' ||\n          anchor.target === '_parent') &&\n          window.top !== window) {\n        return null;\n      }\n      var href = anchor.href;\n      // It only makes sense for us to intercept same-origin navigations.\n      // pushState/replaceState don't work with cross-origin links.\n      var url;\n      if (document.baseURI != null) {\n        url = resolveUrl(href, /** @type {string} */(document.baseURI));\n      } else {\n        url = resolveUrl(href);\n      }\n      var origin;\n      // IE Polyfill\n      if (window.location.origin) {\n        origin = window.location.origin;\n      } else {\n        origin = window.location.protocol + '//' + window.location.host;\n      }\n      var urlOrigin;\n      if (url.origin) {\n        urlOrigin = url.origin;\n      } else {\n        urlOrigin = url.protocol + '//' + url.host;\n      }\n      if (urlOrigin !== origin) {\n        return null;\n      }\n      var normalizedHref = url.pathname + url.search + url.hash;\n      // pathname should start with '/', but may not if `new URL` is not supported\n      if (normalizedHref[0] !== '/') {\n        normalizedHref = '/' + normalizedHref;\n      }\n      // If we've been configured not to handle this url... don't handle it!\n      if (this._urlSpaceRegExp &&\n          !this._urlSpaceRegExp.test(normalizedHref)) {\n        return null;\n      }\n      // Need to use a full URL in case the containing page has a base URI.\n      var fullNormalizedHref = resolveUrl(normalizedHref, window.location.href).href;\n      return fullNormalizedHref;\n    }\n\n    _makeRegExp (urlSpaceRegex) {\n      return RegExp(urlSpaceRegex);\n    }\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@littleq/location-mixin/index.js","import { ReduxMixin } from '@littleq/state-manager';\nimport { QUERYPARAMS_ACTION } from './lib/reducer';\n\nexport default (superClass) => {\n  return class extends ReduxMixin(superClass) {\n    static get properties () {\n      return {\n        // query params 'paramsString', 'paramsObject', '_dontReact'\n        paramsString: {\n          type: String,\n          observer: '_paramsStringChanged'\n        },\n\n        paramsObject: {\n          type: Object,\n          statePath: 'query.params'\n        },\n\n        _dontReact: {\n          type: Boolean\n        }\n      };\n    }\n\n    connectedCallback () {\n      if (super.connectedCallback) {\n        super.connectedCallback();\n      }\n\n      // initialize values\n      this.paramsObject = {};\n      this._dontReact = false;\n    }\n\n    _queryChanged (query) {\n      this.paramsString = query;\n    }\n\n    _paramsStringChanged () {\n      this._dontReact = true;\n      this.dispatch({\n        type: QUERYPARAMS_ACTION.UPDATE,\n        params: this._decodeParams(this.paramsString)\n      });\n\n      // this.paramsObject =\n      this._dontReact = false;\n    }\n\n    paramsObjectChanged () {\n      if (this._dontReact) {\n        return;\n      }\n      this.paramsString = this._encodeParams(this.paramsObject)\n        .replace(/%3F/g, '?').replace(/%2F/g, '/').replace(/'/g, '%27');\n    }\n\n    _encodeParams (params) {\n      var encodedParams = [];\n      for (var key in params) {\n        var value = params[key];\n        if (value === '') {\n          encodedParams.push(encodeURIComponent(key));\n        } else if (value) {\n          encodedParams.push(\n            encodeURIComponent(key) +\n            '=' +\n            encodeURIComponent(value.toString())\n          );\n        }\n      }\n      return encodedParams.join('&');\n    }\n\n    _decodeParams (paramString) {\n      var params = {};\n      // Work around a bug in decodeURIComponent where + is not\n      // converted to spaces:\n      paramString = (paramString || '').replace(/\\+/g, '%20');\n      var paramList = paramString.split('&');\n      for (var i = 0; i < paramList.length; i++) {\n        var param = paramList[i].split('=');\n        if (param[0]) {\n          params[decodeURIComponent(param[0])] =\n              decodeURIComponent(param[1] || '');\n        }\n      }\n      return params;\n    }\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@littleq/query-params-mixin/index.js","import '../utils/boot.js';\nimport { dedupingMixin } from '../utils/mixin.js';\nimport { root as root$0, isAncestor, isDescendant, get as get$0, translate, isPath as isPath$0, set as set$0, normalize } from '../utils/path.js';\nimport * as caseMap from '../utils/case-map.js';\nimport { camelToDashCase as camelToDashCase$0, dashToCamelCase } from '../utils/case-map.js';\nimport { PropertyAccessors } from './property-accessors.js';\nimport { TemplateStamp } from './template-stamp.js';\nimport { sanitizeDOMValue } from '../utils/settings.js';\n\n/** @const {Object} */\nconst CaseMap = caseMap;\n\n// Monotonically increasing unique ID used for de-duping effects triggered\n// from multiple properties in the same turn\nlet dedupeId = 0;\n\n/**\n * Property effect types; effects are stored on the prototype using these keys\n * @enum {string}\n */\nconst TYPES = {\n  COMPUTE: '__computeEffects',\n  REFLECT: '__reflectEffects',\n  NOTIFY: '__notifyEffects',\n  PROPAGATE: '__propagateEffects',\n  OBSERVE: '__observeEffects',\n  READ_ONLY: '__readOnly'\n};\n\n/**\n * @typedef {{\n * name: (string | undefined),\n * structured: (boolean | undefined),\n * wildcard: (boolean | undefined)\n * }}\n */\nlet DataTrigger; //eslint-disable-line no-unused-vars\n\n/**\n * @typedef {{\n * info: ?,\n * trigger: (!DataTrigger | undefined),\n * fn: (!Function | undefined)\n * }}\n */\nlet DataEffect; //eslint-disable-line no-unused-vars\n\nlet PropertyEffectsType; //eslint-disable-line no-unused-vars\n\n/**\n * Ensures that the model has an own-property map of effects for the given type.\n * The model may be a prototype or an instance.\n *\n * Property effects are stored as arrays of effects by property in a map,\n * by named type on the model. e.g.\n *\n *   __computeEffects: {\n *     foo: [ ... ],\n *     bar: [ ... ]\n *   }\n *\n * If the model does not yet have an effect map for the type, one is created\n * and returned.  If it does, but it is not an own property (i.e. the\n * prototype had effects), the the map is deeply cloned and the copy is\n * set on the model and returned, ready for new effects to be added.\n *\n * @param {Object} model Prototype or instance\n * @param {string} type Property effect type\n * @return {Object} The own-property map of effects for the given type\n * @private\n */\nfunction ensureOwnEffectMap(model, type) {\n  let effects = model[type];\n  if (!effects) {\n    effects = model[type] = {};\n  } else if (!model.hasOwnProperty(type)) {\n    effects = model[type] = Object.create(model[type]);\n    for (let p in effects) {\n      let protoFx = effects[p];\n      let instFx = effects[p] = Array(protoFx.length);\n      for (let i=0; i<protoFx.length; i++) {\n        instFx[i] = protoFx[i];\n      }\n    }\n  }\n  return effects;\n}\n\n// -- effects ----------------------------------------------\n\n/**\n * Runs all effects of a given type for the given set of property changes\n * on an instance.\n *\n * @param {!PropertyEffectsType} inst The instance with effects to run\n * @param {Object} effects Object map of property-to-Array of effects\n * @param {Object} props Bag of current property changes\n * @param {Object=} oldProps Bag of previous values for changed properties\n * @param {boolean=} hasPaths True with `props` contains one or more paths\n * @param {*=} extraArgs Additional metadata to pass to effect function\n * @return {boolean} True if an effect ran for this property\n * @private\n */\nfunction runEffects(inst, effects, props, oldProps, hasPaths, extraArgs) {\n  if (effects) {\n    let ran = false;\n    let id = dedupeId++;\n    for (let prop in props) {\n      if (runEffectsForProperty(inst, effects, id, prop, props, oldProps, hasPaths, extraArgs)) {\n        ran = true;\n      }\n    }\n    return ran;\n  }\n  return false;\n}\n\n/**\n * Runs a list of effects for a given property.\n *\n * @param {!PropertyEffectsType} inst The instance with effects to run\n * @param {Object} effects Object map of property-to-Array of effects\n * @param {number} dedupeId Counter used for de-duping effects\n * @param {string} prop Name of changed property\n * @param {*} props Changed properties\n * @param {*} oldProps Old properties\n * @param {boolean=} hasPaths True with `props` contains one or more paths\n * @param {*=} extraArgs Additional metadata to pass to effect function\n * @return {boolean} True if an effect ran for this property\n * @private\n */\nfunction runEffectsForProperty(inst, effects, dedupeId, prop, props, oldProps, hasPaths, extraArgs) {\n  let ran = false;\n  let rootProperty = hasPaths ? root$0(prop) : prop;\n  let fxs = effects[rootProperty];\n  if (fxs) {\n    for (let i=0, l=fxs.length, fx; (i<l) && (fx=fxs[i]); i++) {\n      if ((!fx.info || fx.info.lastRun !== dedupeId) &&\n          (!hasPaths || pathMatchesTrigger(prop, fx.trigger))) {\n        if (fx.info) {\n          fx.info.lastRun = dedupeId;\n        }\n        fx.fn(inst, prop, props, oldProps, fx.info, hasPaths, extraArgs);\n        ran = true;\n      }\n    }\n  }\n  return ran;\n}\n\n/**\n * Determines whether a property/path that has changed matches the trigger\n * criteria for an effect.  A trigger is a descriptor with the following\n * structure, which matches the descriptors returned from `parseArg`.\n * e.g. for `foo.bar.*`:\n * ```\n * trigger: {\n *   name: 'a.b',\n *   structured: true,\n *   wildcard: true\n * }\n * ```\n * If no trigger is given, the path is deemed to match.\n *\n * @param {string} path Path or property that changed\n * @param {DataTrigger} trigger Descriptor\n * @return {boolean} Whether the path matched the trigger\n */\nfunction pathMatchesTrigger(path, trigger) {\n  if (trigger) {\n    let triggerPath = trigger.name;\n    return (triggerPath == path) ||\n      (trigger.structured && isAncestor(triggerPath, path)) ||\n      (trigger.wildcard && isDescendant(triggerPath, path));\n  } else {\n    return true;\n  }\n}\n\n/**\n * Implements the \"observer\" effect.\n *\n * Calls the method with `info.methodName` on the instance, passing the\n * new and old values.\n *\n * @param {!PropertyEffectsType} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @private\n */\nfunction runObserverEffect(inst, property, props, oldProps, info) {\n  let fn = inst[info.methodName];\n  let changedProp = info.property;\n  if (fn) {\n    fn.call(inst, inst.__data[changedProp], oldProps[changedProp]);\n  } else if (!info.dynamicFn) {\n    console.warn('observer method `' + info.methodName + '` not defined');\n  }\n}\n\n/**\n * Runs \"notify\" effects for a set of changed properties.\n *\n * This method differs from the generic `runEffects` method in that it\n * will dispatch path notification events in the case that the property\n * changed was a path and the root property for that path didn't have a\n * \"notify\" effect.  This is to maintain 1.0 behavior that did not require\n * `notify: true` to ensure object sub-property notifications were\n * sent.\n *\n * @param {!PropertyEffectsType} inst The instance with effects to run\n * @param {Object} notifyProps Bag of properties to notify\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {boolean} hasPaths True with `props` contains one or more paths\n * @private\n */\nfunction runNotifyEffects(inst, notifyProps, props, oldProps, hasPaths) {\n  // Notify\n  let fxs = inst[TYPES.NOTIFY];\n  let notified;\n  let id = dedupeId++;\n  // Try normal notify effects; if none, fall back to try path notification\n  for (let prop in notifyProps) {\n    if (notifyProps[prop]) {\n      if (fxs && runEffectsForProperty(inst, fxs, id, prop, props, oldProps, hasPaths)) {\n        notified = true;\n      } else if (hasPaths && notifyPath(inst, prop, props)) {\n        notified = true;\n      }\n    }\n  }\n  // Flush host if we actually notified and host was batching\n  // And the host has already initialized clients; this prevents\n  // an issue with a host observing data changes before clients are ready.\n  let host;\n  if (notified && (host = inst.__dataHost) && host._invalidateProperties) {\n    host._invalidateProperties();\n  }\n}\n\n/**\n * Dispatches {property}-changed events with path information in the detail\n * object to indicate a sub-path of the property was changed.\n *\n * @param {!PropertyEffectsType} inst The element from which to fire the event\n * @param {string} path The path that was changed\n * @param {Object} props Bag of current property changes\n * @return {boolean} Returns true if the path was notified\n * @private\n */\nfunction notifyPath(inst, path, props) {\n  let rootProperty = root$0(path);\n  if (rootProperty !== path) {\n    let eventName = camelToDashCase$0(rootProperty) + '-changed';\n    dispatchNotifyEvent(inst, eventName, props[path], path);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Dispatches {property}-changed events to indicate a property (or path)\n * changed.\n *\n * @param {!PropertyEffectsType} inst The element from which to fire the event\n * @param {string} eventName The name of the event to send ('{property}-changed')\n * @param {*} value The value of the changed property\n * @param {string | null | undefined} path If a sub-path of this property changed, the path\n *   that changed (optional).\n * @private\n * @suppress {invalidCasts}\n */\nfunction dispatchNotifyEvent(inst, eventName, value, path) {\n  let detail = {\n    value: value,\n    queueProperty: true\n  };\n  if (path) {\n    detail.path = path;\n  }\n  /** @type {!HTMLElement} */(inst).dispatchEvent(new CustomEvent(eventName, { detail }));\n}\n\n/**\n * Implements the \"notify\" effect.\n *\n * Dispatches a non-bubbling event named `info.eventName` on the instance\n * with a detail object containing the new `value`.\n *\n * @param {!PropertyEffectsType} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @param {boolean} hasPaths True with `props` contains one or more paths\n * @private\n */\nfunction runNotifyEffect(inst, property, props, oldProps, info, hasPaths) {\n  let rootProperty = hasPaths ? root$0(property) : property;\n  let path = rootProperty != property ? property : null;\n  let value = path ? get$0(inst, path) : inst.__data[property];\n  if (path && value === undefined) {\n    value = props[property];  // specifically for .splices\n  }\n  dispatchNotifyEvent(inst, info.eventName, value, path);\n}\n\n/**\n * Handler function for 2-way notification events. Receives context\n * information captured in the `addNotifyListener` closure from the\n * `__notifyListeners` metadata.\n *\n * Sets the value of the notified property to the host property or path.  If\n * the event contained path information, translate that path to the host\n * scope's name for that path first.\n *\n * @param {CustomEvent} event Notification event (e.g. '<property>-changed')\n * @param {!PropertyEffectsType} inst Host element instance handling the notification event\n * @param {string} fromProp Child element property that was bound\n * @param {string} toPath Host property/path that was bound\n * @param {boolean} negate Whether the binding was negated\n * @private\n */\nfunction handleNotification(event, inst, fromProp, toPath, negate) {\n  let value;\n  let detail = /** @type {Object} */(event.detail);\n  let fromPath = detail && detail.path;\n  if (fromPath) {\n    toPath = translate(fromProp, toPath, fromPath);\n    value = detail && detail.value;\n  } else {\n    value = event.target[fromProp];\n  }\n  value = negate ? !value : value;\n  if (!inst[TYPES.READ_ONLY] || !inst[TYPES.READ_ONLY][toPath]) {\n    if (inst._setPendingPropertyOrPath(toPath, value, true, Boolean(fromPath))\n      && (!detail || !detail.queueProperty)) {\n      inst._invalidateProperties();\n    }\n  }\n}\n\n/**\n * Implements the \"reflect\" effect.\n *\n * Sets the attribute named `info.attrName` to the given property value.\n *\n * @param {!PropertyEffectsType} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @private\n */\nfunction runReflectEffect(inst, property, props, oldProps, info) {\n  let value = inst.__data[property];\n  if (sanitizeDOMValue) {\n    value = sanitizeDOMValue(value, info.attrName, 'attribute', /** @type {Node} */(inst));\n  }\n  inst._propertyToAttribute(property, info.attrName, value);\n}\n\n/**\n * Runs \"computed\" effects for a set of changed properties.\n *\n * This method differs from the generic `runEffects` method in that it\n * continues to run computed effects based on the output of each pass until\n * there are no more newly computed properties.  This ensures that all\n * properties that will be computed by the initial set of changes are\n * computed before other effects (binding propagation, observers, and notify)\n * run.\n *\n * @param {!PropertyEffectsType} inst The instance the effect will be run on\n * @param {!Object} changedProps Bag of changed properties\n * @param {!Object} oldProps Bag of previous values for changed properties\n * @param {boolean} hasPaths True with `props` contains one or more paths\n * @private\n */\nfunction runComputedEffects(inst, changedProps, oldProps, hasPaths) {\n  let computeEffects = inst[TYPES.COMPUTE];\n  if (computeEffects) {\n    let inputProps = changedProps;\n    while (runEffects(inst, computeEffects, inputProps, oldProps, hasPaths)) {\n      Object.assign(oldProps, inst.__dataOld);\n      Object.assign(changedProps, inst.__dataPending);\n      inputProps = inst.__dataPending;\n      inst.__dataPending = null;\n    }\n  }\n}\n\n/**\n * Implements the \"computed property\" effect by running the method with the\n * values of the arguments specified in the `info` object and setting the\n * return value to the computed property specified.\n *\n * @param {!PropertyEffectsType} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @private\n */\nfunction runComputedEffect(inst, property, props, oldProps, info) {\n  let result = runMethodEffect(inst, property, props, oldProps, info);\n  let computedProp = info.methodInfo;\n  if (inst.__dataHasAccessor && inst.__dataHasAccessor[computedProp]) {\n    inst._setPendingProperty(computedProp, result, true);\n  } else {\n    inst[computedProp] = result;\n  }\n}\n\n/**\n * Computes path changes based on path links set up using the `linkPaths`\n * API.\n *\n * @param {!PropertyEffectsType} inst The instance whose props are changing\n * @param {string | !Array<(string|number)>} path Path that has changed\n * @param {*} value Value of changed path\n * @private\n */\nfunction computeLinkedPaths(inst, path, value) {\n  let links = inst.__dataLinkedPaths;\n  if (links) {\n    let link;\n    for (let a in links) {\n      let b = links[a];\n      if (isDescendant(a, path)) {\n        link = translate(a, b, path);\n        inst._setPendingPropertyOrPath(link, value, true, true);\n      } else if (isDescendant(b, path)) {\n        link = translate(b, a, path);\n        inst._setPendingPropertyOrPath(link, value, true, true);\n      }\n    }\n  }\n}\n\n// -- bindings ----------------------------------------------\n\n/**\n * Adds binding metadata to the current `nodeInfo`, and binding effects\n * for all part dependencies to `templateInfo`.\n *\n * @param {Function} constructor Class that `_parseTemplate` is currently\n *   running on\n * @param {TemplateInfo} templateInfo Template metadata for current template\n * @param {NodeInfo} nodeInfo Node metadata for current template node\n * @param {string} kind Binding kind, either 'property', 'attribute', or 'text'\n * @param {string} target Target property name\n * @param {!Array<!BindingPart>} parts Array of binding part metadata\n * @param {string=} literal Literal text surrounding binding parts (specified\n *   only for 'property' bindings, since these must be initialized as part\n *   of boot-up)\n * @private\n */\nfunction addBinding(constructor, templateInfo, nodeInfo, kind, target, parts, literal) {\n  // Create binding metadata and add to nodeInfo\n  nodeInfo.bindings = nodeInfo.bindings || [];\n  let /** Binding */ binding = { kind, target, parts, literal, isCompound: (parts.length !== 1) };\n  nodeInfo.bindings.push(binding);\n  // Add listener info to binding metadata\n  if (shouldAddListener(binding)) {\n    let {event, negate} = binding.parts[0];\n    binding.listenerEvent = event || (CaseMap.camelToDashCase(target) + '-changed');\n    binding.listenerNegate = negate;\n  }\n  // Add \"propagate\" property effects to templateInfo\n  let index = templateInfo.nodeInfoList.length;\n  for (let i=0; i<binding.parts.length; i++) {\n    let part = binding.parts[i];\n    part.compoundIndex = i;\n    addEffectForBindingPart(constructor, templateInfo, binding, part, index);\n  }\n}\n\n/**\n * Adds property effects to the given `templateInfo` for the given binding\n * part.\n *\n * @param {Function} constructor Class that `_parseTemplate` is currently\n *   running on\n * @param {TemplateInfo} templateInfo Template metadata for current template\n * @param {!Binding} binding Binding metadata\n * @param {!BindingPart} part Binding part metadata\n * @param {number} index Index into `nodeInfoList` for this node\n */\nfunction addEffectForBindingPart(constructor, templateInfo, binding, part, index) {\n  if (!part.literal) {\n    if (binding.kind === 'attribute' && binding.target[0] === '-') {\n      console.warn('Cannot set attribute ' + binding.target +\n        ' because \"-\" is not a valid attribute starting character');\n    } else {\n      let dependencies = part.dependencies;\n      let info = { index, binding, part, evaluator: constructor };\n      for (let j=0; j<dependencies.length; j++) {\n        let trigger = dependencies[j];\n        if (typeof trigger == 'string') {\n          trigger = parseArg(trigger);\n          trigger.wildcard = true;\n        }\n        constructor._addTemplatePropertyEffect(templateInfo, trigger.rootProperty, {\n          fn: runBindingEffect,\n          info, trigger\n        });\n      }\n    }\n  }\n}\n\n/**\n * Implements the \"binding\" (property/path binding) effect.\n *\n * Note that binding syntax is overridable via `_parseBindings` and\n * `_evaluateBinding`.  This method will call `_evaluateBinding` for any\n * non-literal parts returned from `_parseBindings`.  However,\n * there is no support for _path_ bindings via custom binding parts,\n * as this is specific to Polymer's path binding syntax.\n *\n * @param {!PropertyEffectsType} inst The instance the effect will be run on\n * @param {string} path Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @param {boolean} hasPaths True with `props` contains one or more paths\n * @param {Array} nodeList List of nodes associated with `nodeInfoList` template\n *   metadata\n * @private\n */\nfunction runBindingEffect(inst, path, props, oldProps, info, hasPaths, nodeList) {\n  let node = nodeList[info.index];\n  let binding = info.binding;\n  let part = info.part;\n  // Subpath notification: transform path and set to client\n  // e.g.: foo=\"{{obj.sub}}\", path: 'obj.sub.prop', set 'foo.prop'=obj.sub.prop\n  if (hasPaths && part.source && (path.length > part.source.length) &&\n      (binding.kind == 'property') && !binding.isCompound &&\n      node.__dataHasAccessor && node.__dataHasAccessor[binding.target]) {\n    let value = props[path];\n    path = translate(part.source, binding.target, path);\n    if (node._setPendingPropertyOrPath(path, value, false, true)) {\n      inst._enqueueClient(node);\n    }\n  } else {\n    let value = info.evaluator._evaluateBinding(inst, part, path, props, oldProps, hasPaths);\n    // Propagate value to child\n    applyBindingValue(inst, node, binding, part, value);\n  }\n}\n\n/**\n * Sets the value for an \"binding\" (binding) effect to a node,\n * either as a property or attribute.\n *\n * @param {!PropertyEffectsType} inst The instance owning the binding effect\n * @param {Node} node Target node for binding\n * @param {!Binding} binding Binding metadata\n * @param {!BindingPart} part Binding part metadata\n * @param {*} value Value to set\n * @private\n */\nfunction applyBindingValue(inst, node, binding, part, value) {\n  value = computeBindingValue(node, value, binding, part);\n  if (sanitizeDOMValue) {\n    value = sanitizeDOMValue(value, binding.target, binding.kind, node);\n  }\n  if (binding.kind == 'attribute') {\n    // Attribute binding\n    inst._valueToNodeAttribute(/** @type {Element} */(node), value, binding.target);\n  } else {\n    // Property binding\n    let prop = binding.target;\n    if (node.__dataHasAccessor && node.__dataHasAccessor[prop]) {\n      if (!node[TYPES.READ_ONLY] || !node[TYPES.READ_ONLY][prop]) {\n        if (node._setPendingProperty(prop, value)) {\n          inst._enqueueClient(node);\n        }\n      }\n    } else  {\n      inst._setUnmanagedPropertyToNode(node, prop, value);\n    }\n  }\n}\n\n/**\n * Transforms an \"binding\" effect value based on compound & negation\n * effect metadata, as well as handling for special-case properties\n *\n * @param {Node} node Node the value will be set to\n * @param {*} value Value to set\n * @param {!Binding} binding Binding metadata\n * @param {!BindingPart} part Binding part metadata\n * @return {*} Transformed value to set\n * @private\n */\nfunction computeBindingValue(node, value, binding, part) {\n  if (binding.isCompound) {\n    let storage = node.__dataCompoundStorage[binding.target];\n    storage[part.compoundIndex] = value;\n    value = storage.join('');\n  }\n  if (binding.kind !== 'attribute') {\n    // Some browsers serialize `undefined` to `\"undefined\"`\n    if (binding.target === 'textContent' ||\n        (node.localName == 'input' && binding.target == 'value')) {\n      value = value == undefined ? '' : value;\n    }\n  }\n  return value;\n}\n\n/**\n * Returns true if a binding's metadata meets all the requirements to allow\n * 2-way binding, and therefore a `<property>-changed` event listener should be\n * added:\n * - used curly braces\n * - is a property (not attribute) binding\n * - is not a textContent binding\n * - is not compound\n *\n * @param {!Binding} binding Binding metadata\n * @return {boolean} True if 2-way listener should be added\n * @private\n */\nfunction shouldAddListener(binding) {\n  return Boolean(binding.target) &&\n         binding.kind != 'attribute' &&\n         binding.kind != 'text' &&\n         !binding.isCompound &&\n         binding.parts[0].mode === '{';\n}\n\n/**\n * Setup compound binding storage structures, notify listeners, and dataHost\n * references onto the bound nodeList.\n *\n * @param {!PropertyEffectsType} inst Instance that bas been previously bound\n * @param {TemplateInfo} templateInfo Template metadata\n * @private\n */\nfunction setupBindings(inst, templateInfo) {\n  // Setup compound storage, dataHost, and notify listeners\n  let {nodeList, nodeInfoList} = templateInfo;\n  if (nodeInfoList.length) {\n    for (let i=0; i < nodeInfoList.length; i++) {\n      let info = nodeInfoList[i];\n      let node = nodeList[i];\n      let bindings = info.bindings;\n      if (bindings) {\n        for (let i=0; i<bindings.length; i++) {\n          let binding = bindings[i];\n          setupCompoundStorage(node, binding);\n          addNotifyListener(node, inst, binding);\n        }\n      }\n      node.__dataHost = inst;\n    }\n  }\n}\n\n/**\n * Initializes `__dataCompoundStorage` local storage on a bound node with\n * initial literal data for compound bindings, and sets the joined\n * literal parts to the bound property.\n *\n * When changes to compound parts occur, they are first set into the compound\n * storage array for that property, and then the array is joined to result in\n * the final value set to the property/attribute.\n *\n * @param {Node} node Bound node to initialize\n * @param {Binding} binding Binding metadata\n * @private\n */\nfunction setupCompoundStorage(node, binding) {\n  if (binding.isCompound) {\n    // Create compound storage map\n    let storage = node.__dataCompoundStorage ||\n      (node.__dataCompoundStorage = {});\n    let parts = binding.parts;\n    // Copy literals from parts into storage for this binding\n    let literals = new Array(parts.length);\n    for (let j=0; j<parts.length; j++) {\n      literals[j] = parts[j].literal;\n    }\n    let target = binding.target;\n    storage[target] = literals;\n    // Configure properties with their literal parts\n    if (binding.literal && binding.kind == 'property') {\n      node[target] = binding.literal;\n    }\n  }\n}\n\n/**\n * Adds a 2-way binding notification event listener to the node specified\n *\n * @param {Object} node Child element to add listener to\n * @param {!PropertyEffectsType} inst Host element instance to handle notification event\n * @param {Binding} binding Binding metadata\n * @private\n */\nfunction addNotifyListener(node, inst, binding) {\n  if (binding.listenerEvent) {\n    let part = binding.parts[0];\n    node.addEventListener(binding.listenerEvent, function(e) {\n      handleNotification(e, inst, binding.target, part.source, part.negate);\n    });\n  }\n}\n\n// -- for method-based effects (complexObserver & computed) --------------\n\n/**\n * Adds property effects for each argument in the method signature (and\n * optionally, for the method name if `dynamic` is true) that calls the\n * provided effect function.\n *\n * @param {Element | Object} model Prototype or instance\n * @param {!MethodSignature} sig Method signature metadata\n * @param {string} type Type of property effect to add\n * @param {Function} effectFn Function to run when arguments change\n * @param {*=} methodInfo Effect-specific information to be included in\n *   method effect metadata\n * @param {boolean|Object=} dynamicFn Boolean or object map indicating whether\n *   method names should be included as a dependency to the effect. Note,\n *   defaults to true if the signature is static (sig.static is true).\n * @private\n */\nfunction createMethodEffect(model, sig, type, effectFn, methodInfo, dynamicFn) {\n  dynamicFn = sig.static || (dynamicFn &&\n    (typeof dynamicFn !== 'object' || dynamicFn[sig.methodName]));\n  let info = {\n    methodName: sig.methodName,\n    args: sig.args,\n    methodInfo,\n    dynamicFn\n  };\n  for (let i=0, arg; (i<sig.args.length) && (arg=sig.args[i]); i++) {\n    if (!arg.literal) {\n      model._addPropertyEffect(arg.rootProperty, type, {\n        fn: effectFn, info: info, trigger: arg\n      });\n    }\n  }\n  if (dynamicFn) {\n    model._addPropertyEffect(sig.methodName, type, {\n      fn: effectFn, info: info\n    });\n  }\n}\n\n/**\n * Calls a method with arguments marshaled from properties on the instance\n * based on the method signature contained in the effect metadata.\n *\n * Multi-property observers, computed properties, and inline computing\n * functions call this function to invoke the method, then use the return\n * value accordingly.\n *\n * @param {!PropertyEffectsType} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @return {*} Returns the return value from the method invocation\n * @private\n */\nfunction runMethodEffect(inst, property, props, oldProps, info) {\n  // Instances can optionally have a _methodHost which allows redirecting where\n  // to find methods. Currently used by `templatize`.\n  let context = inst._methodHost || inst;\n  let fn = context[info.methodName];\n  if (fn) {\n    let args = marshalArgs(inst.__data, info.args, property, props);\n    return fn.apply(context, args);\n  } else if (!info.dynamicFn) {\n    console.warn('method `' + info.methodName + '` not defined');\n  }\n}\n\nconst emptyArray = [];\n\n// Regular expressions used for binding\nconst IDENT  = '(?:' + '[a-zA-Z_$][\\\\w.:$\\\\-*]*' + ')';\nconst NUMBER = '(?:' + '[-+]?[0-9]*\\\\.?[0-9]+(?:[eE][-+]?[0-9]+)?' + ')';\nconst SQUOTE_STRING = '(?:' + '\\'(?:[^\\'\\\\\\\\]|\\\\\\\\.)*\\'' + ')';\nconst DQUOTE_STRING = '(?:' + '\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\"' + ')';\nconst STRING = '(?:' + SQUOTE_STRING + '|' + DQUOTE_STRING + ')';\nconst ARGUMENT = '(?:(' + IDENT + '|' + NUMBER + '|' +  STRING + ')\\\\s*' + ')';\nconst ARGUMENTS = '(?:' + ARGUMENT + '(?:,\\\\s*' + ARGUMENT + ')*' + ')';\nconst ARGUMENT_LIST = '(?:' + '\\\\(\\\\s*' +\n                              '(?:' + ARGUMENTS + '?' + ')' +\n                            '\\\\)\\\\s*' + ')';\nconst BINDING = '(' + IDENT + '\\\\s*' + ARGUMENT_LIST + '?' + ')'; // Group 3\nconst OPEN_BRACKET = '(\\\\[\\\\[|{{)' + '\\\\s*';\nconst CLOSE_BRACKET = '(?:]]|}})';\nconst NEGATE = '(?:(!)\\\\s*)?'; // Group 2\nconst EXPRESSION = OPEN_BRACKET + NEGATE + BINDING + CLOSE_BRACKET;\nconst bindingRegex = new RegExp(EXPRESSION, \"g\");\n\n/**\n * Create a string from binding parts of all the literal parts\n *\n * @param {!Array<BindingPart>} parts All parts to stringify\n * @return {string} String made from the literal parts\n */\nfunction literalFromParts(parts) {\n  let s = '';\n  for (let i=0; i<parts.length; i++) {\n    let literal = parts[i].literal;\n    s += literal || '';\n  }\n  return s;\n}\n\n/**\n * Parses an expression string for a method signature, and returns a metadata\n * describing the method in terms of `methodName`, `static` (whether all the\n * arguments are literals), and an array of `args`\n *\n * @param {string} expression The expression to parse\n * @return {?MethodSignature} The method metadata object if a method expression was\n *   found, otherwise `undefined`\n * @private\n */\nfunction parseMethod(expression) {\n  // tries to match valid javascript property names\n  let m = expression.match(/([^\\s]+?)\\(([\\s\\S]*)\\)/);\n  if (m) {\n    let methodName = m[1];\n    let sig = { methodName, static: true, args: emptyArray };\n    if (m[2].trim()) {\n      // replace escaped commas with comma entity, split on un-escaped commas\n      let args = m[2].replace(/\\\\,/g, '&comma;').split(',');\n      return parseArgs(args, sig);\n    } else {\n      return sig;\n    }\n  }\n  return null;\n}\n\n/**\n * Parses an array of arguments and sets the `args` property of the supplied\n * signature metadata object. Sets the `static` property to false if any\n * argument is a non-literal.\n *\n * @param {!Array<string>} argList Array of argument names\n * @param {!MethodSignature} sig Method signature metadata object\n * @return {!MethodSignature} The updated signature metadata object\n * @private\n */\nfunction parseArgs(argList, sig) {\n  sig.args = argList.map(function(rawArg) {\n    let arg = parseArg(rawArg);\n    if (!arg.literal) {\n      sig.static = false;\n    }\n    return arg;\n  }, this);\n  return sig;\n}\n\n/**\n * Parses an individual argument, and returns an argument metadata object\n * with the following fields:\n *\n *   {\n *     value: 'prop',        // property/path or literal value\n *     literal: false,       // whether argument is a literal\n *     structured: false,    // whether the property is a path\n *     rootProperty: 'prop', // the root property of the path\n *     wildcard: false       // whether the argument was a wildcard '.*' path\n *   }\n *\n * @param {string} rawArg The string value of the argument\n * @return {!MethodArg} Argument metadata object\n * @private\n */\nfunction parseArg(rawArg) {\n  // clean up whitespace\n  let arg = rawArg.trim()\n    // replace comma entity with comma\n    .replace(/&comma;/g, ',')\n    // repair extra escape sequences; note only commas strictly need\n    // escaping, but we allow any other char to be escaped since its\n    // likely users will do this\n    .replace(/\\\\(.)/g, '\\$1')\n    ;\n  // basic argument descriptor\n  let a = {\n    name: arg,\n    value: '',\n    literal: false\n  };\n  // detect literal value (must be String or Number)\n  let fc = arg[0];\n  if (fc === '-') {\n    fc = arg[1];\n  }\n  if (fc >= '0' && fc <= '9') {\n    fc = '#';\n  }\n  switch(fc) {\n    case \"'\":\n    case '\"':\n      a.value = arg.slice(1, -1);\n      a.literal = true;\n      break;\n    case '#':\n      a.value = Number(arg);\n      a.literal = true;\n      break;\n  }\n  // if not literal, look for structured path\n  if (!a.literal) {\n    a.rootProperty = root$0(arg);\n    // detect structured path (has dots)\n    a.structured = isPath$0(arg);\n    if (a.structured) {\n      a.wildcard = (arg.slice(-2) == '.*');\n      if (a.wildcard) {\n        a.name = arg.slice(0, -2);\n      }\n    }\n  }\n  return a;\n}\n\n/**\n * Gather the argument values for a method specified in the provided array\n * of argument metadata.\n *\n * The `path` and `value` arguments are used to fill in wildcard descriptor\n * when the method is being called as a result of a path notification.\n *\n * @param {Object} data Instance data storage object to read properties from\n * @param {!Array<!MethodArg>} args Array of argument metadata\n * @param {string} path Property/path name that triggered the method effect\n * @param {Object} props Bag of current property changes\n * @return {Array<*>} Array of argument values\n * @private\n */\nfunction marshalArgs(data, args, path, props) {\n  let values = [];\n  for (let i=0, l=args.length; i<l; i++) {\n    let arg = args[i];\n    let name = arg.name;\n    let v;\n    if (arg.literal) {\n      v = arg.value;\n    } else {\n      if (arg.structured) {\n        v = get$0(data, name);\n        // when data is not stored e.g. `splices`\n        if (v === undefined) {\n          v = props[name];\n        }\n      } else {\n        v = data[name];\n      }\n    }\n    if (arg.wildcard) {\n      // Only send the actual path changed info if the change that\n      // caused the observer to run matched the wildcard\n      let baseChanged = (name.indexOf(path + '.') === 0);\n      let matches = (path.indexOf(name) === 0 && !baseChanged);\n      values[i] = {\n        path: matches ? path : name,\n        value: matches ? props[path] : v,\n        base: v\n      };\n    } else {\n      values[i] = v;\n    }\n  }\n  return values;\n}\n\n// data api\n\n/**\n * Sends array splice notifications (`.splices` and `.length`)\n *\n * Note: this implementation only accepts normalized paths\n *\n * @param {!PropertyEffectsType} inst Instance to send notifications to\n * @param {Array} array The array the mutations occurred on\n * @param {string} path The path to the array that was mutated\n * @param {Array} splices Array of splice records\n * @private\n */\nfunction notifySplices(inst, array, path, splices) {\n  let splicesPath = path + '.splices';\n  inst.notifyPath(splicesPath, { indexSplices: splices });\n  inst.notifyPath(path + '.length', array.length);\n  // Null here to allow potentially large splice records to be GC'ed.\n  inst.__data[splicesPath] = {indexSplices: null};\n}\n\n/**\n * Creates a splice record and sends an array splice notification for\n * the described mutation\n *\n * Note: this implementation only accepts normalized paths\n *\n * @param {!PropertyEffectsType} inst Instance to send notifications to\n * @param {Array} array The array the mutations occurred on\n * @param {string} path The path to the array that was mutated\n * @param {number} index Index at which the array mutation occurred\n * @param {number} addedCount Number of added items\n * @param {Array} removed Array of removed items\n * @private\n */\nfunction notifySplice(inst, array, path, index, addedCount, removed) {\n  notifySplices(inst, array, path, [{\n    index: index,\n    addedCount: addedCount,\n    removed: removed,\n    object: array,\n    type: 'splice'\n  }]);\n}\n\n/**\n * Returns an upper-cased version of the string.\n *\n * @param {string} name String to uppercase\n * @return {string} Uppercased string\n * @private\n */\nfunction upper(name) {\n  return name[0].toUpperCase() + name.substring(1);\n}\n\nexport const PropertyEffects = dedupingMixin(superClass => {\n\n  /**\n   * @constructor\n   * @extends {superClass}\n   * @implements {Polymer_PropertyAccessors}\n   * @implements {Polymer_TemplateStamp}\n   * @unrestricted\n   */\n  const propertyEffectsBase = TemplateStamp(PropertyAccessors(superClass));\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_PropertyEffects}\n   * @extends {propertyEffectsBase}\n   * @unrestricted\n   */\n  class PropertyEffects extends propertyEffectsBase {\n\n    constructor() {\n      super();\n      /** @type {boolean} */\n      this.__dataClientsReady;\n      /** @type {Array} */\n      this.__dataPendingClients;\n      /** @type {Object} */\n      this.__dataToNotify;\n      /** @type {Object} */\n      this.__dataLinkedPaths;\n      /** @type {boolean} */\n      this.__dataHasPaths;\n      /** @type {Object} */\n      this.__dataCompoundStorage;\n      /** @type {Polymer_PropertyEffects} */\n      this.__dataHost;\n      /** @type {!Object} */\n      this.__dataTemp;\n      /** @type {boolean} */\n      this.__dataClientsInitialized;\n      /** @type {!Object} */\n      this.__data;\n      /** @type {!Object} */\n      this.__dataPending;\n      /** @type {!Object} */\n      this.__dataOld;\n      /** @type {Object} */\n      this.__computeEffects;\n      /** @type {Object} */\n      this.__reflectEffects;\n      /** @type {Object} */\n      this.__notifyEffects;\n      /** @type {Object} */\n      this.__propagateEffects;\n      /** @type {Object} */\n      this.__observeEffects;\n      /** @type {Object} */\n      this.__readOnly;\n      /** @type {number} */\n      this.__dataCounter;\n      /** @type {!TemplateInfo} */\n      this.__templateInfo;\n    }\n\n    get PROPERTY_EFFECT_TYPES() {\n      return TYPES;\n    }\n\n    _initializeProperties() {\n      super._initializeProperties();\n      hostStack.registerHost(this);\n      this.__dataClientsReady = false;\n      this.__dataPendingClients = null;\n      this.__dataToNotify = null;\n      this.__dataLinkedPaths = null;\n      this.__dataHasPaths = false;\n      // May be set on instance prior to upgrade\n      this.__dataCompoundStorage = this.__dataCompoundStorage || null;\n      this.__dataHost = this.__dataHost || null;\n      this.__dataTemp = {};\n      this.__dataClientsInitialized = false;\n    }\n\n    /**\n     * Overrides `Polymer.PropertyAccessors` implementation to provide a\n     * more efficient implementation of initializing properties from\n     * the prototype on the instance.\n     *\n     * @override\n     * @param {Object} props Properties to initialize on the prototype\n     */\n    _initializeProtoProperties(props) {\n      this.__data = Object.create(props);\n      this.__dataPending = Object.create(props);\n      this.__dataOld = {};\n    }\n\n    /**\n     * Overrides `Polymer.PropertyAccessors` implementation to avoid setting\n     * `_setProperty`'s `shouldNotify: true`.\n     *\n     * @override\n     * @param {Object} props Properties to initialize on the instance\n     */\n    _initializeInstanceProperties(props) {\n      let readOnly = this[TYPES.READ_ONLY];\n      for (let prop in props) {\n        if (!readOnly || !readOnly[prop]) {\n          this.__dataPending = this.__dataPending || {};\n          this.__dataOld = this.__dataOld || {};\n          this.__data[prop] = this.__dataPending[prop] = props[prop];\n        }\n      }\n    }\n\n    // Prototype setup ----------------------------------------\n\n    /**\n     * Equivalent to static `addPropertyEffect` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @param {string} property Property that should trigger the effect\n     * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES\n     * @param {Object=} effect Effect metadata object\n     * @protected\n     */\n    _addPropertyEffect(property, type, effect) {\n      this._createPropertyAccessor(property, type == TYPES.READ_ONLY);\n      // effects are accumulated into arrays per property based on type\n      let effects = ensureOwnEffectMap(this, type)[property];\n      if (!effects) {\n        effects = this[type][property] = [];\n      }\n      effects.push(effect);\n    }\n\n    /**\n     * Removes the given property effect.\n     *\n     * @param {string} property Property the effect was associated with\n     * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES\n     * @param {Object=} effect Effect metadata object to remove\n     */\n    _removePropertyEffect(property, type, effect) {\n      let effects = ensureOwnEffectMap(this, type)[property];\n      let idx = effects.indexOf(effect);\n      if (idx >= 0) {\n        effects.splice(idx, 1);\n      }\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a property effect\n     * of a certain type.\n     *\n     * @param {string} property Property name\n     * @param {string=} type Effect type, from this.PROPERTY_EFFECT_TYPES\n     * @return {boolean} True if the prototype/instance has an effect of this type\n     * @protected\n     */\n    _hasPropertyEffect(property, type) {\n      let effects = this[type];\n      return Boolean(effects && effects[property]);\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a \"read only\"\n     * accessor for the given property.\n     *\n     * @param {string} property Property name\n     * @return {boolean} True if the prototype/instance has an effect of this type\n     * @protected\n     */\n    _hasReadOnlyEffect(property) {\n      return this._hasPropertyEffect(property, TYPES.READ_ONLY);\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a \"notify\"\n     * property effect for the given property.\n     *\n     * @param {string} property Property name\n     * @return {boolean} True if the prototype/instance has an effect of this type\n     * @protected\n     */\n    _hasNotifyEffect(property) {\n      return this._hasPropertyEffect(property, TYPES.NOTIFY);\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a \"reflect to attribute\"\n     * property effect for the given property.\n     *\n     * @param {string} property Property name\n     * @return {boolean} True if the prototype/instance has an effect of this type\n     * @protected\n     */\n    _hasReflectEffect(property) {\n      return this._hasPropertyEffect(property, TYPES.REFLECT);\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a \"computed\"\n     * property effect for the given property.\n     *\n     * @param {string} property Property name\n     * @return {boolean} True if the prototype/instance has an effect of this type\n     * @protected\n     */\n    _hasComputedEffect(property) {\n      return this._hasPropertyEffect(property, TYPES.COMPUTE);\n    }\n\n    // Runtime ----------------------------------------\n\n    /**\n     * Sets a pending property or path.  If the root property of the path in\n     * question had no accessor, the path is set, otherwise it is enqueued\n     * via `_setPendingProperty`.\n     *\n     * This function isolates relatively expensive functionality necessary\n     * for the public API (`set`, `setProperties`, `notifyPath`, and property\n     * change listeners via {{...}} bindings), such that it is only done\n     * when paths enter the system, and not at every propagation step.  It\n     * also sets a `__dataHasPaths` flag on the instance which is used to\n     * fast-path slower path-matching code in the property effects host paths.\n     *\n     * `path` can be a path string or array of path parts as accepted by the\n     * public API.\n     *\n     * @param {string | !Array<number|string>} path Path to set\n     * @param {*} value Value to set\n     * @param {boolean=} shouldNotify Set to true if this change should\n     *  cause a property notification event dispatch\n     * @param {boolean=} isPathNotification If the path being set is a path\n     *   notification of an already changed value, as opposed to a request\n     *   to set and notify the change.  In the latter `false` case, a dirty\n     *   check is performed and then the value is set to the path before\n     *   enqueuing the pending property change.\n     * @return {boolean} Returns true if the property/path was enqueued in\n     *   the pending changes bag.\n     * @protected\n     */\n    _setPendingPropertyOrPath(path, value, shouldNotify, isPathNotification) {\n      if (isPathNotification ||\n          root$0(Array.isArray(path) ? path[0] : path) !== path) {\n        // Dirty check changes being set to a path against the actual object,\n        // since this is the entry point for paths into the system; from here\n        // the only dirty checks are against the `__dataTemp` cache to prevent\n        // duplicate work in the same turn only. Note, if this was a notification\n        // of a change already set to a path (isPathNotification: true),\n        // we always let the change through and skip the `set` since it was\n        // already dirty checked at the point of entry and the underlying\n        // object has already been updated\n        if (!isPathNotification) {\n          let old = get$0(this, path);\n          path = /** @type {string} */ (set$0(this, path, value));\n          // Use property-accessor's simpler dirty check\n          if (!path || !super._shouldPropertyChange(path, value, old)) {\n            return false;\n          }\n        }\n        this.__dataHasPaths = true;\n        if (this._setPendingProperty(/**@type{string}*/(path), value, shouldNotify)) {\n          computeLinkedPaths(this, path, value);\n          return true;\n        }\n      } else {\n        if (this.__dataHasAccessor && this.__dataHasAccessor[path]) {\n          return this._setPendingProperty(/**@type{string}*/(path), value, shouldNotify);\n        } else {\n          this[path] = value;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * Applies a value to a non-Polymer element/node's property.\n     *\n     * The implementation makes a best-effort at binding interop:\n     * Some native element properties have side-effects when\n     * re-setting the same value (e.g. setting `<input>.value` resets the\n     * cursor position), so we do a dirty-check before setting the value.\n     * However, for better interop with non-Polymer custom elements that\n     * accept objects, we explicitly re-set object changes coming from the\n     * Polymer world (which may include deep object changes without the\n     * top reference changing), erring on the side of providing more\n     * information.\n     *\n     * Users may override this method to provide alternate approaches.\n     *\n     * @param {Node} node The node to set a property on\n     * @param {string} prop The property to set\n     * @param {*} value The value to set\n     * @protected\n     */\n    _setUnmanagedPropertyToNode(node, prop, value) {\n      // It is a judgment call that resetting primitives is\n      // \"bad\" and resettings objects is also \"good\"; alternatively we could\n      // implement a whitelist of tag & property values that should never\n      // be reset (e.g. <input>.value && <select>.value)\n      if (value !== node[prop] || typeof value == 'object') {\n        node[prop] = value;\n      }\n    }\n\n    /**\n     * Overrides the `PropertyAccessors` implementation to introduce special\n     * dirty check logic depending on the property & value being set:\n     *\n     * 1. Any value set to a path (e.g. 'obj.prop': 42 or 'obj.prop': {...})\n     *    Stored in `__dataTemp`, dirty checked against `__dataTemp`\n     * 2. Object set to simple property (e.g. 'prop': {...})\n     *    Stored in `__dataTemp` and `__data`, dirty checked against\n     *    `__dataTemp` by default implementation of `_shouldPropertyChange`\n     * 3. Primitive value set to simple property (e.g. 'prop': 42)\n     *    Stored in `__data`, dirty checked against `__data`\n     *\n     * The dirty-check is important to prevent cycles due to two-way\n     * notification, but paths and objects are only dirty checked against any\n     * previous value set during this turn via a \"temporary cache\" that is\n     * cleared when the last `_propertiesChaged` exits. This is so:\n     * a. any cached array paths (e.g. 'array.3.prop') may be invalidated\n     *    due to array mutations like shift/unshift/splice; this is fine\n     *    since path changes are dirty-checked at user entry points like `set`\n     * b. dirty-checking for objects only lasts one turn to allow the user\n     *    to mutate the object in-place and re-set it with the same identity\n     *    and have all sub-properties re-propagated in a subsequent turn.\n     *\n     * The temp cache is not necessarily sufficient to prevent invalid array\n     * paths, since a splice can happen during the same turn (with pathological\n     * user code); we could introduce a \"fixup\" for temporarily cached array\n     * paths if needed: https://github.com/Polymer/polymer/issues/4227\n     *\n     * @param {string} property Name of the property\n     * @param {*} value Value to set\n     * @param {boolean=} shouldNotify True if property should fire notification\n     *   event (applies only for `notify: true` properties)\n     * @return {boolean} Returns true if the property changed\n     * @override\n     */\n    _setPendingProperty(property, value, shouldNotify) {\n      let isPath = this.__dataHasPaths && isPath$0(property);\n      let prevProps = isPath ? this.__dataTemp : this.__data;\n      if (this._shouldPropertyChange(property, value, prevProps[property])) {\n        if (!this.__dataPending) {\n          this.__dataPending = {};\n          this.__dataOld = {};\n        }\n        // Ensure old is captured from the last turn\n        if (!(property in this.__dataOld)) {\n          this.__dataOld[property] = this.__data[property];\n        }\n        // Paths are stored in temporary cache (cleared at end of turn),\n        // which is used for dirty-checking, all others stored in __data\n        if (isPath) {\n          this.__dataTemp[property] = value;\n        } else {\n          this.__data[property] = value;\n        }\n        // All changes go into pending property bag, passed to _propertiesChanged\n        this.__dataPending[property] = value;\n        // Track properties that should notify separately\n        if (isPath || (this[TYPES.NOTIFY] && this[TYPES.NOTIFY][property])) {\n          this.__dataToNotify = this.__dataToNotify || {};\n          this.__dataToNotify[property] = shouldNotify;\n        }\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Overrides base implementation to ensure all accessors set `shouldNotify`\n     * to true, for per-property notification tracking.\n     *\n     * @override\n     */\n    _setProperty(property, value) {\n      if (this._setPendingProperty(property, value, true)) {\n        this._invalidateProperties();\n      }\n    }\n\n    /**\n     * Overrides `PropertyAccessor`'s default async queuing of\n     * `_propertiesChanged`: if `__dataReady` is false (has not yet been\n     * manually flushed), the function no-ops; otherwise flushes\n     * `_propertiesChanged` synchronously.\n     *\n     * @override\n     */\n    _invalidateProperties() {\n      if (this.__dataReady) {\n        this._flushProperties();\n      }\n    }\n\n    /**\n     * Enqueues the given client on a list of pending clients, whose\n     * pending property changes can later be flushed via a call to\n     * `_flushClients`.\n     *\n     * @param {Object} client PropertyEffects client to enqueue\n     * @protected\n     */\n    _enqueueClient(client) {\n      this.__dataPendingClients = this.__dataPendingClients || [];\n      if (client !== this) {\n        this.__dataPendingClients.push(client);\n      }\n    }\n\n    /**\n     * Flushes any clients previously enqueued via `_enqueueClient`, causing\n     * their `_flushProperties` method to run.\n     *\n     * @protected\n     */\n    _flushClients() {\n      if (!this.__dataClientsReady) {\n        this.__dataClientsReady = true;\n        this._readyClients();\n        // Override point where accessors are turned on; importantly,\n        // this is after clients have fully readied, providing a guarantee\n        // that any property effects occur only after all clients are ready.\n        this.__dataReady = true;\n      } else {\n        this.__enableOrFlushClients();\n      }\n    }\n\n    // NOTE: We ensure clients either enable or flush as appropriate. This\n    // handles two corner cases:\n    // (1) clients flush properly when connected/enabled before the host\n    // enables; e.g.\n    //   (a) Templatize stamps with no properties and does not flush and\n    //   (b) the instance is inserted into dom and\n    //   (c) then the instance flushes.\n    // (2) clients enable properly when not connected/enabled when the host\n    // flushes; e.g.\n    //   (a) a template is runtime stamped and not yet connected/enabled\n    //   (b) a host sets a property, causing stamped dom to flush\n    //   (c) the stamped dom enables.\n    __enableOrFlushClients() {\n      let clients = this.__dataPendingClients;\n      if (clients) {\n        this.__dataPendingClients = null;\n        for (let i=0; i < clients.length; i++) {\n          let client = clients[i];\n          if (!client.__dataEnabled) {\n            client._enableProperties();\n          } else if (client.__dataPending) {\n            client._flushProperties();\n          }\n        }\n      }\n    }\n\n    /**\n     * Perform any initial setup on client dom. Called before the first\n     * `_flushProperties` call on client dom and before any element\n     * observers are called.\n     *\n     * @protected\n     */\n    _readyClients() {\n      this.__enableOrFlushClients();\n    }\n\n    /**\n     * Sets a bag of property changes to this instance, and\n     * synchronously processes all effects of the properties as a batch.\n     *\n     * Property names must be simple properties, not paths.  Batched\n     * path propagation is not supported.\n     *\n     * @param {Object} props Bag of one or more key-value pairs whose key is\n     *   a property and value is the new value to set for that property.\n     * @param {boolean=} setReadOnly When true, any private values set in\n     *   `props` will be set. By default, `setProperties` will not set\n     *   `readOnly: true` root properties.\n     * @public\n     */\n    setProperties(props, setReadOnly) {\n      for (let path in props) {\n        if (setReadOnly || !this[TYPES.READ_ONLY] || !this[TYPES.READ_ONLY][path]) {\n          //TODO(kschaaf): explicitly disallow paths in setProperty?\n          // wildcard observers currently only pass the first changed path\n          // in the `info` object, and you could do some odd things batching\n          // paths, e.g. {'foo.bar': {...}, 'foo': null}\n          this._setPendingPropertyOrPath(path, props[path], true);\n        }\n      }\n      this._invalidateProperties();\n    }\n\n    /**\n     * Overrides `PropertyAccessors` so that property accessor\n     * side effects are not enabled until after client dom is fully ready.\n     * Also calls `_flushClients` callback to ensure client dom is enabled\n     * that was not enabled as a result of flushing properties.\n     *\n     * @override\n     */\n    ready() {\n      // It is important that `super.ready()` is not called here as it\n      // immediately turns on accessors. Instead, we wait until `readyClients`\n      // to enable accessors to provide a guarantee that clients are ready\n      // before processing any accessors side effects.\n      this._flushProperties();\n      // If no data was pending, `_flushProperties` will not `flushClients`\n      // so ensure this is done.\n      if (!this.__dataClientsReady) {\n        this._flushClients();\n      }\n      // Before ready, client notifications do not trigger _flushProperties.\n      // Therefore a flush is necessary here if data has been set.\n      if (this.__dataPending) {\n        this._flushProperties();\n      }\n    }\n\n    /**\n     * Implements `PropertyAccessors`'s properties changed callback.\n     *\n     * Runs each class of effects for the batch of changed properties in\n     * a specific order (compute, propagate, reflect, observe, notify).\n     *\n     * @override\n     */\n    _propertiesChanged(currentProps, changedProps, oldProps) {\n      // ----------------------------\n      // let c = Object.getOwnPropertyNames(changedProps || {});\n      // window.debug && console.group(this.localName + '#' + this.id + ': ' + c);\n      // if (window.debug) { debugger; }\n      // ----------------------------\n      let hasPaths = this.__dataHasPaths;\n      this.__dataHasPaths = false;\n      // Compute properties\n      runComputedEffects(this, changedProps, oldProps, hasPaths);\n      // Clear notify properties prior to possible reentry (propagate, observe),\n      // but after computing effects have a chance to add to them\n      let notifyProps = this.__dataToNotify;\n      this.__dataToNotify = null;\n      // Propagate properties to clients\n      this._propagatePropertyChanges(changedProps, oldProps, hasPaths);\n      // Flush clients\n      this._flushClients();\n      // Reflect properties\n      runEffects(this, this[TYPES.REFLECT], changedProps, oldProps, hasPaths);\n      // Observe properties\n      runEffects(this, this[TYPES.OBSERVE], changedProps, oldProps, hasPaths);\n      // Notify properties to host\n      if (notifyProps) {\n        runNotifyEffects(this, notifyProps, changedProps, oldProps, hasPaths);\n      }\n      // Clear temporary cache at end of turn\n      if (this.__dataCounter == 1) {\n        this.__dataTemp = {};\n      }\n      // ----------------------------\n      // window.debug && console.groupEnd(this.localName + '#' + this.id + ': ' + c);\n      // ----------------------------\n    }\n\n    /**\n     * Called to propagate any property changes to stamped template nodes\n     * managed by this element.\n     *\n     * @param {Object} changedProps Bag of changed properties\n     * @param {Object} oldProps Bag of previous values for changed properties\n     * @param {boolean} hasPaths True with `props` contains one or more paths\n     * @protected\n     */\n    _propagatePropertyChanges(changedProps, oldProps, hasPaths) {\n      if (this[TYPES.PROPAGATE]) {\n        runEffects(this, this[TYPES.PROPAGATE], changedProps, oldProps, hasPaths);\n      }\n      let templateInfo = this.__templateInfo;\n      while (templateInfo) {\n        runEffects(this, templateInfo.propertyEffects, changedProps, oldProps,\n          hasPaths, templateInfo.nodeList);\n        templateInfo = templateInfo.nextTemplateInfo;\n      }\n    }\n\n    /**\n     * Aliases one data path as another, such that path notifications from one\n     * are routed to the other.\n     *\n     * @param {string | !Array<string|number>} to Target path to link.\n     * @param {string | !Array<string|number>} from Source path to link.\n     * @public\n     */\n    linkPaths(to, from) {\n      to = normalize(to);\n      from = normalize(from);\n      this.__dataLinkedPaths = this.__dataLinkedPaths || {};\n      this.__dataLinkedPaths[to] = from;\n    }\n\n    /**\n     * Removes a data path alias previously established with `_linkPaths`.\n     *\n     * Note, the path to unlink should be the target (`to`) used when\n     * linking the paths.\n     *\n     * @param {string | !Array<string|number>} path Target path to unlink.\n     * @public\n     */\n    unlinkPaths(path) {\n      path = normalize(path);\n      if (this.__dataLinkedPaths) {\n        delete this.__dataLinkedPaths[path];\n      }\n    }\n\n    /**\n     * Notify that an array has changed.\n     *\n     * Example:\n     *\n     *     this.items = [ {name: 'Jim'}, {name: 'Todd'}, {name: 'Bill'} ];\n     *     ...\n     *     this.items.splice(1, 1, {name: 'Sam'});\n     *     this.items.push({name: 'Bob'});\n     *     this.notifySplices('items', [\n     *       { index: 1, removed: [{name: 'Todd'}], addedCount: 1, obect: this.items, type: 'splice' },\n     *       { index: 3, removed: [], addedCount: 1, object: this.items, type: 'splice'}\n     *     ]);\n     *\n     * @param {string} path Path that should be notified.\n     * @param {Array} splices Array of splice records indicating ordered\n     *   changes that occurred to the array. Each record should have the\n     *   following fields:\n     *    * index: index at which the change occurred\n     *    * removed: array of items that were removed from this index\n     *    * addedCount: number of new items added at this index\n     *    * object: a reference to the array in question\n     *    * type: the string literal 'splice'\n     *\n     *   Note that splice records _must_ be normalized such that they are\n     *   reported in index order (raw results from `Object.observe` are not\n     *   ordered and must be normalized/merged before notifying).\n     * @public\n    */\n    notifySplices(path, splices) {\n      let info = {path: ''};\n      let array = /** @type {Array} */(get$0(this, path, info));\n      notifySplices(this, array, info.path, splices);\n    }\n\n    /**\n     * Convenience method for reading a value from a path.\n     *\n     * Note, if any part in the path is undefined, this method returns\n     * `undefined` (this method does not throw when dereferencing undefined\n     * paths).\n     *\n     * @param {(string|!Array<(string|number)>)} path Path to the value\n     *   to read.  The path may be specified as a string (e.g. `foo.bar.baz`)\n     *   or an array of path parts (e.g. `['foo.bar', 'baz']`).  Note that\n     *   bracketed expressions are not supported; string-based path parts\n     *   *must* be separated by dots.  Note that when dereferencing array\n     *   indices, the index may be used as a dotted part directly\n     *   (e.g. `users.12.name` or `['users', 12, 'name']`).\n     * @param {Object=} root Root object from which the path is evaluated.\n     * @return {*} Value at the path, or `undefined` if any part of the path\n     *   is undefined.\n     * @public\n     */\n    get(path, root) {\n      return get$0(root || this, path);\n    }\n\n    /**\n     * Convenience method for setting a value to a path and notifying any\n     * elements bound to the same path.\n     *\n     * Note, if any part in the path except for the last is undefined,\n     * this method does nothing (this method does not throw when\n     * dereferencing undefined paths).\n     *\n     * @param {(string|!Array<(string|number)>)} path Path to the value\n     *   to write.  The path may be specified as a string (e.g. `'foo.bar.baz'`)\n     *   or an array of path parts (e.g. `['foo.bar', 'baz']`).  Note that\n     *   bracketed expressions are not supported; string-based path parts\n     *   *must* be separated by dots.  Note that when dereferencing array\n     *   indices, the index may be used as a dotted part directly\n     *   (e.g. `'users.12.name'` or `['users', 12, 'name']`).\n     * @param {*} value Value to set at the specified path.\n     * @param {Object=} root Root object from which the path is evaluated.\n     *   When specified, no notification will occur.\n     * @public\n    */\n    set(path, value, root) {\n      if (root) {\n        set$0(root, path, value);\n      } else {\n        if (!this[TYPES.READ_ONLY] || !this[TYPES.READ_ONLY][/** @type {string} */(path)]) {\n          if (this._setPendingPropertyOrPath(path, value, true)) {\n            this._invalidateProperties();\n          }\n        }\n      }\n    }\n\n    /**\n     * Adds items onto the end of the array at the path specified.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.push`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @param {string | !Array<string|number>} path Path to array.\n     * @param {...*} items Items to push onto array\n     * @return {number} New length of the array.\n     * @public\n     */\n    push(path, ...items) {\n      let info = {path: ''};\n      let array = /** @type {Array}*/(get$0(this, path, info));\n      let len = array.length;\n      let ret = array.push(...items);\n      if (items.length) {\n        notifySplice(this, array, info.path, len, items.length, []);\n      }\n      return ret;\n    }\n\n    /**\n     * Removes an item from the end of array at the path specified.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.pop`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @param {string | !Array<string|number>} path Path to array.\n     * @return {*} Item that was removed.\n     * @public\n     */\n    pop(path) {\n      let info = {path: ''};\n      let array = /** @type {Array} */(get$0(this, path, info));\n      let hadLength = Boolean(array.length);\n      let ret = array.pop();\n      if (hadLength) {\n        notifySplice(this, array, info.path, array.length, 0, [ret]);\n      }\n      return ret;\n    }\n\n    /**\n     * Starting from the start index specified, removes 0 or more items\n     * from the array and inserts 0 or more new items in their place.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.splice`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @param {string | !Array<string|number>} path Path to array.\n     * @param {number} start Index from which to start removing/inserting.\n     * @param {number} deleteCount Number of items to remove.\n     * @param {...*} items Items to insert into array.\n     * @return {Array} Array of removed items.\n     * @public\n     */\n    splice(path, start, deleteCount, ...items) {\n      let info = {path : ''};\n      let array = /** @type {Array} */(get$0(this, path, info));\n      // Normalize fancy native splice handling of crazy start values\n      if (start < 0) {\n        start = array.length - Math.floor(-start);\n      } else {\n        start = Math.floor(start);\n      }\n      if (!start) {\n        start = 0;\n      }\n      let ret = array.splice(start, deleteCount, ...items);\n      if (items.length || ret.length) {\n        notifySplice(this, array, info.path, start, items.length, ret);\n      }\n      return ret;\n    }\n\n    /**\n     * Removes an item from the beginning of array at the path specified.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.pop`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @param {string | !Array<string|number>} path Path to array.\n     * @return {*} Item that was removed.\n     * @public\n     */\n    shift(path) {\n      let info = {path: ''};\n      let array = /** @type {Array} */(get$0(this, path, info));\n      let hadLength = Boolean(array.length);\n      let ret = array.shift();\n      if (hadLength) {\n        notifySplice(this, array, info.path, 0, 0, [ret]);\n      }\n      return ret;\n    }\n\n    /**\n     * Adds items onto the beginning of the array at the path specified.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.push`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @param {string | !Array<string|number>} path Path to array.\n     * @param {...*} items Items to insert info array\n     * @return {number} New length of the array.\n     * @public\n     */\n    unshift(path, ...items) {\n      let info = {path: ''};\n      let array = /** @type {Array} */(get$0(this, path, info));\n      let ret = array.unshift(...items);\n      if (items.length) {\n        notifySplice(this, array, info.path, 0, items.length, []);\n      }\n      return ret;\n    }\n\n    /**\n     * Notify that a path has changed.\n     *\n     * Example:\n     *\n     *     this.item.user.name = 'Bob';\n     *     this.notifyPath('item.user.name');\n     *\n     * @param {string} path Path that should be notified.\n     * @param {*=} value Value at the path (optional).\n     * @public\n    */\n    notifyPath(path, value) {\n      /** @type {string} */\n      let propPath;\n      if (arguments.length == 1) {\n        // Get value if not supplied\n        let info = {path: ''};\n        value = get$0(this, path, info);\n        propPath = info.path;\n      } else if (Array.isArray(path)) {\n        // Normalize path if needed\n        propPath = normalize(path);\n      } else {\n        propPath = /** @type{string} */(path);\n      }\n      if (this._setPendingPropertyOrPath(propPath, value, true, true)) {\n        this._invalidateProperties();\n      }\n    }\n\n    /**\n     * Equivalent to static `createReadOnlyProperty` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @param {string} property Property name\n     * @param {boolean=} protectedSetter Creates a custom protected setter\n     *   when `true`.\n     * @protected\n     */\n    _createReadOnlyProperty(property, protectedSetter) {\n      this._addPropertyEffect(property, TYPES.READ_ONLY);\n      if (protectedSetter) {\n        this['_set' + upper(property)] = /** @this {PropertyEffects} */function(value) {\n          this._setProperty(property, value);\n        };\n      }\n    }\n\n    /**\n     * Equivalent to static `createPropertyObserver` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @param {string} property Property name\n     * @param {string} methodName Name of observer method to call\n     * @param {boolean=} dynamicFn Whether the method name should be included as\n     *   a dependency to the effect.\n     * @protected\n     */\n    _createPropertyObserver(property, methodName, dynamicFn) {\n      let info = { property, methodName, dynamicFn: Boolean(dynamicFn) };\n      this._addPropertyEffect(property, TYPES.OBSERVE, {\n        fn: runObserverEffect, info, trigger: {name: property}\n      });\n      if (dynamicFn) {\n        this._addPropertyEffect(methodName, TYPES.OBSERVE, {\n          fn: runObserverEffect, info, trigger: {name: methodName}\n        });\n      }\n    }\n\n    /**\n     * Equivalent to static `createMethodObserver` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @param {string} expression Method expression\n     * @param {boolean|Object=} dynamicFn Boolean or object map indicating\n     *   whether method names should be included as a dependency to the effect.\n     * @protected\n     */\n    _createMethodObserver(expression, dynamicFn) {\n      let sig = parseMethod(expression);\n      if (!sig) {\n        throw new Error(\"Malformed observer expression '\" + expression + \"'\");\n      }\n      createMethodEffect(this, sig, TYPES.OBSERVE, runMethodEffect, null, dynamicFn);\n    }\n\n    /**\n     * Equivalent to static `createNotifyingProperty` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @param {string} property Property name\n     * @protected\n     */\n    _createNotifyingProperty(property) {\n      this._addPropertyEffect(property, TYPES.NOTIFY, {\n        fn: runNotifyEffect,\n        info: {\n          eventName: CaseMap.camelToDashCase(property) + '-changed',\n          property: property\n        }\n      });\n    }\n\n    /**\n     * Equivalent to static `createReflectedProperty` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @param {string} property Property name\n     * @protected\n     */\n    _createReflectedProperty(property) {\n      let attr = CaseMap.camelToDashCase(property);\n      if (attr[0] === '-') {\n        console.warn('Property ' + property + ' cannot be reflected to attribute ' +\n          attr + ' because \"-\" is not a valid starting attribute name. Use a lowercase first letter for the property thisead.');\n      } else {\n        this._addPropertyEffect(property, TYPES.REFLECT, {\n          fn: runReflectEffect,\n          info: {\n            attrName: attr\n          }\n        });\n      }\n    }\n\n    /**\n     * Equivalent to static `createComputedProperty` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @param {string} property Name of computed property to set\n     * @param {string} expression Method expression\n     * @param {boolean|Object=} dynamicFn Boolean or object map indicating\n     *   whether method names should be included as a dependency to the effect.\n     * @protected\n     */\n    _createComputedProperty(property, expression, dynamicFn) {\n      let sig = parseMethod(expression);\n      if (!sig) {\n        throw new Error(\"Malformed computed expression '\" + expression + \"'\");\n      }\n      createMethodEffect(this, sig, TYPES.COMPUTE, runComputedEffect, property, dynamicFn);\n    }\n\n    // -- static class methods ------------\n\n    /**\n     * Ensures an accessor exists for the specified property, and adds\n     * to a list of \"property effects\" that will run when the accessor for\n     * the specified property is set.  Effects are grouped by \"type\", which\n     * roughly corresponds to a phase in effect processing.  The effect\n     * metadata should be in the following form:\n     *\n     *     {\n     *       fn: effectFunction, // Reference to function to call to perform effect\n     *       info: { ... }       // Effect metadata passed to function\n     *       trigger: {          // Optional triggering metadata; if not provided\n     *         name: string      // the property is treated as a wildcard\n     *         structured: boolean\n     *         wildcard: boolean\n     *       }\n     *     }\n     *\n     * Effects are called from `_propertiesChanged` in the following order by\n     * type:\n     *\n     * 1. COMPUTE\n     * 2. PROPAGATE\n     * 3. REFLECT\n     * 4. OBSERVE\n     * 5. NOTIFY\n     *\n     * Effect functions are called with the following signature:\n     *\n     *     effectFunction(inst, path, props, oldProps, info, hasPaths)\n     *\n     * @param {string} property Property that should trigger the effect\n     * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES\n     * @param {Object=} effect Effect metadata object\n     * @protected\n     */\n    static addPropertyEffect(property, type, effect) {\n      this.prototype._addPropertyEffect(property, type, effect);\n    }\n\n    /**\n     * Creates a single-property observer for the given property.\n     *\n     * @param {string} property Property name\n     * @param {string} methodName Name of observer method to call\n     * @param {boolean=} dynamicFn Whether the method name should be included as\n     *   a dependency to the effect.\n     * @protected\n     */\n    static createPropertyObserver(property, methodName, dynamicFn) {\n      this.prototype._createPropertyObserver(property, methodName, dynamicFn);\n    }\n\n    /**\n     * Creates a multi-property \"method observer\" based on the provided\n     * expression, which should be a string in the form of a normal Javascript\n     * function signature: `'methodName(arg1, [..., argn])'`.  Each argument\n     * should correspond to a property or path in the context of this\n     * prototype (or instance), or may be a literal string or number.\n     *\n     * @param {string} expression Method expression\n     * @param {boolean|Object=} dynamicFn Boolean or object map indicating\n     *   whether method names should be included as a dependency to the effect.\n     * @protected\n     */\n    static createMethodObserver(expression, dynamicFn) {\n      this.prototype._createMethodObserver(expression, dynamicFn);\n    }\n\n    /**\n     * Causes the setter for the given property to dispatch `<property>-changed`\n     * events to notify of changes to the property.\n     *\n     * @param {string} property Property name\n     * @protected\n     */\n    static createNotifyingProperty(property) {\n      this.prototype._createNotifyingProperty(property);\n    }\n\n    /**\n     * Creates a read-only accessor for the given property.\n     *\n     * To set the property, use the protected `_setProperty` API.\n     * To create a custom protected setter (e.g. `_setMyProp()` for\n     * property `myProp`), pass `true` for `protectedSetter`.\n     *\n     * Note, if the property will have other property effects, this method\n     * should be called first, before adding other effects.\n     *\n     * @param {string} property Property name\n     * @param {boolean=} protectedSetter Creates a custom protected setter\n     *   when `true`.\n     * @protected\n     */\n    static createReadOnlyProperty(property, protectedSetter) {\n      this.prototype._createReadOnlyProperty(property, protectedSetter);\n    }\n\n    /**\n     * Causes the setter for the given property to reflect the property value\n     * to a (dash-cased) attribute of the same name.\n     *\n     * @param {string} property Property name\n     * @protected\n     */\n    static createReflectedProperty(property) {\n      this.prototype._createReflectedProperty(property);\n    }\n\n    /**\n     * Creates a computed property whose value is set to the result of the\n     * method described by the given `expression` each time one or more\n     * arguments to the method changes.  The expression should be a string\n     * in the form of a normal Javascript function signature:\n     * `'methodName(arg1, [..., argn])'`\n     *\n     * @param {string} property Name of computed property to set\n     * @param {string} expression Method expression\n     * @param {boolean|Object=} dynamicFn Boolean or object map indicating whether\n     *   method names should be included as a dependency to the effect.\n     * @protected\n     */\n    static createComputedProperty(property, expression, dynamicFn) {\n      this.prototype._createComputedProperty(property, expression, dynamicFn);\n    }\n\n    /**\n     * Parses the provided template to ensure binding effects are created\n     * for them, and then ensures property accessors are created for any\n     * dependent properties in the template.  Binding effects for bound\n     * templates are stored in a linked list on the instance so that\n     * templates can be efficiently stamped and unstamped.\n     *\n     * @param {HTMLTemplateElement} template Template containing binding\n     *   bindings\n     * @return {Object} Template metadata object\n     * @protected\n     */\n    static bindTemplate(template) {\n      return this.prototype._bindTemplate(template);\n    }\n\n    // -- binding ----------------------------------------------\n\n    /**\n     * Equivalent to static `bindTemplate` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * This method may be called on the prototype (for prototypical template\n     * binding, to avoid creating accessors every instance) once per prototype,\n     * and will be called with `runtimeBinding: true` by `_stampTemplate` to\n     * create and link an instance of the template metadata associated with a\n     * particular stamping.\n     *\n     * @param {HTMLTemplateElement} template Template containing binding\n     *   bindings\n     * @param {boolean=} instanceBinding When false (default), performs\n     *   \"prototypical\" binding of the template and overwrites any previously\n     *   bound template for the class. When true (as passed from\n     *   `_stampTemplate`), the template info is instanced and linked into\n     *   the list of bound templates.\n     * @return {!TemplateInfo} Template metadata object; for `runtimeBinding`,\n     *   this is an instance of the prototypical template info\n     * @protected\n     */\n    _bindTemplate(template, instanceBinding) {\n      let templateInfo = this.constructor._parseTemplate(template);\n      let wasPreBound = this.__templateInfo == templateInfo;\n      // Optimization: since this is called twice for proto-bound templates,\n      // don't attempt to recreate accessors if this template was pre-bound\n      if (!wasPreBound) {\n        for (let prop in templateInfo.propertyEffects) {\n          this._createPropertyAccessor(prop);\n        }\n      }\n      if (instanceBinding) {\n        // For instance-time binding, create instance of template metadata\n        // and link into list of templates if necessary\n        templateInfo = /** @type {!TemplateInfo} */(Object.create(templateInfo));\n        templateInfo.wasPreBound = wasPreBound;\n        if (!wasPreBound && this.__templateInfo) {\n          let last = this.__templateInfoLast || this.__templateInfo;\n          this.__templateInfoLast = last.nextTemplateInfo = templateInfo;\n          templateInfo.previousTemplateInfo = last;\n          return templateInfo;\n        }\n      }\n      return this.__templateInfo = templateInfo;\n    }\n\n    /**\n     * Adds a property effect to the given template metadata, which is run\n     * at the \"propagate\" stage of `_propertiesChanged` when the template\n     * has been bound to the element via `_bindTemplate`.\n     *\n     * The `effect` object should match the format in `_addPropertyEffect`.\n     *\n     * @param {Object} templateInfo Template metadata to add effect to\n     * @param {string} prop Property that should trigger the effect\n     * @param {Object=} effect Effect metadata object\n     * @protected\n     */\n    static _addTemplatePropertyEffect(templateInfo, prop, effect) {\n      let hostProps = templateInfo.hostProps = templateInfo.hostProps || {};\n      hostProps[prop] = true;\n      let effects = templateInfo.propertyEffects = templateInfo.propertyEffects || {};\n      let propEffects = effects[prop] = effects[prop] || [];\n      propEffects.push(effect);\n    }\n\n    /**\n     * Stamps the provided template and performs instance-time setup for\n     * Polymer template features, including data bindings, declarative event\n     * listeners, and the `this.$` map of `id`'s to nodes.  A document fragment\n     * is returned containing the stamped DOM, ready for insertion into the\n     * DOM.\n     *\n     * This method may be called more than once; however note that due to\n     * `shadycss` polyfill limitations, only styles from templates prepared\n     * using `ShadyCSS.prepareTemplate` will be correctly polyfilled (scoped\n     * to the shadow root and support CSS custom properties), and note that\n     * `ShadyCSS.prepareTemplate` may only be called once per element. As such,\n     * any styles required by in runtime-stamped templates must be included\n     * in the main element template.\n     *\n     * @param {!HTMLTemplateElement} template Template to stamp\n     * @return {!StampedTemplate} Cloned template content\n     * @override\n     * @protected\n     */\n    _stampTemplate(template) {\n      // Ensures that created dom is `_enqueueClient`'d to this element so\n      // that it can be flushed on next call to `_flushProperties`\n      hostStack.beginHosting(this);\n      let dom = super._stampTemplate(template);\n      hostStack.endHosting(this);\n      let templateInfo = /** @type {!TemplateInfo} */(this._bindTemplate(template, true));\n      // Add template-instance-specific data to instanced templateInfo\n      templateInfo.nodeList = dom.nodeList;\n      // Capture child nodes to allow unstamping of non-prototypical templates\n      if (!templateInfo.wasPreBound) {\n        let nodes = templateInfo.childNodes = [];\n        for (let n=dom.firstChild; n; n=n.nextSibling) {\n          nodes.push(n);\n        }\n      }\n      dom.templateInfo = templateInfo;\n      // Setup compound storage, 2-way listeners, and dataHost for bindings\n      setupBindings(this, templateInfo);\n      // Flush properties into template nodes if already booted\n      if (this.__dataReady) {\n        runEffects(this, templateInfo.propertyEffects, this.__data, null,\n          false, templateInfo.nodeList);\n      }\n      return dom;\n    }\n\n    /**\n     * Removes and unbinds the nodes previously contained in the provided\n     * DocumentFragment returned from `_stampTemplate`.\n     *\n     * @param {!StampedTemplate} dom DocumentFragment previously returned\n     *   from `_stampTemplate` associated with the nodes to be removed\n     * @protected\n     */\n    _removeBoundDom(dom) {\n      // Unlink template info\n      let templateInfo = dom.templateInfo;\n      if (templateInfo.previousTemplateInfo) {\n        templateInfo.previousTemplateInfo.nextTemplateInfo =\n          templateInfo.nextTemplateInfo;\n      }\n      if (templateInfo.nextTemplateInfo) {\n        templateInfo.nextTemplateInfo.previousTemplateInfo =\n          templateInfo.previousTemplateInfo;\n      }\n      if (this.__templateInfoLast == templateInfo) {\n        this.__templateInfoLast = templateInfo.previousTemplateInfo;\n      }\n      templateInfo.previousTemplateInfo = templateInfo.nextTemplateInfo = null;\n      // Remove stamped nodes\n      let nodes = templateInfo.childNodes;\n      for (let i=0; i<nodes.length; i++) {\n        let node = nodes[i];\n        node.parentNode.removeChild(node);\n      }\n    }\n\n    /**\n     * Overrides default `TemplateStamp` implementation to add support for\n     * parsing bindings from `TextNode`'s' `textContent`.  A `bindings`\n     * array is added to `nodeInfo` and populated with binding metadata\n     * with information capturing the binding target, and a `parts` array\n     * with one or more metadata objects capturing the source(s) of the\n     * binding.\n     *\n     * @override\n     * @param {Node} node Node to parse\n     * @param {TemplateInfo} templateInfo Template metadata for current template\n     * @param {NodeInfo} nodeInfo Node metadata for current template node\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     * @protected\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     */\n    static _parseTemplateNode(node, templateInfo, nodeInfo) {\n      let noted = super._parseTemplateNode(node, templateInfo, nodeInfo);\n      if (node.nodeType === Node.TEXT_NODE) {\n        let parts = this._parseBindings(node.textContent, templateInfo);\n        if (parts) {\n          // Initialize the textContent with any literal parts\n          // NOTE: default to a space here so the textNode remains; some browsers\n          // (IE) evacipate an empty textNode following cloneNode/importNode.\n          node.textContent = literalFromParts(parts) || ' ';\n          addBinding(this, templateInfo, nodeInfo, 'text', 'textContent', parts);\n          noted = true;\n        }\n      }\n      return noted;\n    }\n\n    /**\n     * Overrides default `TemplateStamp` implementation to add support for\n     * parsing bindings from attributes.  A `bindings`\n     * array is added to `nodeInfo` and populated with binding metadata\n     * with information capturing the binding target, and a `parts` array\n     * with one or more metadata objects capturing the source(s) of the\n     * binding.\n     *\n     * @override\n     * @param {Element} node Node to parse\n     * @param {TemplateInfo} templateInfo Template metadata for current template\n     * @param {NodeInfo} nodeInfo Node metadata for current template node\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     * @protected\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     */\n    static _parseTemplateNodeAttribute(node, templateInfo, nodeInfo, name, value) {\n      let parts = this._parseBindings(value, templateInfo);\n      if (parts) {\n        // Attribute or property\n        let origName = name;\n        let kind = 'property';\n        if (name[name.length-1] == '$') {\n          name = name.slice(0, -1);\n          kind = 'attribute';\n        }\n        // Initialize attribute bindings with any literal parts\n        let literal = literalFromParts(parts);\n        if (literal && kind == 'attribute') {\n          node.setAttribute(name, literal);\n        }\n        // Clear attribute before removing, since IE won't allow removing\n        // `value` attribute if it previously had a value (can't\n        // unconditionally set '' before removing since attributes with `$`\n        // can't be set using setAttribute)\n        if (node.localName === 'input' && origName === 'value') {\n          node.setAttribute(origName, '');\n        }\n        // Remove annotation\n        node.removeAttribute(origName);\n        // Case hackery: attributes are lower-case, but bind targets\n        // (properties) are case sensitive. Gambit is to map dash-case to\n        // camel-case: `foo-bar` becomes `fooBar`.\n        // Attribute bindings are excepted.\n        if (kind === 'property') {\n          name = dashToCamelCase(name);\n        }\n        addBinding(this, templateInfo, nodeInfo, kind, name, parts, literal);\n        return true;\n      } else {\n        return super._parseTemplateNodeAttribute(node, templateInfo, nodeInfo, name, value);\n      }\n    }\n\n    /**\n     * Overrides default `TemplateStamp` implementation to add support for\n     * binding the properties that a nested template depends on to the template\n     * as `_host_<property>`.\n     *\n     * @override\n     * @param {Node} node Node to parse\n     * @param {TemplateInfo} templateInfo Template metadata for current template\n     * @param {NodeInfo} nodeInfo Node metadata for current template node\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     * @protected\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     */\n    static _parseTemplateNestedTemplate(node, templateInfo, nodeInfo) {\n      let noted = super._parseTemplateNestedTemplate(node, templateInfo, nodeInfo);\n      // Merge host props into outer template and add bindings\n      let hostProps = nodeInfo.templateInfo.hostProps;\n      let mode = '{';\n      for (let source in hostProps) {\n        let parts = [{ mode, source, dependencies: [source] }];\n        addBinding(this, templateInfo, nodeInfo, 'property', '_host_' + source, parts);\n      }\n      return noted;\n    }\n\n    /**\n     * Called to parse text in a template (either attribute values or\n     * textContent) into binding metadata.\n     *\n     * Any overrides of this method should return an array of binding part\n     * metadata  representing one or more bindings found in the provided text\n     * and any \"literal\" text in between.  Any non-literal parts will be passed\n     * to `_evaluateBinding` when any dependencies change.  The only required\n     * fields of each \"part\" in the returned array are as follows:\n     *\n     * - `dependencies` - Array containing trigger metadata for each property\n     *   that should trigger the binding to update\n     * - `literal` - String containing text if the part represents a literal;\n     *   in this case no `dependencies` are needed\n     *\n     * Additional metadata for use by `_evaluateBinding` may be provided in\n     * each part object as needed.\n     *\n     * The default implementation handles the following types of bindings\n     * (one or more may be intermixed with literal strings):\n     * - Property binding: `[[prop]]`\n     * - Path binding: `[[object.prop]]`\n     * - Negated property or path bindings: `[[!prop]]` or `[[!object.prop]]`\n     * - Two-way property or path bindings (supports negation):\n     *   `{{prop}}`, `{{object.prop}}`, `{{!prop}}` or `{{!object.prop}}`\n     * - Inline computed method (supports negation):\n     *   `[[compute(a, 'literal', b)]]`, `[[!compute(a, 'literal', b)]]`\n     *\n     * @param {string} text Text to parse from attribute or textContent\n     * @param {Object} templateInfo Current template metadata\n     * @return {Array<!BindingPart>} Array of binding part metadata\n     * @protected\n     */\n    static _parseBindings(text, templateInfo) {\n      let parts = [];\n      let lastIndex = 0;\n      let m;\n      // Example: \"literal1{{prop}}literal2[[!compute(foo,bar)]]final\"\n      // Regex matches:\n      //        Iteration 1:  Iteration 2:\n      // m[1]: '{{'          '[['\n      // m[2]: ''            '!'\n      // m[3]: 'prop'        'compute(foo,bar)'\n      while ((m = bindingRegex.exec(text)) !== null) {\n        // Add literal part\n        if (m.index > lastIndex) {\n          parts.push({literal: text.slice(lastIndex, m.index)});\n        }\n        // Add binding part\n        let mode = m[1][0];\n        let negate = Boolean(m[2]);\n        let source = m[3].trim();\n        let customEvent = false, notifyEvent = '', colon = -1;\n        if (mode == '{' && (colon = source.indexOf('::')) > 0) {\n          notifyEvent = source.substring(colon + 2);\n          source = source.substring(0, colon);\n          customEvent = true;\n        }\n        let signature = parseMethod(source);\n        let dependencies = [];\n        if (signature) {\n          // Inline computed function\n          let {args, methodName} = signature;\n          for (let i=0; i<args.length; i++) {\n            let arg = args[i];\n            if (!arg.literal) {\n              dependencies.push(arg);\n            }\n          }\n          let dynamicFns = templateInfo.dynamicFns;\n          if (dynamicFns && dynamicFns[methodName] || signature.static) {\n            dependencies.push(methodName);\n            signature.dynamicFn = true;\n          }\n        } else {\n          // Property or path\n          dependencies.push(source);\n        }\n        parts.push({\n          source, mode, negate, customEvent, signature, dependencies,\n          event: notifyEvent\n        });\n        lastIndex = bindingRegex.lastIndex;\n      }\n      // Add a final literal part\n      if (lastIndex && lastIndex < text.length) {\n        let literal = text.substring(lastIndex);\n        if (literal) {\n          parts.push({\n            literal: literal\n          });\n        }\n      }\n      if (parts.length) {\n        return parts;\n      } else {\n        return null;\n      }\n    }\n\n    /**\n     * Called to evaluate a previously parsed binding part based on a set of\n     * one or more changed dependencies.\n     *\n     * @param {this} inst Element that should be used as scope for\n     *   binding dependencies\n     * @param {BindingPart} part Binding part metadata\n     * @param {string} path Property/path that triggered this effect\n     * @param {Object} props Bag of current property changes\n     * @param {Object} oldProps Bag of previous values for changed properties\n     * @param {boolean} hasPaths True with `props` contains one or more paths\n     * @return {*} Value the binding part evaluated to\n     * @protected\n     */\n    static _evaluateBinding(inst, part, path, props, oldProps, hasPaths) {\n      let value;\n      if (part.signature) {\n        value = runMethodEffect(inst, path, props, oldProps, part.signature);\n      } else if (path != part.source) {\n        value = get$0(inst, part.source);\n      } else {\n        if (hasPaths && isPath$0(path)) {\n          value = get$0(inst, path);\n        } else {\n          value = inst.__data[path];\n        }\n      }\n      if (part.negate) {\n        value = !value;\n      }\n      return value;\n    }\n\n  }\n\n  // make a typing for closure :P\n  PropertyEffectsType = PropertyEffects;\n\n  return PropertyEffects;\n});\n\n/**\n * Helper api for enqueing client dom created by a host element.\n *\n * By default elements are flushed via `_flushProperties` when\n * `connectedCallback` is called. Elements attach their client dom to\n * themselves at `ready` time which results from this first flush.\n * This provides an ordering guarantee that the client dom an element\n * creates is flushed before the element itself (i.e. client `ready`\n * fires before host `ready`).\n *\n * However, if `_flushProperties` is called *before* an element is connected,\n * as for example `Templatize` does, this ordering guarantee cannot be\n * satisfied because no elements are connected. (Note: Bound elements that\n * receive data do become enqueued clients and are properly ordered but\n * unbound elements are not.)\n *\n * To maintain the desired \"client before host\" ordering guarantee for this\n * case we rely on the \"host stack. Client nodes registers themselves with\n * the creating host element when created. This ensures that all client dom\n * is readied in the proper order, maintaining the desired guarantee.\n *\n * @private\n */\nlet hostStack = {\n\n  stack: [],\n\n  /**\n   * @param {*} inst Instance to add to hostStack\n   * @this {hostStack}\n   */\n  registerHost(inst) {\n    if (this.stack.length) {\n      let host = this.stack[this.stack.length-1];\n      host._enqueueClient(inst);\n    }\n  },\n\n  /**\n   * @param {*} inst Instance to begin hosting\n   * @this {hostStack}\n   */\n  beginHosting(inst) {\n    this.stack.push(inst);\n  },\n\n  /**\n   * @param {*} inst Instance to end hosting\n   * @this {hostStack}\n   */\n  endHosting(inst) {\n    let stackLen = this.stack.length;\n    if (stackLen && this.stack[stackLen-1] == inst) {\n      this.stack.pop();\n    }\n  }\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@polymer/polymer/lib/mixins/property-effects.js","import 'core/components/lazy-loader';\nimport '@littleq/state-manager';\nimport '@littleq/littleq-router';\n\nconst script = document.createElement('script');\nscript.src = 'https://use.typekit.net/fed2dzd.js';\nscript.onload = () => {\n  try {\n    window.Typekit.load({ async: true });\n  } catch (e) {\n    console.log(e);\n  }\n};\ndocument.body.appendChild(script);\n\n\n\n// WEBPACK FOOTER //\n// ./app/shell/index.js","import fragments from '../fragments';\nimport { customElements, HTMLElement } from 'global/window';\n\nclass LazyLoader extends HTMLElement {\n  static get is () { return 'lazy-loader'; }\n\n  import (name) {\n    return fragments[name] && typeof fragments[name] === 'function'\n      ? fragments[name]()\n      : Promise.reject(new Error('No fragment found'));\n  }\n}\n\n!customElements.get(LazyLoader.is)\n  ? customElements.define(LazyLoader.is, LazyLoader)\n  : console.warn(`${LazyLoader.is} is already defined`);\n\n\n\n// WEBPACK FOOTER //\n// ./app/system/core/components/lazy-loader.js","\nexport default {\n  'page-home': () => { return import(/* webpackChunkName: \"page-home\" */ 'page-home') }, \n'page-speakers': () => { return import(/* webpackChunkName: \"page-speakers\" */ 'page-speakers') }, \n'page-schedule': () => { return import(/* webpackChunkName: \"page-schedule\" */ 'page-schedule') }, \n'page-sessions': () => { return import(/* webpackChunkName: \"page-sessions\" */ 'page-sessions') }, \n'page-sponsor': () => { return import(/* webpackChunkName: \"page-sponsor\" */ 'page-sponsor') }, \n'page-tickets': () => { return import(/* webpackChunkName: \"page-tickets\" */ 'page-tickets') }, \n'page-about': () => { return import(/* webpackChunkName: \"page-about\" */ 'page-about') }, \n'page-faq': () => { return import(/* webpackChunkName: \"page-faq\" */ 'page-faq') }, \n'page-convince': () => { return import(/* webpackChunkName: \"page-convince\" */ 'page-convince') }, \n'page-not-authorized': () => { return import(/* webpackChunkName: \"page-not-authorized\" */ 'page-not-authorized') }, \n'page-not-found': () => { return import(/* webpackChunkName: \"page-not-found\" */ 'page-not-found') }\n}\n  \n\n\n// WEBPACK FOOTER //\n// ./app/system/core/fragments/index.js","import '../utils/boot.js';\nimport { rootPath as rootPath$0 } from '../utils/settings.js';\nimport { dedupingMixin } from '../utils/mixin.js';\nimport * as caseMap$0 from '../utils/case-map.js';\nimport { camelToDashCase } from '../utils/case-map.js';\nimport { cssFromModuleImports, cssFromTemplate } from '../utils/style-gather.js';\nimport { resolveUrl as resolveUrl$0 } from '../utils/resolve-url.js';\nimport { DomModule } from '../elements/dom-module.js';\nimport { PropertyEffects } from './property-effects.js';\n\nexport const ElementMixin = dedupingMixin(base => {\n\n  /**\n   * @constructor\n   * @extends {base}\n   * @implements {Polymer_PropertyEffects}\n   */\n  const polymerElementBase = PropertyEffects(base);\n\n  let caseMap = caseMap$0;\n\n  /**\n   * Returns the `properties` object specifically on `klass`. Use for:\n   * (1) super chain mixes togther to make `propertiesForClass` which is\n   * then used to make `observedAttributes`.\n   * (2) properties effects and observers are created from it at `finalize` time.\n   *\n   * @param {HTMLElement} klass Element class\n   * @return {Object} Object containing own properties for this class\n   * @private\n   */\n  function ownPropertiesForClass(klass) {\n    if (!klass.hasOwnProperty(\n      JSCompiler_renameProperty('__ownProperties', klass))) {\n      klass.__ownProperties =\n        klass.hasOwnProperty(JSCompiler_renameProperty('properties', klass)) ?\n        /** @type PolymerElementConstructor */ (klass).properties : {};\n    }\n    return klass.__ownProperties;\n  }\n\n  /**\n   * Returns the `observers` array specifically on `klass`. Use for\n   * setting up observers.\n   *\n   * @param {HTMLElement} klass Element class\n   * @return {Array} Array containing own observers for this class\n   * @private\n   */\n  function ownObserversForClass(klass) {\n    if (!klass.hasOwnProperty(\n      JSCompiler_renameProperty('__ownObservers', klass))) {\n      klass.__ownObservers =\n        klass.hasOwnProperty(JSCompiler_renameProperty('observers', klass)) ?\n        /** @type PolymerElementConstructor */ (klass).observers : [];\n    }\n    return klass.__ownObservers;\n  }\n\n  /**\n   * Mixes `props` into `flattenedProps` but upgrades shorthand type\n   * syntax to { type: Type}.\n   *\n   * @param {Object} flattenedProps Bag to collect flattened properties into\n   * @param {Object} props Bag of properties to add to `flattenedProps`\n   * @return {Object} The input `flattenedProps` bag\n   * @private\n   */\n  function flattenProperties(flattenedProps, props) {\n    for (let p in props) {\n      let o = props[p];\n      if (typeof o == 'function') {\n        o = { type: o };\n      }\n      flattenedProps[p] = o;\n    }\n    return flattenedProps;\n  }\n\n  /**\n   * Returns a flattened list of properties mixed together from the chain of all\n   * constructor's `config.properties`. This list is used to create\n   * (1) observedAttributes,\n   * (2) class property default values\n   *\n   * @param {PolymerElementConstructor} klass Element class\n   * @return {PolymerElementProperties} Flattened properties for this class\n   * @suppress {missingProperties} class.prototype is not a property for some reason?\n   * @private\n   */\n  function propertiesForClass(klass) {\n    if (!klass.hasOwnProperty(\n      JSCompiler_renameProperty('__classProperties', klass))) {\n      klass.__classProperties =\n      flattenProperties({}, ownPropertiesForClass(klass));\n      let superCtor = Object.getPrototypeOf(klass.prototype).constructor;\n      if (superCtor.prototype instanceof PolymerElement) {\n        klass.__classProperties = Object.assign(\n          Object.create(propertiesForClass(/** @type PolymerElementConstructor */(superCtor))),\n          klass.__classProperties);\n      }\n    }\n    return klass.__classProperties;\n  }\n\n  /**\n   * Returns a list of properties with default values.\n   * This list is created as an optimization since it is a subset of\n   * the list returned from `propertiesForClass`.\n   * This list is used in `_initializeProperties` to set property defaults.\n   *\n   * @param {PolymerElementConstructor} klass Element class\n   * @return {PolymerElementProperties} Flattened properties for this class\n   *   that have default values\n   * @private\n   */\n  function propertyDefaultsForClass(klass) {\n    if (!klass.hasOwnProperty(\n      JSCompiler_renameProperty('__classPropertyDefaults', klass))) {\n      klass.__classPropertyDefaults = null;\n      let props = propertiesForClass(klass);\n      for (let p in props) {\n        let info = props[p];\n        if ('value' in info) {\n          klass.__classPropertyDefaults = klass.__classPropertyDefaults || {};\n          klass.__classPropertyDefaults[p] = info;\n        }\n      }\n    }\n    return klass.__classPropertyDefaults;\n  }\n\n  /**\n   * Returns true if a `klass` has finalized. Called in `ElementClass.finalize()`\n   * @param {PolymerElementConstructor} klass Element class\n   * @return {boolean} True if all metaprogramming for this class has been\n   *   completed\n   * @private\n   */\n  function hasClassFinalized(klass) {\n    return klass.hasOwnProperty(JSCompiler_renameProperty('__finalized', klass));\n  }\n\n  /**\n   * Called by `ElementClass.finalize()`. Ensures this `klass` and\n   * *all superclasses* are finalized by traversing the prototype chain\n   * and calling `klass.finalize()`.\n   *\n   * @param {PolymerElementConstructor} klass Element class\n   * @private\n   */\n  function finalizeClassAndSuper(klass) {\n    let proto = /** @type PolymerElementConstructor */ (klass).prototype;\n    let superCtor = Object.getPrototypeOf(proto).constructor;\n    if (superCtor.prototype instanceof PolymerElement) {\n      superCtor.finalize();\n    }\n    finalizeClass(klass);\n  }\n\n  /**\n   * Configures a `klass` based on a staic `klass.config` object and\n   * a `template`. This includes creating accessors and effects\n   * for properties in `config` and the `template` as well as preparing the\n   * `template` for stamping.\n   *\n   * @param {PolymerElementConstructor} klass Element class\n   * @private\n   */\n  function finalizeClass(klass) {\n    klass.__finalized = true;\n    let proto = /** @type PolymerElementConstructor */ (klass).prototype;\n    if (klass.hasOwnProperty(\n      JSCompiler_renameProperty('is', klass)) && klass.is) {\n      register(proto);\n    }\n    let props = ownPropertiesForClass(klass);\n    if (props) {\n      finalizeProperties(proto, props);\n    }\n    let observers = ownObserversForClass(klass);\n    if (observers) {\n      finalizeObservers(proto, observers, props);\n    }\n    // note: create \"working\" template that is finalized at instance time\n    let template = /** @type PolymerElementConstructor */ (klass).template;\n    if (template) {\n      if (typeof template === 'string') {\n        let t = document.createElement('template');\n        t.innerHTML = template;\n        template = t;\n      } else {\n        template = template.cloneNode(true);\n      }\n      proto._template = template;\n    }\n  }\n\n  /**\n   * Configures a `proto` based on a `properties` object.\n   * Leverages `PropertyEffects` to create property accessors and effects\n   * supporting, observers, reflecting to attributes, change notification,\n   * computed properties, and read only properties.\n   * @param {PolymerElement} proto Element class prototype to add accessors\n   *    and effects to\n   * @param {Object} properties Flattened bag of property descriptors for\n   *    this class\n   * @private\n   */\n  function finalizeProperties(proto, properties) {\n    for (let p in properties) {\n      createPropertyFromConfig(proto, p, properties[p], properties);\n    }\n  }\n\n  /**\n   * Configures a `proto` based on a `observers` array.\n   * Leverages `PropertyEffects` to create observers.\n   * @param {PolymerElement} proto Element class prototype to add accessors\n   *   and effects to\n   * @param {Object} observers Flattened array of observer descriptors for\n   *   this class\n   * @param {Object} dynamicFns Object containing keys for any properties\n   *   that are functions and should trigger the effect when the function\n   *   reference is changed\n   * @private\n   */\n  function finalizeObservers(proto, observers, dynamicFns) {\n    for (let i=0; i < observers.length; i++) {\n      proto._createMethodObserver(observers[i], dynamicFns);\n    }\n  }\n\n  /**\n   * Creates effects for a property.\n   *\n   * Note, once a property has been set to\n   * `readOnly`, `computed`, `reflectToAttribute`, or `notify`\n   * these values may not be changed. For example, a subclass cannot\n   * alter these settings. However, additional `observers` may be added\n   * by subclasses.\n   *\n   * The info object should may contain property metadata as follows:\n   *\n   * * `type`: {function} type to which an attribute matching the property\n   * is deserialized. Note the property is camel-cased from a dash-cased\n   * attribute. For example, 'foo-bar' attribute is dersialized to a\n   * property named 'fooBar'.\n   *\n   * * `readOnly`: {boolean} creates a readOnly property and\n   * makes a private setter for the private of the form '_setFoo' for a\n   * property 'foo',\n   *\n   * * `computed`: {string} creates a computed property. A computed property\n   * also automatically is set to `readOnly: true`. The value is calculated\n   * by running a method and arguments parsed from the given string. For\n   * example 'compute(foo)' will compute a given property when the\n   * 'foo' property changes by executing the 'compute' method. This method\n   * must return the computed value.\n   *\n   * * `reflectToAttriute`: {boolean} If true, the property value is reflected\n   * to an attribute of the same name. Note, the attribute is dash-cased\n   * so a property named 'fooBar' is reflected as 'foo-bar'.\n   *\n   * * `notify`: {boolean} sends a non-bubbling notification event when\n   * the property changes. For example, a property named 'foo' sends an\n   * event named 'foo-changed' with `event.detail` set to the value of\n   * the property.\n   *\n   * * observer: {string} name of a method that runs when the property\n   * changes. The arguments of the method are (value, previousValue).\n   *\n   * Note: Users may want control over modifying property\n   * effects via subclassing. For example, a user might want to make a\n   * reflectToAttribute property not do so in a subclass. We've chosen to\n   * disable this because it leads to additional complication.\n   * For example, a readOnly effect generates a special setter. If a subclass\n   * disables the effect, the setter would fail unexpectedly.\n   * Based on feedback, we may want to try to make effects more malleable\n   * and/or provide an advanced api for manipulating them.\n   * Also consider adding warnings when an effect cannot be changed.\n   *\n   * @param {PolymerElement} proto Element class prototype to add accessors\n   *   and effects to\n   * @param {string} name Name of the property.\n   * @param {Object} info Info object from which to create property effects.\n   * Supported keys:\n   * @param {Object} allProps Flattened map of all properties defined in this\n   *   element (including inherited properties)\n   * @private\n   */\n  function createPropertyFromConfig(proto, name, info, allProps) {\n    // computed forces readOnly...\n    if (info.computed) {\n      info.readOnly = true;\n    }\n    // Note, since all computed properties are readOnly, this prevents\n    // adding additional computed property effects (which leads to a confusing\n    // setup where multiple triggers for setting a property)\n    // While we do have `hasComputedEffect` this is set on the property's\n    // dependencies rather than itself.\n    if (info.computed  && !proto._hasReadOnlyEffect(name)) {\n      proto._createComputedProperty(name, info.computed, allProps);\n    }\n    if (info.readOnly && !proto._hasReadOnlyEffect(name)) {\n      proto._createReadOnlyProperty(name, !info.computed);\n    }\n    if (info.reflectToAttribute && !proto._hasReflectEffect(name)) {\n      proto._createReflectedProperty(name);\n    }\n    if (info.notify && !proto._hasNotifyEffect(name)) {\n      proto._createNotifyingProperty(name);\n    }\n    // always add observer\n    if (info.observer) {\n      proto._createPropertyObserver(name, info.observer, allProps[info.observer]);\n    }\n  }\n\n  /**\n   * Configures an element `proto` to function with a given `template`.\n   * The element name `is` and extends `ext` must be specified for ShadyCSS\n   * style scoping.\n   *\n   * @param {PolymerElement} proto Element class prototype to add accessors\n   *   and effects to\n   * @param {!HTMLTemplateElement} template Template to process and bind\n   * @param {string} baseURI URL against which to resolve urls in\n   *   style element cssText\n   * @param {string} is Tag name (or type extension name) for this element\n   * @param {string=} ext For type extensions, the tag name that was extended\n   * @private\n   */\n  function finalizeTemplate(proto, template, baseURI, is, ext) {\n    // support `include=\"module-name\"`\n    let cssText =\n      cssFromModuleImports(is) +\n      cssFromTemplate(template, baseURI);\n    if (cssText) {\n      let style = document.createElement('style');\n      style.textContent = cssText;\n      template.content.insertBefore(style, template.content.firstChild);\n    }\n    if (window.ShadyCSS) {\n      window.ShadyCSS.prepareTemplate(template, is, ext);\n    }\n    proto._bindTemplate(template);\n  }\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @unrestricted\n   * @implements {Polymer_ElementMixin}\n   */\n  class PolymerElement extends polymerElementBase {\n\n    /**\n     * Standard Custom Elements V1 API.  The default implementation returns\n     * a list of dash-cased attributes based on a flattening of all properties\n     * declared in `static get properties()` for this element and any\n     * superclasses.\n     *\n     * @return {Array} Observed attribute list\n     */\n    static get observedAttributes() {\n      if (!this.hasOwnProperty(JSCompiler_renameProperty('__observedAttributes', this))) {\n        let list = [];\n        let properties = propertiesForClass(this);\n        for (let prop in properties) {\n          list.push(camelToDashCase(prop));\n        }\n        this.__observedAttributes = list;\n      }\n      return this.__observedAttributes;\n    }\n\n    /**\n     * Called automatically when the first element instance is created to\n     * ensure that class finalization work has been completed.\n     * May be called by users to eagerly perform class finalization work\n     * prior to the creation of the first element instance.\n     *\n     * Class finalization work generally includes meta-programming such as\n     * creating property accessors and any property effect metadata needed for\n     * the features used.\n     *\n     * @public\n     */\n    static finalize() {\n      if (!hasClassFinalized(this)) {\n        finalizeClassAndSuper(this);\n      }\n    }\n\n    /**\n     * Returns the template that will be stamped into this element's shadow root.\n     *\n     * If a `static get is()` getter is defined, the default implementation\n     * will return the first `<template>` in a `dom-module` whose `id`\n     * matches this element's `is`.\n     *\n     * Users may override this getter to return an arbitrary template\n     * (in which case the `is` getter is unnecessary). The template returned\n     * may be either an `HTMLTemplateElement` or a string that will be\n     * automatically parsed into a template.\n     *\n     * Note that when subclassing, if the super class overrode the default\n     * implementation and the subclass would like to provide an alternate\n     * template via a `dom-module`, it should override this getter and\n     * return `Polymer.DomModule.import(this.is, 'template')`.\n     *\n     * If a subclass would like to modify the super class template, it should\n     * clone it rather than modify it in place.  If the getter does expensive\n     * work such as cloning/modifying a template, it should memoize the\n     * template for maximum performance:\n     *\n     *   let memoizedTemplate;\n     *   class MySubClass extends MySuperClass {\n     *     static get template() {\n     *       if (!memoizedTemplate) {\n     *         memoizedTemplate = super.template.cloneNode(true);\n     *         let subContent = document.createElement('div');\n     *         subContent.textContent = 'This came from MySubClass';\n     *         memoizedTemplate.content.appendChild(subContent);\n     *       }\n     *       return memoizedTemplate;\n     *     }\n     *   }\n     *\n     * @return {HTMLTemplateElement|string} Template to be stamped\n     */\n    static get template() {\n      if (!this.hasOwnProperty(JSCompiler_renameProperty('_template', this))) {\n        this._template = DomModule && DomModule.import(\n          /** @type PolymerElementConstructor*/ (this).is, 'template') ||\n          // note: implemented so a subclass can retrieve the super\n          // template; call the super impl this way so that `this` points\n          // to the superclass.\n          Object.getPrototypeOf(/** @type PolymerElementConstructor*/ (this).prototype).constructor.template;\n      }\n      return this._template;\n    }\n\n    /**\n     * Path matching the url from which the element was imported.\n     * This path is used to resolve url's in template style cssText.\n     * The `importPath` property is also set on element instances and can be\n     * used to create bindings relative to the import path.\n     * Defaults to the path matching the url containing a `dom-module` element\n     * matching this element's static `is` property.\n     * Note, this path should contain a trailing `/`.\n     *\n     * @return {string} The import path for this element class\n     */\n    static get importPath() {\n      if (!this.hasOwnProperty(JSCompiler_renameProperty('_importPath', this))) {\n          const module = DomModule && DomModule.import(/** @type PolymerElementConstructor */ (this).is);\n          this._importPath = module ? module.assetpath : '' ||\n          Object.getPrototypeOf(/** @type PolymerElementConstructor*/ (this).prototype).constructor.importPath;\n      }\n      return this._importPath;\n    }\n\n    constructor() {\n      super();\n      /** @type {HTMLTemplateElement} */\n      this._template;\n      /** @type {string} */\n      this._importPath;\n      /** @type {string} */\n      this.rootPath;\n      /** @type {string} */\n      this.importPath;\n      /** @type {StampedTemplate | HTMLElement | ShadowRoot} */\n      this.root;\n      /** @type {!Object<string, !Node>} */\n      this.$;\n    }\n\n    /**\n     * Overrides the default `Polymer.PropertyAccessors` to ensure class\n     * metaprogramming related to property accessors and effects has\n     * completed (calls `finalize`).\n     *\n     * It also initializes any property defaults provided via `value` in\n     * `properties` metadata.\n     *\n     * @override\n     * @suppress {invalidCasts}\n     */\n    _initializeProperties() {\n      instanceCount++;\n      this.constructor.finalize();\n      const importPath = this.constructor.importPath;\n      // note: finalize template when we have access to `localName` to\n      // avoid dependence on `is` for polyfilling styling.\n      if (this._template && !this._template.__polymerFinalized) {\n        this._template.__polymerFinalized = true;\n        const baseURI =\n          importPath ? resolveUrl$0(importPath) : '';\n        finalizeTemplate(/** @type {!PolymerElement} */(this.__proto__), this._template, baseURI,\n          /**@type {!HTMLElement}*/(this).localName);\n      }\n      super._initializeProperties();\n      // set path defaults\n      this.rootPath = rootPath$0;\n      this.importPath = importPath;\n      // apply property defaults...\n      let p$ = propertyDefaultsForClass(this.constructor);\n      if (!p$) {\n        return;\n      }\n      for (let p in p$) {\n        let info = p$[p];\n        // Don't set default value if there is already an own property, which\n        // happens when a `properties` property with default but no effects had\n        // a property set (e.g. bound) by its host before upgrade\n        if (!this.hasOwnProperty(p)) {\n          let value = typeof info.value == 'function' ?\n            info.value.call(this) :\n            info.value;\n          // Set via `_setProperty` if there is an accessor, to enable\n          // initializing readOnly property defaults\n          if (this._hasAccessor(p)) {\n            this._setPendingProperty(p, value, true);\n          } else {\n            this[p] = value;\n          }\n        }\n      }\n    }\n\n    /**\n     * Provides a default implementation of the standard Custom Elements\n     * `connectedCallback`.\n     *\n     * The default implementation enables the property effects system and\n     * flushes any pending properties, and updates shimmed CSS properties\n     * when using the ShadyCSS scoping/custom properties polyfill.\n     *\n     * @suppress {invalidCasts}\n     */\n    connectedCallback() {\n      if (window.ShadyCSS && this._template) {\n        window.ShadyCSS.styleElement(/** @type {!HTMLElement} */(this));\n      }\n      this._enableProperties();\n    }\n\n    /**\n     * Provides a default implementation of the standard Custom Elements\n     * `disconnectedCallback`.\n     */\n    disconnectedCallback() {}\n\n    /**\n     * Stamps the element template.\n     *\n     * @override\n     */\n    ready() {\n      if (this._template) {\n        this.root = this._stampTemplate(this._template);\n        this.$ = this.root.$;\n      }\n      super.ready();\n    }\n\n    /**\n     * Implements `PropertyEffects`'s `_readyClients` call. Attaches\n     * element dom by calling `_attachDom` with the dom stamped from the\n     * element's template via `_stampTemplate`. Note that this allows\n     * client dom to be attached to the element prior to any observers\n     * running.\n     *\n     * @override\n     */\n    _readyClients() {\n      if (this._template) {\n        this.root = this._attachDom(/** @type {StampedTemplate} */(this.root));\n      }\n      // The super._readyClients here sets the clients initialized flag.\n      // We must wait to do this until after client dom is created/attached\n      // so that this flag can be checked to prevent notifications fired\n      // during this process from being handled before clients are ready.\n      super._readyClients();\n    }\n\n\n    /**\n     * Attaches an element's stamped dom to itself. By default,\n     * this method creates a `shadowRoot` and adds the dom to it.\n     * However, this method may be overridden to allow an element\n     * to put its dom in another location.\n     *\n     * @throws {Error}\n     * @suppress {missingReturn}\n     * @param {StampedTemplate} dom to attach to the element.\n     * @return {ShadowRoot} node to which the dom has been attached.\n     */\n    _attachDom(dom) {\n      if (this.attachShadow) {\n        if (dom) {\n          if (!this.shadowRoot) {\n            this.attachShadow({mode: 'open'});\n          }\n          this.shadowRoot.appendChild(dom);\n          return this.shadowRoot;\n        }\n        return null;\n      } else {\n        throw new Error('ShadowDOM not available. ' +\n          // TODO(sorvell): move to compile-time conditional when supported\n        'Polymer.Element can create dom as children instead of in ' +\n        'ShadowDOM by setting `this.root = this;\\` before \\`ready\\`.');\n      }\n    }\n\n    /**\n     * Provides a default implementation of the standard Custom Elements\n     * `attributeChangedCallback`.\n     *\n     * By default, attributes declared in `properties` metadata are\n     * deserialized using their `type` information to properties of the\n     * same name.  \"Dash-cased\" attributes are deserialzed to \"camelCase\"\n     * properties.\n     *\n     * @param {string} name Name of attribute.\n     * @param {?string} old Old value of attribute.\n     * @param {?string} value Current value of attribute.\n     * @override\n     */\n    attributeChangedCallback(name, old, value) {\n      if (old !== value) {\n        let property = caseMap.dashToCamelCase(name);\n        let type = propertiesForClass(this.constructor)[property].type;\n        if (!this._hasReadOnlyEffect(property)) {\n          this._attributeToProperty(name, value, type);\n        }\n      }\n    }\n\n    /**\n     * When using the ShadyCSS scoping and custom property shim, causes all\n     * shimmed styles in this element (and its subtree) to be updated\n     * based on current custom property values.\n     *\n     * The optional parameter overrides inline custom property styles with an\n     * object of properties where the keys are CSS properties, and the values\n     * are strings.\n     *\n     * Example: `this.updateStyles({'--color': 'blue'})`\n     *\n     * These properties are retained unless a value of `null` is set.\n     *\n     * @param {Object=} properties Bag of custom property key/values to\n     *   apply to this element.\n     * @suppress {invalidCasts}\n     */\n    updateStyles(properties) {\n      if (window.ShadyCSS) {\n        window.ShadyCSS.styleSubtree(/** @type {!HTMLElement} */(this), properties);\n      }\n    }\n\n    /**\n     * Rewrites a given URL relative to a base URL. The base URL defaults to\n     * the original location of the document containing the `dom-module` for\n     * this element. This method will return the same URL before and after\n     * bundling.\n     *\n     * @param {string} url URL to resolve.\n     * @param {string=} base Optional base URL to resolve against, defaults\n     * to the element's `importPath`\n     * @return {string} Rewritten URL relative to base\n     */\n    resolveUrl(url, base) {\n      if (!base && this.importPath) {\n        base = resolveUrl$0(this.importPath);\n      }\n      return resolveUrl$0(url, base);\n    }\n\n    /**\n     * Overrides `PropertyAccessors` to add map of dynamic functions on\n     * template info, for consumption by `PropertyEffects` template binding\n     * code. This map determines which method templates should have accessors\n     * created for them.\n     *\n     * @override\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     */\n    static _parseTemplateContent(template, templateInfo, nodeInfo) {\n      templateInfo.dynamicFns = templateInfo.dynamicFns || propertiesForClass(this);\n      return super._parseTemplateContent(template, templateInfo, nodeInfo);\n    }\n\n  }\n\n  return PolymerElement;\n});\n\nexport let instanceCount = 0;\nexport const registrations = [];\n\nexport function _regLog(prototype) {\n  console.log('[' + prototype.is + ']: registered');\n}\n\nexport function register(prototype) {\n  registrations.push(prototype);\n  undefined && _regLog(prototype);\n}\n\nexport function dumpRegistrations() {\n  registrations.forEach(_regLog);\n}\n\nexport const updateStyles = function(props) {\n  if (window.ShadyCSS) {\n    window.ShadyCSS.styleDocument(props);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@polymer/polymer/lib/mixins/element-mixin.js","import { resolveCss } from './resolve-url.js';\n\nconst MODULE_STYLE_LINK_SELECTOR = 'link[rel=import][type~=css]';\nconst INCLUDE_ATTR = 'include';\n\nfunction importModule(moduleId) {\n  const /** Polymer.DomModule */ PolymerDomModule = customElements.get('dom-module');\n  if (!PolymerDomModule) {\n    return null;\n  }\n  return PolymerDomModule.import(moduleId);\n}\n\n/** @typedef {{assetpath: string}} */\nlet templateWithAssetPath; // eslint-disable-line no-unused-vars\n\nexport function cssFromModules(moduleIds) {\n  let modules = moduleIds.trim().split(/\\s+/);\n  let cssText = '';\n  for (let i=0; i < modules.length; i++) {\n    cssText += cssFromModule(modules[i]);\n  }\n  return cssText;\n}\n\nexport function cssFromModule(moduleId) {\n  let m = importModule(moduleId);\n  if (m && m._cssText === undefined) {\n    // module imports: <link rel=\"import\" type=\"css\">\n    let cssText = _cssFromModuleImports(m);\n    // include css from the first template in the module\n    let t = m.querySelector('template');\n    if (t) {\n      cssText += cssFromTemplate(t, /** @type {templateWithAssetPath} */(m).assetpath);\n    }\n    m._cssText = cssText || null;\n  }\n  if (!m) {\n    console.warn('Could not find style data in module named', moduleId);\n  }\n  return m && m._cssText || '';\n}\n\nexport function cssFromTemplate(template, baseURI) {\n  let cssText = '';\n  // if element is a template, get content from its .content\n  let e$ = template.content.querySelectorAll('style');\n  for (let i=0; i < e$.length; i++) {\n    let e = e$[i];\n    // support style sharing by allowing styles to \"include\"\n    // other dom-modules that contain styling\n    let include = e.getAttribute(INCLUDE_ATTR);\n    if (include) {\n      cssText += cssFromModules(include);\n    }\n    e.parentNode.removeChild(e);\n    cssText += baseURI ?\n      resolveCss(e.textContent, baseURI) : e.textContent;\n  }\n  return cssText;\n}\n\nexport function cssFromModuleImports(moduleId) {\n  let m = importModule(moduleId);\n  return m ? _cssFromModuleImports(m) : '';\n}\n\nexport function _cssFromModuleImports(module) {\n  let cssText = '';\n  let p$ = module.querySelectorAll(MODULE_STYLE_LINK_SELECTOR);\n  for (let i=0; i < p$.length; i++) {\n    let p = p$[i];\n    if (p.import) {\n      let importDoc = p.import;\n      // NOTE: polyfill affordance.\n      // under the HTMLImports polyfill, there will be no 'body',\n      // but the import pseudo-doc can be used directly.\n      let container = importDoc.body ? importDoc.body : importDoc;\n      cssText +=\n        resolveCss(container.textContent,\n          importDoc.baseURI);\n    }\n  }\n  return cssText;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@polymer/polymer/lib/utils/style-gather.js","import '../utils/boot.js';\nimport { resolveUrl, pathFromUrl } from '../utils/resolve-url.js';\n\nlet modules = {};\nlet lcModules = {};\nfunction findModule(id) {\n  return modules[id] || lcModules[id.toLowerCase()];\n}\n\nfunction styleOutsideTemplateCheck(inst) {\n  if (inst.querySelector('style')) {\n    console.warn('dom-module %s has style outside template', inst.id);\n  }\n}\n\n/**\n * The `dom-module` element registers the dom it contains to the name given\n * by the module's id attribute. It provides a unified database of dom\n * accessible via its static `import` API.\n *\n * A key use case of `dom-module` is for providing custom element `<template>`s\n * via HTML imports that are parsed by the native HTML parser, that can be\n * relocated during a bundling pass and still looked up by `id`.\n *\n * Example:\n *\n *     <dom-module id=\"foo\">\n *       <img src=\"stuff.png\">\n *     </dom-module>\n *\n * Then in code in some other location that cannot access the dom-module above\n *\n *     let img = customElements.get('dom-module').import('foo', 'img');\n *\n * @customElement\n * @extends HTMLElement\n * @memberof Polymer\n * @summary Custom element that provides a registry of relocatable DOM content\n *   by `id` that is agnostic to bundling.\n * @unrestricted\n */\nclass DomModule extends HTMLElement {\n\n  static get observedAttributes() { return ['id']; }\n\n  /**\n   * Retrieves the element specified by the css `selector` in the module\n   * registered by `id`. For example, this.import('foo', 'img');\n   * @param {string} id The id of the dom-module in which to search.\n   * @param {string=} selector The css selector by which to find the element.\n   * @return {Element} Returns the element which matches `selector` in the\n   * module registered at the specified `id`.\n   */\n  static import(id, selector) {\n    if (id) {\n      let m = findModule(id);\n      if (m && selector) {\n        return m.querySelector(selector);\n      }\n      return m;\n    }\n    return null;\n  }\n\n  attributeChangedCallback(name, old, value) {\n    if (old !== value) {\n      this.register();\n    }\n  }\n\n  /**\n   * The absolute URL of the original location of this `dom-module`.\n   *\n   * This value will differ from this element's `ownerDocument` in the\n   * following ways:\n   * - Takes into account any `assetpath` attribute added during bundling\n   *   to indicate the original location relative to the bundled location\n   * - Uses the HTMLImports polyfill's `importForElement` API to ensure\n   *   the path is relative to the import document's location since\n   *   `ownerDocument` is not currently polyfilled\n   */\n  get assetpath() {\n    // Don't override existing assetpath.\n    if (!this.__assetpath) {\n      // note: assetpath set via an attribute must be relative to this\n      // element's location; accomodate polyfilled HTMLImports\n      const owner = window.HTMLImports && HTMLImports.importForElement ?\n        HTMLImports.importForElement(this) || document : this.ownerDocument;\n      const url = resolveUrl(\n        this.getAttribute('assetpath') || '', owner.baseURI);\n      this.__assetpath = pathFromUrl(url);\n    }\n    return this.__assetpath;\n  }\n\n  /**\n   * Registers the dom-module at a given id. This method should only be called\n   * when a dom-module is imperatively created. For\n   * example, `document.createElement('dom-module').register('foo')`.\n   * @param {string=} id The id at which to register the dom-module.\n   */\n  register(id) {\n    id = id || this.id;\n    if (id) {\n      this.id = id;\n      // store id separate from lowercased id so that\n      // in all cases mixedCase id will stored distinctly\n      // and lowercase version is a fallback\n      modules[id] = this;\n      lcModules[id.toLowerCase()] = this;\n      styleOutsideTemplateCheck(this);\n    }\n  }\n}\n\nDomModule.prototype['modules'] = modules;\n\ncustomElements.define('dom-module', DomModule);\n\nexport { DomModule };\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@polymer/polymer/lib/elements/dom-module.js","import '../utils/boot.js';\nimport { dedupingMixin } from '../utils/mixin.js';\nimport * as caseMap$0 from '../utils/case-map.js';\nimport { microTask } from '../utils/async.js';\n\nlet caseMap = caseMap$0;\n\nlet microtask = microTask;\n\n// Save map of native properties; this forms a blacklist or properties\n// that won't have their values \"saved\" by `saveAccessorValue`, since\n// reading from an HTMLElement accessor from the context of a prototype throws\nconst nativeProperties = {};\nlet proto = HTMLElement.prototype;\nwhile (proto) {\n  let props = Object.getOwnPropertyNames(proto);\n  for (let i=0; i<props.length; i++) {\n    nativeProperties[props[i]] = true;\n  }\n  proto = Object.getPrototypeOf(proto);\n}\n\n/**\n * Used to save the value of a property that will be overridden with\n * an accessor. If the `model` is a prototype, the values will be saved\n * in `__dataProto`, and it's up to the user (or downstream mixin) to\n * decide how/when to set these values back into the accessors.\n * If `model` is already an instance (it has a `__data` property), then\n * the value will be set as a pending property, meaning the user should\n * call `_invalidateProperties` or `_flushProperties` to take effect\n *\n * @param {Object} model Prototype or instance\n * @param {string} property Name of property\n * @private\n */\nfunction saveAccessorValue(model, property) {\n  // Don't read/store value for any native properties since they could throw\n  if (!nativeProperties[property]) {\n    let value = model[property];\n    if (value !== undefined) {\n      if (model.__data) {\n        // Adding accessor to instance; update the property\n        // It is the user's responsibility to call _flushProperties\n        model._setPendingProperty(property, value);\n      } else {\n        // Adding accessor to proto; save proto's value for instance-time use\n        if (!model.__dataProto) {\n          model.__dataProto = {};\n        } else if (!model.hasOwnProperty(JSCompiler_renameProperty('__dataProto', model))) {\n          model.__dataProto = Object.create(model.__dataProto);\n        }\n        model.__dataProto[property] = value;\n      }\n    }\n  }\n}\n\nexport const PropertyAccessors = dedupingMixin(superClass => {\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_PropertyAccessors}\n   * @extends HTMLElement\n   * @unrestricted\n   */\n  class PropertyAccessors extends superClass {\n\n    /**\n     * Generates property accessors for all attributes in the standard\n     * static `observedAttributes` array.\n     *\n     * Attribute names are mapped to property names using the `dash-case` to\n     * `camelCase` convention\n     *\n     */\n    static createPropertiesForAttributes() {\n      let a$ = this.observedAttributes;\n      for (let i=0; i < a$.length; i++) {\n        this.prototype._createPropertyAccessor(caseMap.dashToCamelCase(a$[i]));\n      }\n    }\n\n    constructor() {\n      super();\n      /** @type {boolean} */\n      this.__serializing;\n      /** @type {number} */\n      this.__dataCounter;\n      /** @type {boolean} */\n      this.__dataEnabled;\n      /** @type {boolean} */\n      this.__dataReady;\n      /** @type {boolean} */\n      this.__dataInvalid;\n      /** @type {!Object} */\n      this.__data;\n      /** @type {Object} */\n      this.__dataPending;\n      /** @type {Object} */\n      this.__dataOld;\n      /** @type {Object} */\n      this.__dataProto;\n      /** @type {Object} */\n      this.__dataHasAccessor;\n      /** @type {Object} */\n      this.__dataInstanceProps;\n      this._initializeProperties();\n    }\n\n    /**\n     * Implements native Custom Elements `attributeChangedCallback` to\n     * set an attribute value to a property via `_attributeToProperty`.\n     *\n     * @param {string} name Name of attribute that changed\n     * @param {?string} old Old attribute value\n     * @param {?string} value New attribute value\n     */\n    attributeChangedCallback(name, old, value) {\n      if (old !== value) {\n        this._attributeToProperty(name, value);\n      }\n    }\n\n    /**\n     * Initializes the local storage for property accessors.\n     *\n     * Provided as an override point for performing any setup work prior\n     * to initializing the property accessor system.\n     *\n     * @protected\n     */\n    _initializeProperties() {\n      this.__serializing = false;\n      this.__dataCounter = 0;\n      this.__dataEnabled = false;\n      this.__dataReady = false;\n      this.__dataInvalid = false;\n      this.__data = {};\n      this.__dataPending = null;\n      this.__dataOld = null;\n      if (this.__dataProto) {\n        this._initializeProtoProperties(this.__dataProto);\n        this.__dataProto = null;\n      }\n      // Capture instance properties; these will be set into accessors\n      // during first flush. Don't set them here, since we want\n      // these to overwrite defaults/constructor assignments\n      for (let p in this.__dataHasAccessor) {\n        if (this.hasOwnProperty(p)) {\n          this.__dataInstanceProps = this.__dataInstanceProps || {};\n          this.__dataInstanceProps[p] = this[p];\n          delete this[p];\n        }\n      }\n    }\n\n    /**\n     * Called at instance time with bag of properties that were overwritten\n     * by accessors on the prototype when accessors were created.\n     *\n     * The default implementation sets these properties back into the\n     * setter at instance time.  This method is provided as an override\n     * point for customizing or providing more efficient initialization.\n     *\n     * @param {Object} props Bag of property values that were overwritten\n     *   when creating property accessors.\n     * @protected\n     */\n    _initializeProtoProperties(props) {\n      for (let p in props) {\n        this._setProperty(p, props[p]);\n      }\n    }\n\n    /**\n     * Called at ready time with bag of instance properties that overwrote\n     * accessors when the element upgraded.\n     *\n     * The default implementation sets these properties back into the\n     * setter at ready time.  This method is provided as an override\n     * point for customizing or providing more efficient initialization.\n     *\n     * @param {Object} props Bag of property values that were overwritten\n     *   when creating property accessors.\n     * @protected\n     */\n    _initializeInstanceProperties(props) {\n      Object.assign(this, props);\n    }\n\n    /**\n     * Ensures the element has the given attribute. If it does not,\n     * assigns the given value to the attribute.\n     *\n     *\n     * @param {string} attribute Name of attribute to ensure is set.\n     * @param {string} value of the attribute.\n     */\n    _ensureAttribute(attribute, value) {\n      if (!this.hasAttribute(attribute)) {\n        this._valueToNodeAttribute(this, value, attribute);\n      }\n    }\n\n    /**\n     * Deserializes an attribute to its associated property.\n     *\n     * This method calls the `_deserializeValue` method to convert the string to\n     * a typed value.\n     *\n     * @param {string} attribute Name of attribute to deserialize.\n     * @param {?string} value of the attribute.\n     * @param {*=} type type to deserialize to.\n     */\n    _attributeToProperty(attribute, value, type) {\n      // Don't deserialize back to property if currently reflecting\n      if (!this.__serializing) {\n        let property = caseMap.dashToCamelCase(attribute);\n        this[property] = this._deserializeValue(value, type);\n      }\n    }\n\n    /**\n     * Serializes a property to its associated attribute.\n     *\n     * @param {string} property Property name to reflect.\n     * @param {string=} attribute Attribute name to reflect.\n     * @param {*=} value Property value to refect.\n     */\n    _propertyToAttribute(property, attribute, value) {\n      this.__serializing = true;\n      value = (arguments.length < 3) ? this[property] : value;\n      this._valueToNodeAttribute(this, value,\n        attribute || caseMap.camelToDashCase(property));\n      this.__serializing = false;\n    }\n\n    /**\n     * Sets a typed value to an HTML attribute on a node.\n     *\n     * This method calls the `_serializeValue` method to convert the typed\n     * value to a string.  If the `_serializeValue` method returns `undefined`,\n     * the attribute will be removed (this is the default for boolean\n     * type `false`).\n     *\n     * @param {Element} node Element to set attribute to.\n     * @param {*} value Value to serialize.\n     * @param {string} attribute Attribute name to serialize to.\n     */\n    _valueToNodeAttribute(node, value, attribute) {\n      let str = this._serializeValue(value);\n      if (str === undefined) {\n        node.removeAttribute(attribute);\n      } else {\n        node.setAttribute(attribute, str);\n      }\n    }\n\n    /**\n     * Converts a typed JavaScript value to a string.\n     *\n     * This method is called by Polymer when setting JS property values to\n     * HTML attributes.  Users may override this method on Polymer element\n     * prototypes to provide serialization for custom types.\n     *\n     * @param {*} value Property value to serialize.\n     * @return {string | undefined} String serialized from the provided property value.\n     */\n    _serializeValue(value) {\n      /* eslint-disable no-fallthrough */\n      switch (typeof value) {\n        case 'boolean':\n          return value ? '' : undefined;\n\n        case 'object':\n          if (value instanceof Date) {\n            return value.toString();\n          } else if (value) {\n            try {\n              return JSON.stringify(value);\n            } catch(x) {\n              return '';\n            }\n          }\n\n        default:\n          return value != null ? value.toString() : undefined;\n      }\n    }\n\n    /**\n     * Converts a string to a typed JavaScript value.\n     *\n     * This method is called by Polymer when reading HTML attribute values to\n     * JS properties.  Users may override this method on Polymer element\n     * prototypes to provide deserialization for custom `type`s.  Note,\n     * the `type` argument is the value of the `type` field provided in the\n     * `properties` configuration object for a given property, and is\n     * by convention the constructor for the type to deserialize.\n     *\n     * Note: The return value of `undefined` is used as a sentinel value to\n     * indicate the attribute should be removed.\n     *\n     * @param {?string} value Attribute value to deserialize.\n     * @param {*=} type Type to deserialize the string to.\n     * @return {*} Typed value deserialized from the provided string.\n     */\n    _deserializeValue(value, type) {\n      /**\n       * @type {*}\n       */\n      let outValue;\n      switch (type) {\n        case Number:\n          outValue = Number(value);\n          break;\n\n        case Boolean:\n          outValue = (value !== null);\n          break;\n\n        case Object:\n          try {\n            outValue = JSON.parse(/** @type string */(value));\n          } catch(x) {\n            // allow non-JSON literals like Strings and Numbers\n          }\n          break;\n\n        case Array:\n          try {\n            outValue = JSON.parse(/** @type string */(value));\n          } catch(x) {\n            outValue = null;\n            console.warn(`Polymer::Attributes: couldn't decode Array as JSON: ${value}`);\n          }\n          break;\n\n        case Date:\n          outValue = new Date(value);\n          break;\n\n        case String:\n        default:\n          outValue = value;\n          break;\n      }\n\n      return outValue;\n    }\n    /* eslint-enable no-fallthrough */\n\n    /**\n     * Creates a setter/getter pair for the named property with its own\n     * local storage.  The getter returns the value in the local storage,\n     * and the setter calls `_setProperty`, which updates the local storage\n     * for the property and enqueues a `_propertiesChanged` callback.\n     *\n     * This method may be called on a prototype or an instance.  Calling\n     * this method may overwrite a property value that already exists on\n     * the prototype/instance by creating the accessor.  When calling on\n     * a prototype, any overwritten values are saved in `__dataProto`,\n     * and it is up to the subclasser to decide how/when to set those\n     * properties back into the accessor.  When calling on an instance,\n     * the overwritten value is set via `_setPendingProperty`, and the\n     * user should call `_invalidateProperties` or `_flushProperties`\n     * for the values to take effect.\n     *\n     * @param {string} property Name of the property\n     * @param {boolean=} readOnly When true, no setter is created; the\n     *   protected `_setProperty` function must be used to set the property\n     * @protected\n     */\n    _createPropertyAccessor(property, readOnly) {\n      if (!this.hasOwnProperty('__dataHasAccessor')) {\n        this.__dataHasAccessor = Object.assign({}, this.__dataHasAccessor);\n      }\n      if (!this.__dataHasAccessor[property]) {\n        this.__dataHasAccessor[property] = true;\n        saveAccessorValue(this, property);\n        Object.defineProperty(this, property, {\n          /* eslint-disable valid-jsdoc */\n          /** @this {PropertyAccessors} */\n          get: function() {\n            return this.__data[property];\n          },\n          /** @this {PropertyAccessors} */\n          set: readOnly ? function() {} : function(value) {\n            this._setProperty(property, value);\n          }\n          /* eslint-enable */\n        });\n      }\n    }\n\n    /**\n     * Returns true if this library created an accessor for the given property.\n     *\n     * @param {string} property Property name\n     * @return {boolean} True if an accessor was created\n     */\n    _hasAccessor(property) {\n      return this.__dataHasAccessor && this.__dataHasAccessor[property];\n    }\n\n    /**\n     * Updates the local storage for a property (via `_setPendingProperty`)\n     * and enqueues a `_proeprtiesChanged` callback.\n     *\n     * @param {string} property Name of the property\n     * @param {*} value Value to set\n     * @protected\n     */\n    _setProperty(property, value) {\n      if (this._setPendingProperty(property, value)) {\n        this._invalidateProperties();\n      }\n    }\n\n    /**\n     * Updates the local storage for a property, records the previous value,\n     * and adds it to the set of \"pending changes\" that will be passed to the\n     * `_propertiesChanged` callback.  This method does not enqueue the\n     * `_propertiesChanged` callback.\n     *\n     * @param {string} property Name of the property\n     * @param {*} value Value to set\n     * @return {boolean} Returns true if the property changed\n     * @protected\n     */\n    _setPendingProperty(property, value) {\n      let old = this.__data[property];\n      let changed = this._shouldPropertyChange(property, value, old);\n      if (changed) {\n        if (!this.__dataPending) {\n          this.__dataPending = {};\n          this.__dataOld = {};\n        }\n        // Ensure old is captured from the last turn\n        if (this.__dataOld && !(property in this.__dataOld)) {\n          this.__dataOld[property] = old;\n        }\n        this.__data[property] = value;\n        this.__dataPending[property] = value;\n      }\n      return changed;\n    }\n\n    /**\n     * Returns true if the specified property has a pending change.\n     *\n     * @param {string} prop Property name\n     * @return {boolean} True if property has a pending change\n     * @protected\n     */\n    _isPropertyPending(prop) {\n      return Boolean(this.__dataPending && (prop in this.__dataPending));\n    }\n\n    /**\n     * Marks the properties as invalid, and enqueues an async\n     * `_propertiesChanged` callback.\n     *\n     * @protected\n     */\n    _invalidateProperties() {\n      if (!this.__dataInvalid && this.__dataReady) {\n        this.__dataInvalid = true;\n        microtask.run(() => {\n          if (this.__dataInvalid) {\n            this.__dataInvalid = false;\n            this._flushProperties();\n          }\n        });\n      }\n    }\n\n    /**\n     * Call to enable property accessor processing. Before this method is\n     * called accessor values will be set but side effects are\n     * queued. When called, any pending side effects occur immediately.\n     * For elements, generally `connectedCallback` is a normal spot to do so.\n     * It is safe to call this method multiple times as it only turns on\n     * property accessors once.\n     */\n    _enableProperties() {\n      if (!this.__dataEnabled) {\n        this.__dataEnabled = true;\n        if (this.__dataInstanceProps) {\n          this._initializeInstanceProperties(this.__dataInstanceProps);\n          this.__dataInstanceProps = null;\n        }\n        this.ready();\n      }\n    }\n\n    /**\n     * Calls the `_propertiesChanged` callback with the current set of\n     * pending changes (and old values recorded when pending changes were\n     * set), and resets the pending set of changes. Generally, this method\n     * should not be called in user code.\n     *\n     *\n     * @protected\n     */\n    _flushProperties() {\n      if (this.__dataPending && this.__dataOld) {\n        let changedProps = this.__dataPending;\n        this.__dataPending = null;\n        this.__dataCounter++;\n        this._propertiesChanged(this.__data, changedProps, this.__dataOld);\n        this.__dataCounter--;\n      }\n    }\n\n    /**\n     * Lifecycle callback called the first time properties are being flushed.\n     * Prior to `ready`, all property sets through accessors are queued and\n     * their effects are flushed after this method returns.\n     *\n     * Users may override this function to implement behavior that is\n     * dependent on the element having its properties initialized, e.g.\n     * from defaults (initialized from `constructor`, `_initializeProperties`),\n     * `attributeChangedCallback`, or values propagated from host e.g. via\n     * bindings.  `super.ready()` must be called to ensure the data system\n     * becomes enabled.\n     *\n     * @public\n     */\n    ready() {\n      this.__dataReady = true;\n      // Run normal flush\n      this._flushProperties();\n    }\n\n    /**\n     * Callback called when any properties with accessors created via\n     * `_createPropertyAccessor` have been set.\n     *\n     * @param {!Object} currentProps Bag of all current accessor values\n     * @param {!Object} changedProps Bag of properties changed since the last\n     *   call to `_propertiesChanged`\n     * @param {!Object} oldProps Bag of previous values for each property\n     *   in `changedProps`\n     * @protected\n     */\n    _propertiesChanged(currentProps, changedProps, oldProps) { // eslint-disable-line no-unused-vars\n    }\n\n    /**\n     * Method called to determine whether a property value should be\n     * considered as a change and cause the `_propertiesChanged` callback\n     * to be enqueued.\n     *\n     * The default implementation returns `true` for primitive types if a\n     * strict equality check fails, and returns `true` for all Object/Arrays.\n     * The method always returns false for `NaN`.\n     *\n     * Override this method to e.g. provide stricter checking for\n     * Objects/Arrays when using immutable patterns.\n     *\n     * @param {string} property Property name\n     * @param {*} value New property value\n     * @param {*} old Previous property value\n     * @return {boolean} Whether the property should be considered a change\n     *   and enqueue a `_proeprtiesChanged` callback\n     * @protected\n     */\n    _shouldPropertyChange(property, value, old) {\n      return (\n        // Strict equality check\n        (old !== value &&\n         // This ensures (old==NaN, value==NaN) always returns false\n         (old === old || value === value))\n      );\n    }\n\n  }\n\n  return PropertyAccessors;\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@polymer/polymer/lib/mixins/property-accessors.js","import '../utils/boot.js';\nimport { dedupingMixin } from '../utils/mixin.js';\n\n// 1.x backwards-compatible auto-wrapper for template type extensions\n// This is a clear layering violation and gives favored-nation status to\n// dom-if and dom-repeat templates.  This is a conceit we're choosing to keep\n// a.) to ease 1.x backwards-compatibility due to loss of `is`, and\n// b.) to maintain if/repeat capability in parser-constrained elements\n//     (e.g. table, select) in lieu of native CE type extensions without\n//     massive new invention in this space (e.g. directive system)\nconst templateExtensions = {\n  'dom-if': true,\n  'dom-repeat': true\n};\nfunction wrapTemplateExtension(node) {\n  let is = node.getAttribute('is');\n  if (is && templateExtensions[is]) {\n    let t = node;\n    t.removeAttribute('is');\n    node = t.ownerDocument.createElement(is);\n    t.parentNode.replaceChild(node, t);\n    node.appendChild(t);\n    while(t.attributes.length) {\n      node.setAttribute(t.attributes[0].name, t.attributes[0].value);\n      t.removeAttribute(t.attributes[0].name);\n    }\n  }\n  return node;\n}\n\nfunction findTemplateNode(root, nodeInfo) {\n  // recursively ascend tree until we hit root\n  let parent = nodeInfo.parentInfo && findTemplateNode(root, nodeInfo.parentInfo);\n  // unwind the stack, returning the indexed node at each level\n  if (parent) {\n    // note: marginally faster than indexing via childNodes\n    // (http://jsperf.com/childnodes-lookup)\n    for (let n=parent.firstChild, i=0; n; n=n.nextSibling) {\n      if (nodeInfo.parentIndex === i++) {\n        return n;\n      }\n    }\n  } else {\n    return root;\n  }\n}\n\n// construct `$` map (from id annotations)\nfunction applyIdToMap(inst, map, node, nodeInfo) {\n  if (nodeInfo.id) {\n    map[nodeInfo.id] = node;\n  }\n}\n\n// install event listeners (from event annotations)\nfunction applyEventListener(inst, node, nodeInfo) {\n  if (nodeInfo.events && nodeInfo.events.length) {\n    for (let j=0, e$=nodeInfo.events, e; (j<e$.length) && (e=e$[j]); j++) {\n      inst._addMethodEventListenerToNode(node, e.name, e.value, inst);\n    }\n  }\n}\n\n// push configuration references at configure time\nfunction applyTemplateContent(inst, node, nodeInfo) {\n  if (nodeInfo.templateInfo) {\n    node._templateInfo = nodeInfo.templateInfo;\n  }\n}\n\nfunction createNodeEventHandler(context, eventName, methodName) {\n  // Instances can optionally have a _methodHost which allows redirecting where\n  // to find methods. Currently used by `templatize`.\n  context = context._methodHost || context;\n  let handler = function(e) {\n    if (context[methodName]) {\n      context[methodName](e, e.detail);\n    } else {\n      console.warn('listener method `' + methodName + '` not defined');\n    }\n  };\n  return handler;\n}\n\nexport const TemplateStamp = dedupingMixin(superClass => {\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_TemplateStamp}\n   */\n  class TemplateStamp extends superClass {\n\n    /**\n     * Scans a template to produce template metadata.\n     *\n     * Template-specific metadata are stored in the object returned, and node-\n     * specific metadata are stored in objects in its flattened `nodeInfoList`\n     * array.  Only nodes in the template that were parsed as nodes of\n     * interest contain an object in `nodeInfoList`.  Each `nodeInfo` object\n     * contains an `index` (`childNodes` index in parent) and optionally\n     * `parent`, which points to node info of its parent (including its index).\n     *\n     * The template metadata object returned from this method has the following\n     * structure (many fields optional):\n     *\n     * ```js\n     *   {\n     *     // Flattened list of node metadata (for nodes that generated metadata)\n     *     nodeInfoList: [\n     *       {\n     *         // `id` attribute for any nodes with id's for generating `$` map\n     *         id: {string},\n     *         // `on-event=\"handler\"` metadata\n     *         events: [\n     *           {\n     *             name: {string},   // event name\n     *             value: {string},  // handler method name\n     *           }, ...\n     *         ],\n     *         // Notes when the template contained a `<slot>` for shady DOM\n     *         // optimization purposes\n     *         hasInsertionPoint: {boolean},\n     *         // For nested `<template>`` nodes, nested template metadata\n     *         templateInfo: {object}, // nested template metadata\n     *         // Metadata to allow efficient retrieval of instanced node\n     *         // corresponding to this metadata\n     *         parentInfo: {number},   // reference to parent nodeInfo>\n     *         parentIndex: {number},  // index in parent's `childNodes` collection\n     *         infoIndex: {number},    // index of this `nodeInfo` in `templateInfo.nodeInfoList`\n     *       },\n     *       ...\n     *     ],\n     *     // When true, the template had the `strip-whitespace` attribute\n     *     // or was nested in a template with that setting\n     *     stripWhitespace: {boolean},\n     *     // For nested templates, nested template content is moved into\n     *     // a document fragment stored here; this is an optimization to\n     *     // avoid the cost of nested template cloning\n     *     content: {DocumentFragment}\n     *   }\n     * ```\n     *\n     * This method kicks off a recursive treewalk as follows:\n     *\n     * ```\n     *    _parseTemplate <---------------------+\n     *      _parseTemplateContent              |\n     *        _parseTemplateNode  <------------|--+\n     *          _parseTemplateNestedTemplate --+  |\n     *          _parseTemplateChildNodes ---------+\n     *          _parseTemplateNodeAttributes\n     *            _parseTemplateNodeAttribute\n     *\n     * ```\n     *\n     * These methods may be overridden to add custom metadata about templates\n     * to either `templateInfo` or `nodeInfo`.\n     *\n     * Note that this method may be destructive to the template, in that\n     * e.g. event annotations may be removed after being noted in the\n     * template metadata.\n     *\n     * @param {!HTMLTemplateElement} template Template to parse\n     * @param {TemplateInfo=} outerTemplateInfo Template metadata from the outer\n     *   template, for parsing nested templates\n     * @return {!TemplateInfo} Parsed template metadata\n     */\n    static _parseTemplate(template, outerTemplateInfo) {\n      // since a template may be re-used, memo-ize metadata\n      if (!template._templateInfo) {\n        let templateInfo = template._templateInfo = {};\n        templateInfo.nodeInfoList = [];\n        templateInfo.stripWhiteSpace =\n          (outerTemplateInfo && outerTemplateInfo.stripWhiteSpace) ||\n          template.hasAttribute('strip-whitespace');\n        this._parseTemplateContent(template, templateInfo, {parent: null});\n      }\n      return template._templateInfo;\n    }\n\n    static _parseTemplateContent(template, templateInfo, nodeInfo) {\n      return this._parseTemplateNode(template.content, templateInfo, nodeInfo);\n    }\n\n    /**\n     * Parses template node and adds template and node metadata based on\n     * the current node, and its `childNodes` and `attributes`.\n     *\n     * This method may be overridden to add custom node or template specific\n     * metadata based on this node.\n     *\n     * @param {Node} node Node to parse\n     * @param {!TemplateInfo} templateInfo Template metadata for current template\n     * @param {!NodeInfo} nodeInfo Node metadata for current template.\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     */\n    static _parseTemplateNode(node, templateInfo, nodeInfo) {\n      let noted;\n      let element = /** @type Element */(node);\n      if (element.localName == 'template' && !element.hasAttribute('preserve-content')) {\n        noted = this._parseTemplateNestedTemplate(element, templateInfo, nodeInfo) || noted;\n      } else if (element.localName === 'slot') {\n        // For ShadyDom optimization, indicating there is an insertion point\n        templateInfo.hasInsertionPoint = true;\n      }\n      if (element.firstChild) {\n        noted = this._parseTemplateChildNodes(element, templateInfo, nodeInfo) || noted;\n      }\n      if (element.hasAttributes && element.hasAttributes()) {\n        noted = this._parseTemplateNodeAttributes(element, templateInfo, nodeInfo) || noted;\n      }\n      return noted;\n    }\n\n    /**\n     * Parses template child nodes for the given root node.\n     *\n     * This method also wraps whitelisted legacy template extensions\n     * (`is=\"dom-if\"` and `is=\"dom-repeat\"`) with their equivalent element\n     * wrappers, collapses text nodes, and strips whitespace from the template\n     * if the `templateInfo.stripWhitespace` setting was provided.\n     *\n     * @param {Node} root Root node whose `childNodes` will be parsed\n     * @param {!TemplateInfo} templateInfo Template metadata for current template\n     * @param {!NodeInfo} nodeInfo Node metadata for current template.\n     */\n    static _parseTemplateChildNodes(root, templateInfo, nodeInfo) {\n      for (let node=root.firstChild, parentIndex=0, next; node; node=next) {\n        // Wrap templates\n        if (node.localName == 'template') {\n          node = wrapTemplateExtension(node);\n        }\n        // collapse adjacent textNodes: fixes an IE issue that can cause\n        // text nodes to be inexplicably split =(\n        // note that root.normalize() should work but does not so we do this\n        // manually.\n        next = node.nextSibling;\n        if (node.nodeType === Node.TEXT_NODE) {\n          let /** Node */ n = next;\n          while (n && (n.nodeType === Node.TEXT_NODE)) {\n            node.textContent += n.textContent;\n            next = n.nextSibling;\n            root.removeChild(n);\n            n = next;\n          }\n          // optionally strip whitespace\n          if (templateInfo.stripWhiteSpace && !node.textContent.trim()) {\n            root.removeChild(node);\n            continue;\n          }\n        }\n        let childInfo = { parentIndex, parentInfo: nodeInfo };\n        if (this._parseTemplateNode(node, templateInfo, childInfo)) {\n          childInfo.infoIndex = templateInfo.nodeInfoList.push(/** @type {!NodeInfo} */(childInfo)) - 1;\n        }\n        // Increment if not removed\n        if (node.parentNode) {\n          parentIndex++;\n        }\n      }\n    }\n\n    /**\n     * Parses template content for the given nested `<template>`.\n     *\n     * Nested template info is stored as `templateInfo` in the current node's\n     * `nodeInfo`. `template.content` is removed and stored in `templateInfo`.\n     * It will then be the responsibility of the host to set it back to the\n     * template and for users stamping nested templates to use the\n     * `_contentForTemplate` method to retrieve the content for this template\n     * (an optimization to avoid the cost of cloning nested template content).\n     *\n     * @param {HTMLTemplateElement} node Node to parse (a <template>)\n     * @param {TemplateInfo} outerTemplateInfo Template metadata for current template\n     *   that includes the template `node`\n     * @param {!NodeInfo} nodeInfo Node metadata for current template.\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     */\n    static _parseTemplateNestedTemplate(node, outerTemplateInfo, nodeInfo) {\n      let templateInfo = this._parseTemplate(node, outerTemplateInfo);\n      let content = templateInfo.content =\n        node.content.ownerDocument.createDocumentFragment();\n      content.appendChild(node.content);\n      nodeInfo.templateInfo = templateInfo;\n      return true;\n    }\n\n    /**\n     * Parses template node attributes and adds node metadata to `nodeInfo`\n     * for nodes of interest.\n     *\n     * @param {Element} node Node to parse\n     * @param {TemplateInfo} templateInfo Template metadata for current template\n     * @param {NodeInfo} nodeInfo Node metadata for current template.\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     */\n    static _parseTemplateNodeAttributes(node, templateInfo, nodeInfo) {\n      // Make copy of original attribute list, since the order may change\n      // as attributes are added and removed\n      let noted = false;\n      let attrs = Array.from(node.attributes);\n      for (let i=attrs.length-1, a; (a=attrs[i]); i--) {\n        noted = this._parseTemplateNodeAttribute(node, templateInfo, nodeInfo, a.name, a.value) || noted;\n      }\n      return noted;\n    }\n\n    /**\n     * Parses a single template node attribute and adds node metadata to\n     * `nodeInfo` for attributes of interest.\n     *\n     * This implementation adds metadata for `on-event=\"handler\"` attributes\n     * and `id` attributes.\n     *\n     * @param {Element} node Node to parse\n     * @param {!TemplateInfo} templateInfo Template metadata for current template\n     * @param {!NodeInfo} nodeInfo Node metadata for current template.\n     * @param {string} name Attribute name\n     * @param {string} value Attribute value\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     */\n    static _parseTemplateNodeAttribute(node, templateInfo, nodeInfo, name, value) {\n      // events (on-*)\n      if (name.slice(0, 3) === 'on-') {\n        node.removeAttribute(name);\n        nodeInfo.events = nodeInfo.events || [];\n        nodeInfo.events.push({\n          name: name.slice(3),\n          value\n        });\n        return true;\n      }\n      // static id\n      else if (name === 'id') {\n        nodeInfo.id = value;\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Returns the `content` document fragment for a given template.\n     *\n     * For nested templates, Polymer performs an optimization to cache nested\n     * template content to avoid the cost of cloning deeply nested templates.\n     * This method retrieves the cached content for a given template.\n     *\n     * @param {HTMLTemplateElement} template Template to retrieve `content` for\n     * @return {DocumentFragment} Content fragment\n     */\n    static _contentForTemplate(template) {\n      let templateInfo = /** @type {HTMLTemplateElementWithInfo} */ (template)._templateInfo;\n      return (templateInfo && templateInfo.content) || template.content;\n    }\n\n    /**\n     * Clones the provided template content and returns a document fragment\n     * containing the cloned dom.\n     *\n     * The template is parsed (once and memoized) using this library's\n     * template parsing features, and provides the following value-added\n     * features:\n     * * Adds declarative event listeners for `on-event=\"handler\"` attributes\n     * * Generates an \"id map\" for all nodes with id's under `$` on returned\n     *   document fragment\n     * * Passes template info including `content` back to templates as\n     *   `_templateInfo` (a performance optimization to avoid deep template\n     *   cloning)\n     *\n     * Note that the memoized template parsing process is destructive to the\n     * template: attributes for bindings and declarative event listeners are\n     * removed after being noted in notes, and any nested `<template>.content`\n     * is removed and stored in notes as well.\n     *\n     * @param {!HTMLTemplateElement} template Template to stamp\n     * @return {!StampedTemplate} Cloned template content\n     */\n    _stampTemplate(template) {\n      // Polyfill support: bootstrap the template if it has not already been\n      if (template && !template.content &&\n          window.HTMLTemplateElement && HTMLTemplateElement.decorate) {\n        HTMLTemplateElement.decorate(template);\n      }\n      let templateInfo = this.constructor._parseTemplate(template);\n      let nodeInfo = templateInfo.nodeInfoList;\n      let content = templateInfo.content || template.content;\n      let dom = /** @type DocumentFragment */ (document.importNode(content, true));\n      // NOTE: ShadyDom optimization indicating there is an insertion point\n      dom.__noInsertionPoint = !templateInfo.hasInsertionPoint;\n      let nodes = dom.nodeList = new Array(nodeInfo.length);\n      dom.$ = {};\n      for (let i=0, l=nodeInfo.length, info; (i<l) && (info=nodeInfo[i]); i++) {\n        let node = nodes[i] = findTemplateNode(dom, info);\n        applyIdToMap(this, dom.$, node, info);\n        applyTemplateContent(this, node, info);\n        applyEventListener(this, node, info);\n      }\n      return /** @type {!StampedTemplate} */(dom);\n    }\n\n    /**\n     * Adds an event listener by method name for the event provided.\n     *\n     * This method generates a handler function that looks up the method\n     * name at handling time.\n     *\n     * @param {Node} node Node to add listener on\n     * @param {string} eventName Name of event\n     * @param {string} methodName Name of method\n     * @param {*=} context Context the method will be called on (defaults\n     *   to `node`)\n     * @return {Function} Generated handler function\n     */\n    _addMethodEventListenerToNode(node, eventName, methodName, context) {\n      context = context || node;\n      let handler = createNodeEventHandler(context, eventName, methodName);\n      this._addEventListenerToNode(node, eventName, handler);\n      return handler;\n    }\n\n    /**\n     * Override point for adding custom or simulated event handling.\n     *\n     * @param {Node} node Node to add event listener to\n     * @param {string} eventName Name of event\n     * @param {Function} handler Listener function to add\n     */\n    _addEventListenerToNode(node, eventName, handler) {\n      node.addEventListener(eventName, handler);\n    }\n\n    /**\n     * Override point for adding custom or simulated event handling.\n     *\n     * @param {Node} node Node to remove event listener from\n     * @param {string} eventName Name of event\n     * @param {Function} handler Listener function to remove\n     */\n    _removeEventListenerFromNode(node, eventName, handler) {\n      node.removeEventListener(eventName, handler);\n    }\n\n  }\n\n  return TemplateStamp;\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@polymer/polymer/lib/mixins/template-stamp.js","import './boot.js';\nimport { timeOut } from './async.js';\nimport { Debouncer } from './debounce.js';\n\n// detect native touch action support\nlet HAS_NATIVE_TA = typeof document.head.style.touchAction === 'string';\nlet GESTURE_KEY = '__polymerGestures';\nlet HANDLED_OBJ = '__polymerGesturesHandled';\nlet TOUCH_ACTION = '__polymerGesturesTouchAction';\n// radius for tap and track\nlet TAP_DISTANCE = 25;\nlet TRACK_DISTANCE = 5;\n// number of last N track positions to keep\nlet TRACK_LENGTH = 2;\n\n// Disabling \"mouse\" handlers for 2500ms is enough\nlet MOUSE_TIMEOUT = 2500;\nlet MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'click'];\n// an array of bitmask values for mapping MouseEvent.which to MouseEvent.buttons\nlet MOUSE_WHICH_TO_BUTTONS = [0, 1, 4, 2];\nlet MOUSE_HAS_BUTTONS = (function() {\n  try {\n    return new MouseEvent('test', {buttons: 1}).buttons === 1;\n  } catch (e) {\n    return false;\n  }\n})();\n\n/* eslint no-empty: [\"error\", { \"allowEmptyCatch\": true }] */\n// check for passive event listeners\nlet SUPPORTS_PASSIVE = false;\n(function() {\n  try {\n    let opts = Object.defineProperty({}, 'passive', {get: function() {SUPPORTS_PASSIVE = true;}});\n    window.addEventListener('test', null, opts);\n    window.removeEventListener('test', null, opts);\n  } catch(e) {}\n})();\n\n// Check for touch-only devices\nlet IS_TOUCH_ONLY = navigator.userAgent.match(/iP(?:[oa]d|hone)|Android/);\n\nlet GestureRecognizer = function(){}; // eslint-disable-line no-unused-vars\nGestureRecognizer.prototype.reset = function(){};\n/** @type {function(MouseEvent) | undefined} */\nGestureRecognizer.prototype.mousedown;\n/** @type {(function(MouseEvent) | undefined)} */\nGestureRecognizer.prototype.mousemove;\n/** @type {(function(MouseEvent) | undefined)} */\nGestureRecognizer.prototype.mouseup;\n/** @type {(function(TouchEvent) | undefined)} */\nGestureRecognizer.prototype.touchstart;\n/** @type {(function(TouchEvent) | undefined)} */\nGestureRecognizer.prototype.touchmove;\n/** @type {(function(TouchEvent) | undefined)} */\nGestureRecognizer.prototype.touchend;\n/** @type {(function(MouseEvent) | undefined)} */\nGestureRecognizer.prototype.click;\n\n// touch will make synthetic mouse events\n// `preventDefault` on touchend will cancel them,\n// but this breaks `<input>` focus and link clicks\n// disable mouse handlers for MOUSE_TIMEOUT ms after\n// a touchend to ignore synthetic mouse events\nlet mouseCanceller = function(mouseEvent) {\n  // Check for sourceCapabilities, used to distinguish synthetic events\n  // if mouseEvent did not come from a device that fires touch events,\n  // it was made by a real mouse and should be counted\n  // http://wicg.github.io/InputDeviceCapabilities/#dom-inputdevicecapabilities-firestouchevents\n  let sc = mouseEvent.sourceCapabilities;\n  if (sc && !sc.firesTouchEvents) {\n    return;\n  }\n  // skip synthetic mouse events\n  mouseEvent[HANDLED_OBJ] = {skip: true};\n  // disable \"ghost clicks\"\n  if (mouseEvent.type === 'click') {\n    let path = mouseEvent.composedPath && mouseEvent.composedPath();\n    if (path) {\n      for (let i = 0; i < path.length; i++) {\n        if (path[i] === POINTERSTATE.mouse.target) {\n          return;\n        }\n      }\n    }\n    mouseEvent.preventDefault();\n    mouseEvent.stopPropagation();\n  }\n};\n\n/**\n * @param {boolean=} setup True to add, false to remove.\n */\nfunction setupTeardownMouseCanceller(setup) {\n  let events = IS_TOUCH_ONLY ? ['click'] : MOUSE_EVENTS;\n  for (let i = 0, en; i < events.length; i++) {\n    en = events[i];\n    if (setup) {\n      document.addEventListener(en, mouseCanceller, true);\n    } else {\n      document.removeEventListener(en, mouseCanceller, true);\n    }\n  }\n}\n\nfunction ignoreMouse(e) {\n  if (!POINTERSTATE.mouse.mouseIgnoreJob) {\n    setupTeardownMouseCanceller(true);\n  }\n  let unset = function() {\n    setupTeardownMouseCanceller();\n    POINTERSTATE.mouse.target = null;\n    POINTERSTATE.mouse.mouseIgnoreJob = null;\n  };\n  POINTERSTATE.mouse.target = e.composedPath()[0];\n  POINTERSTATE.mouse.mouseIgnoreJob = Debouncer.debounce(\n        POINTERSTATE.mouse.mouseIgnoreJob\n      , timeOut.after(MOUSE_TIMEOUT)\n      , unset);\n}\n\n/**\n * @param {MouseEvent} ev event to test for left mouse button down\n * @return {boolean} has left mouse button down\n */\nfunction hasLeftMouseButton(ev) {\n  let type = ev.type;\n  // exit early if the event is not a mouse event\n  if (MOUSE_EVENTS.indexOf(type) === -1) {\n    return false;\n  }\n  // ev.button is not reliable for mousemove (0 is overloaded as both left button and no buttons)\n  // instead we use ev.buttons (bitmask of buttons) or fall back to ev.which (deprecated, 0 for no buttons, 1 for left button)\n  if (type === 'mousemove') {\n    // allow undefined for testing events\n    let buttons = ev.buttons === undefined ? 1 : ev.buttons;\n    if ((ev instanceof window.MouseEvent) && !MOUSE_HAS_BUTTONS) {\n      buttons = MOUSE_WHICH_TO_BUTTONS[ev.which] || 0;\n    }\n    // buttons is a bitmask, check that the left button bit is set (1)\n    return Boolean(buttons & 1);\n  } else {\n    // allow undefined for testing events\n    let button = ev.button === undefined ? 0 : ev.button;\n    // ev.button is 0 in mousedown/mouseup/click for left button activation\n    return button === 0;\n  }\n}\n\nfunction isSyntheticClick(ev) {\n  if (ev.type === 'click') {\n    // ev.detail is 0 for HTMLElement.click in most browsers\n    if (ev.detail === 0) {\n      return true;\n    }\n    // in the worst case, check that the x/y position of the click is within\n    // the bounding box of the target of the event\n    // Thanks IE 10 >:(\n    let t = _findOriginalTarget(ev);\n    // make sure the target of the event is an element so we can use getBoundingClientRect,\n    // if not, just assume it is a synthetic click\n    if (!t.nodeType || /** @type {Element} */(t).nodeType !== Node.ELEMENT_NODE) {\n      return true;\n    }\n    let bcr = /** @type {Element} */(t).getBoundingClientRect();\n    // use page x/y to account for scrolling\n    let x = ev.pageX, y = ev.pageY;\n    // ev is a synthetic click if the position is outside the bounding box of the target\n    return !((x >= bcr.left && x <= bcr.right) && (y >= bcr.top && y <= bcr.bottom));\n  }\n  return false;\n}\n\nlet POINTERSTATE = {\n  mouse: {\n    target: null,\n    mouseIgnoreJob: null\n  },\n  touch: {\n    x: 0,\n    y: 0,\n    id: -1,\n    scrollDecided: false\n  }\n};\n\nfunction firstTouchAction(ev) {\n  let ta = 'auto';\n  let path = ev.composedPath && ev.composedPath();\n  if (path) {\n    for (let i = 0, n; i < path.length; i++) {\n      n = path[i];\n      if (n[TOUCH_ACTION]) {\n        ta = n[TOUCH_ACTION];\n        break;\n      }\n    }\n  }\n  return ta;\n}\n\nfunction trackDocument(stateObj, movefn, upfn) {\n  stateObj.movefn = movefn;\n  stateObj.upfn = upfn;\n  document.addEventListener('mousemove', movefn);\n  document.addEventListener('mouseup', upfn);\n}\n\nfunction untrackDocument(stateObj) {\n  document.removeEventListener('mousemove', stateObj.movefn);\n  document.removeEventListener('mouseup', stateObj.upfn);\n  stateObj.movefn = null;\n  stateObj.upfn = null;\n}\n\n// use a document-wide touchend listener to start the ghost-click prevention mechanism\n// Use passive event listeners, if supported, to not affect scrolling performance\ndocument.addEventListener('touchend', ignoreMouse, SUPPORTS_PASSIVE ? {passive: true} : false);\n\nexport const gestures = {};\nexport const recognizers = [];\n\nexport function deepTargetFind(x, y) {\n  let node = document.elementFromPoint(x, y);\n  let next = node;\n  // this code path is only taken when native ShadowDOM is used\n  // if there is a shadowroot, it may have a node at x/y\n  // if there is not a shadowroot, exit the loop\n  while (next && next.shadowRoot && !window.ShadyDOM) {\n    // if there is a node at x/y in the shadowroot, look deeper\n    let oldNext = next;\n    next = next.shadowRoot.elementFromPoint(x, y);\n    // on Safari, elementFromPoint may return the shadowRoot host\n    if (oldNext === next) {\n      break;\n    }\n    if (next) {\n      node = next;\n    }\n  }\n  return node;\n}\n\nexport function _findOriginalTarget(ev) {\n  // shadowdom\n  if (ev.composedPath) {\n    return /** @type {EventTarget} */(ev.composedPath()[0]);\n  }\n  // shadydom\n  return ev.target;\n}\n\nexport function _handleNative(ev) {\n  let handled;\n  let type = ev.type;\n  let node = ev.currentTarget;\n  let gobj = node[GESTURE_KEY];\n  if (!gobj) {\n    return;\n  }\n  let gs = gobj[type];\n  if (!gs) {\n    return;\n  }\n  if (!ev[HANDLED_OBJ]) {\n    ev[HANDLED_OBJ] = {};\n    if (type.slice(0, 5) === 'touch') {\n      ev = /** @type {TouchEvent} */(ev); // eslint-disable-line no-self-assign\n      let t = ev.changedTouches[0];\n      if (type === 'touchstart') {\n        // only handle the first finger\n        if (ev.touches.length === 1) {\n          POINTERSTATE.touch.id = t.identifier;\n        }\n      }\n      if (POINTERSTATE.touch.id !== t.identifier) {\n        return;\n      }\n      if (!HAS_NATIVE_TA) {\n        if (type === 'touchstart' || type === 'touchmove') {\n          _handleTouchAction(ev);\n        }\n      }\n    }\n  }\n  handled = ev[HANDLED_OBJ];\n  // used to ignore synthetic mouse events\n  if (handled.skip) {\n    return;\n  }\n  // reset recognizer state\n  for (let i = 0, r; i < recognizers.length; i++) {\n    r = recognizers[i];\n    if (gs[r.name] && !handled[r.name]) {\n      if (r.flow && r.flow.start.indexOf(ev.type) > -1 && r.reset) {\n        r.reset();\n      }\n    }\n  }\n  // enforce gesture recognizer order\n  for (let i = 0, r; i < recognizers.length; i++) {\n    r = recognizers[i];\n    if (gs[r.name] && !handled[r.name]) {\n      handled[r.name] = true;\n      r[type](ev);\n    }\n  }\n}\n\nexport function _handleTouchAction(ev) {\n  let t = ev.changedTouches[0];\n  let type = ev.type;\n  if (type === 'touchstart') {\n    POINTERSTATE.touch.x = t.clientX;\n    POINTERSTATE.touch.y = t.clientY;\n    POINTERSTATE.touch.scrollDecided = false;\n  } else if (type === 'touchmove') {\n    if (POINTERSTATE.touch.scrollDecided) {\n      return;\n    }\n    POINTERSTATE.touch.scrollDecided = true;\n    let ta = firstTouchAction(ev);\n    let prevent = false;\n    let dx = Math.abs(POINTERSTATE.touch.x - t.clientX);\n    let dy = Math.abs(POINTERSTATE.touch.y - t.clientY);\n    if (!ev.cancelable) {\n      // scrolling is happening\n    } else if (ta === 'none') {\n      prevent = true;\n    } else if (ta === 'pan-x') {\n      prevent = dy > dx;\n    } else if (ta === 'pan-y') {\n      prevent = dx > dy;\n    }\n    if (prevent) {\n      ev.preventDefault();\n    } else {\n      prevent('track');\n    }\n  }\n}\n\nexport function addListener(node, evType, handler) {\n  if (gestures[evType]) {\n    _add(node, evType, handler);\n    return true;\n  }\n  return false;\n}\n\nexport function removeListener(node, evType, handler) {\n  if (gestures[evType]) {\n    _remove(node, evType, handler);\n    return true;\n  }\n  return false;\n}\n\nexport function _add(node, evType, handler) {\n  let recognizer = gestures[evType];\n  let deps = recognizer.deps;\n  let name = recognizer.name;\n  let gobj = node[GESTURE_KEY];\n  if (!gobj) {\n    node[GESTURE_KEY] = gobj = {};\n  }\n  for (let i = 0, dep, gd; i < deps.length; i++) {\n    dep = deps[i];\n    // don't add mouse handlers on iOS because they cause gray selection overlays\n    if (IS_TOUCH_ONLY && MOUSE_EVENTS.indexOf(dep) > -1 && dep !== 'click') {\n      continue;\n    }\n    gd = gobj[dep];\n    if (!gd) {\n      gobj[dep] = gd = {_count: 0};\n    }\n    if (gd._count === 0) {\n      node.addEventListener(dep, _handleNative);\n    }\n    gd[name] = (gd[name] || 0) + 1;\n    gd._count = (gd._count || 0) + 1;\n  }\n  node.addEventListener(evType, handler);\n  if (recognizer.touchAction) {\n    setTouchAction(node, recognizer.touchAction);\n  }\n}\n\nexport function _remove(node, evType, handler) {\n  let recognizer = gestures[evType];\n  let deps = recognizer.deps;\n  let name = recognizer.name;\n  let gobj = node[GESTURE_KEY];\n  if (gobj) {\n    for (let i = 0, dep, gd; i < deps.length; i++) {\n      dep = deps[i];\n      gd = gobj[dep];\n      if (gd && gd[name]) {\n        gd[name] = (gd[name] || 1) - 1;\n        gd._count = (gd._count || 1) - 1;\n        if (gd._count === 0) {\n          node.removeEventListener(dep, _handleNative);\n        }\n      }\n    }\n  }\n  node.removeEventListener(evType, handler);\n}\n\nexport function register(recog) {\n  recognizers.push(recog);\n  for (let i = 0; i < recog.emits.length; i++) {\n    gestures[recog.emits[i]] = recog;\n  }\n}\n\nexport function _findRecognizerByEvent(evName) {\n  for (let i = 0, r; i < recognizers.length; i++) {\n    r = recognizers[i];\n    for (let j = 0, n; j < r.emits.length; j++) {\n      n = r.emits[j];\n      if (n === evName) {\n        return r;\n      }\n    }\n  }\n  return null;\n}\n\nexport function setTouchAction(node, value) {\n  if (HAS_NATIVE_TA) {\n    node.style.touchAction = value;\n  }\n  node[TOUCH_ACTION] = value;\n}\n\nexport function _fire(target, type, detail) {\n  let ev = new Event(type, { bubbles: true, cancelable: true, composed: true });\n  ev.detail = detail;\n  target.dispatchEvent(ev);\n  // forward `preventDefault` in a clean way\n  if (ev.defaultPrevented) {\n    let preventer = detail.preventer || detail.sourceEvent;\n    if (preventer && preventer.preventDefault) {\n      preventer.preventDefault();\n    }\n  }\n}\n\nexport function prevent(evName) {\n  let recognizer = _findRecognizerByEvent(evName);\n  if (recognizer.info) {\n    recognizer.info.prevent = true;\n  }\n}\n\nexport function resetMouseCanceller() {\n  if (POINTERSTATE.mouse.mouseIgnoreJob) {\n    POINTERSTATE.mouse.mouseIgnoreJob.flush();\n  }\n}\n\n/* eslint-disable valid-jsdoc */\n\nregister({\n  name: 'downup',\n  deps: ['mousedown', 'touchstart', 'touchend'],\n  flow: {\n    start: ['mousedown', 'touchstart'],\n    end: ['mouseup', 'touchend']\n  },\n  emits: ['down', 'up'],\n\n  info: {\n    movefn: null,\n    upfn: null\n  },\n\n  /** @this {GestureRecognizer} */\n  reset: function() {\n    untrackDocument(this.info);\n  },\n\n  /**\n   * @this {GestureRecognizer}\n   * @param {MouseEvent} e\n   */\n  mousedown: function(e) {\n    if (!hasLeftMouseButton(e)) {\n      return;\n    }\n    let t = _findOriginalTarget(e);\n    let self = this;\n    let movefn = function movefn(e) {\n      if (!hasLeftMouseButton(e)) {\n        self._fire('up', t, e);\n        untrackDocument(self.info);\n      }\n    };\n    let upfn = function upfn(e) {\n      if (hasLeftMouseButton(e)) {\n        self._fire('up', t, e);\n      }\n      untrackDocument(self.info);\n    };\n    trackDocument(this.info, movefn, upfn);\n    this._fire('down', t, e);\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   */\n  touchstart: function(e) {\n    this._fire('down', _findOriginalTarget(e), e.changedTouches[0], e);\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   */\n  touchend: function(e) {\n    this._fire('up', _findOriginalTarget(e), e.changedTouches[0], e);\n  },\n  /**\n   * @param {string} type\n   * @param {EventTarget} target\n   * @param {Event} event\n   * @param {Function} preventer\n   */\n  _fire: function(type, target, event, preventer) {\n    _fire(target, type, {\n      x: event.clientX,\n      y: event.clientY,\n      sourceEvent: event,\n      preventer: preventer,\n      prevent: function(e) {\n        return prevent(e);\n      }\n    });\n  }\n});\n\nregister({\n  name: 'track',\n  touchAction: 'none',\n  deps: ['mousedown', 'touchstart', 'touchmove', 'touchend'],\n  flow: {\n    start: ['mousedown', 'touchstart'],\n    end: ['mouseup', 'touchend']\n  },\n  emits: ['track'],\n\n  info: {\n    x: 0,\n    y: 0,\n    state: 'start',\n    started: false,\n    moves: [],\n    /** @this {GestureRecognizer} */\n    addMove: function(move) {\n      if (this.moves.length > TRACK_LENGTH) {\n        this.moves.shift();\n      }\n      this.moves.push(move);\n    },\n    movefn: null,\n    upfn: null,\n    prevent: false\n  },\n\n  /** @this {GestureRecognizer} */\n  reset: function() {\n    this.info.state = 'start';\n    this.info.started = false;\n    this.info.moves = [];\n    this.info.x = 0;\n    this.info.y = 0;\n    this.info.prevent = false;\n    untrackDocument(this.info);\n  },\n\n  /**\n   * @this {GestureRecognizer}\n   * @param {number} x\n   * @param {number} y\n   * @return {boolean}\n   */\n  hasMovedEnough: function(x, y) {\n    if (this.info.prevent) {\n      return false;\n    }\n    if (this.info.started) {\n      return true;\n    }\n    let dx = Math.abs(this.info.x - x);\n    let dy = Math.abs(this.info.y - y);\n    return (dx >= TRACK_DISTANCE || dy >= TRACK_DISTANCE);\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {MouseEvent} e\n   */\n  mousedown: function(e) {\n    if (!hasLeftMouseButton(e)) {\n      return;\n    }\n    let t = _findOriginalTarget(e);\n    let self = this;\n    let movefn = function movefn(e) {\n      let x = e.clientX, y = e.clientY;\n      if (self.hasMovedEnough(x, y)) {\n        // first move is 'start', subsequent moves are 'move', mouseup is 'end'\n        self.info.state = self.info.started ? (e.type === 'mouseup' ? 'end' : 'track') : 'start';\n        if (self.info.state === 'start') {\n          // if and only if tracking, always prevent tap\n          prevent('tap');\n        }\n        self.info.addMove({x: x, y: y});\n        if (!hasLeftMouseButton(e)) {\n          // always _fire \"end\"\n          self.info.state = 'end';\n          untrackDocument(self.info);\n        }\n        self._fire(t, e);\n        self.info.started = true;\n      }\n    };\n    let upfn = function upfn(e) {\n      if (self.info.started) {\n        movefn(e);\n      }\n\n      // remove the temporary listeners\n      untrackDocument(self.info);\n    };\n    // add temporary document listeners as mouse retargets\n    trackDocument(this.info, movefn, upfn);\n    this.info.x = e.clientX;\n    this.info.y = e.clientY;\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   */\n  touchstart: function(e) {\n    let ct = e.changedTouches[0];\n    this.info.x = ct.clientX;\n    this.info.y = ct.clientY;\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   */\n  touchmove: function(e) {\n    let t = _findOriginalTarget(e);\n    let ct = e.changedTouches[0];\n    let x = ct.clientX, y = ct.clientY;\n    if (this.hasMovedEnough(x, y)) {\n      if (this.info.state === 'start') {\n        // if and only if tracking, always prevent tap\n        prevent('tap');\n      }\n      this.info.addMove({x: x, y: y});\n      this._fire(t, ct);\n      this.info.state = 'track';\n      this.info.started = true;\n    }\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   */\n  touchend: function(e) {\n    let t = _findOriginalTarget(e);\n    let ct = e.changedTouches[0];\n    // only trackend if track was started and not aborted\n    if (this.info.started) {\n      // reset started state on up\n      this.info.state = 'end';\n      this.info.addMove({x: ct.clientX, y: ct.clientY});\n      this._fire(t, ct, e);\n    }\n  },\n\n  /**\n   * @this {GestureRecognizer}\n   * @param {EventTarget} target\n   * @param {Touch} touch\n   */\n  _fire: function(target, touch) {\n    let secondlast = this.info.moves[this.info.moves.length - 2];\n    let lastmove = this.info.moves[this.info.moves.length - 1];\n    let dx = lastmove.x - this.info.x;\n    let dy = lastmove.y - this.info.y;\n    let ddx, ddy = 0;\n    if (secondlast) {\n      ddx = lastmove.x - secondlast.x;\n      ddy = lastmove.y - secondlast.y;\n    }\n    _fire(target, 'track', {\n      state: this.info.state,\n      x: touch.clientX,\n      y: touch.clientY,\n      dx: dx,\n      dy: dy,\n      ddx: ddx,\n      ddy: ddy,\n      sourceEvent: touch,\n      hover: function() {\n        return deepTargetFind(touch.clientX, touch.clientY);\n      }\n    });\n  }\n\n});\n\nregister({\n  name: 'tap',\n  deps: ['mousedown', 'click', 'touchstart', 'touchend'],\n  flow: {\n    start: ['mousedown', 'touchstart'],\n    end: ['click', 'touchend']\n  },\n  emits: ['tap'],\n  info: {\n    x: NaN,\n    y: NaN,\n    prevent: false\n  },\n  /** @this {GestureRecognizer} */\n  reset: function() {\n    this.info.x = NaN;\n    this.info.y = NaN;\n    this.info.prevent = false;\n  },\n  /** @this {GestureRecognizer} */\n  save: function(e) {\n    this.info.x = e.clientX;\n    this.info.y = e.clientY;\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {MouseEvent} e\n   */\n  mousedown: function(e) {\n    if (hasLeftMouseButton(e)) {\n      this.save(e);\n    }\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {MouseEvent} e\n   */\n  click: function(e) {\n    if (hasLeftMouseButton(e)) {\n      this.forward(e);\n    }\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   */\n  touchstart: function(e) {\n    this.save(e.changedTouches[0], e);\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   */\n  touchend: function(e) {\n    this.forward(e.changedTouches[0], e);\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {Event | Touch} e\n   * @param {Event=} preventer\n   */\n  forward: function(e, preventer) {\n    let dx = Math.abs(e.clientX - this.info.x);\n    let dy = Math.abs(e.clientY - this.info.y);\n    // find original target from `preventer` for TouchEvents, or `e` for MouseEvents\n    let t = _findOriginalTarget((preventer || e));\n    // dx,dy can be NaN if `click` has been simulated and there was no `down` for `start`\n    if (isNaN(dx) || isNaN(dy) || (dx <= TAP_DISTANCE && dy <= TAP_DISTANCE) || isSyntheticClick(e)) {\n      // prevent taps from being generated if an event has canceled them\n      if (!this.info.prevent) {\n        _fire(t, 'tap', {\n          x: e.clientX,\n          y: e.clientY,\n          sourceEvent: e,\n          preventer: preventer\n        });\n      }\n    }\n  }\n});\n\nexport const findOriginalTarget = _findOriginalTarget;\nexport const add = addListener;\nexport const remove = removeListener;\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@polymer/polymer/lib/utils/gestures.js","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/lodash-es/_baseGetTag.js","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/lodash-es/_root.js","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/lodash-es/_freeGlobal.js","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/lodash-es/_getRawTag.js","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/lodash-es/_objectToString.js","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/lodash-es/_getPrototype.js","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/lodash-es/_overArg.js","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/lodash-es/isObjectLike.js","module.exports = require('./lib/index');\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/symbol-observable/index.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ponyfill = require('./ponyfill');\n\nvar _ponyfill2 = _interopRequireDefault(_ponyfill);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar root; /* global window */\n\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = (0, _ponyfill2['default'])(root);\nexports['default'] = result;\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/symbol-observable/lib/index.js","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// (webpack)/buildin/module.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports['default'] = symbolObservablePonyfill;\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar _Symbol = root.Symbol;\n\n\tif (typeof _Symbol === 'function') {\n\t\tif (_Symbol.observable) {\n\t\t\tresult = _Symbol.observable;\n\t\t} else {\n\t\t\tresult = _Symbol('observable');\n\t\t\t_Symbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/symbol-observable/lib/ponyfill.js","import { ActionTypes } from './createStore';\nimport isPlainObject from 'lodash-es/isPlainObject';\nimport warning from './utils/warning';\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionName = actionType && '\"' + actionType.toString() + '\"' || 'an action';\n\n  return 'Given action ' + actionName + ', reducer \"' + key + '\" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return 'The ' + argumentName + ' has unexpected type of \"' + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + '\". Expected argument to be an object with the following ' + ('keys: \"' + reducerKeys.join('\", \"') + '\"');\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n\n  if (unexpectedKeys.length > 0) {\n    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('\"' + unexpectedKeys.join('\", \"') + '\" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('\"' + reducerKeys.join('\", \"') + '\". Unexpected keys will be ignored.');\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, { type: ActionTypes.INIT });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');\n    }\n\n    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');\n    if (typeof reducer(undefined, { type: type }) === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined when probed with a random type. ' + ('Don\\'t try to handle ' + ActionTypes.INIT + ' or other actions in \"redux/*\" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');\n    }\n  });\n}\n\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\nexport default function combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning('No reducer provided for key \"' + key + '\"');\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n  var finalReducerKeys = Object.keys(finalReducers);\n\n  var unexpectedKeyCache = void 0;\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError = void 0;\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments[1];\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/redux/es/combineReducers.js","function bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(undefined, arguments));\n  };\n}\n\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass a single function as the first argument,\n * and get a function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\nexport default function bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');\n  }\n\n  var keys = Object.keys(actionCreators);\n  var boundActionCreators = {};\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var actionCreator = actionCreators[key];\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n  return boundActionCreators;\n}\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/redux/es/bindActionCreators.js","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport compose from './compose';\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\nexport default function applyMiddleware() {\n  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function (reducer, preloadedState, enhancer) {\n      var store = createStore(reducer, preloadedState, enhancer);\n      var _dispatch = store.dispatch;\n      var chain = [];\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch(action) {\n          return _dispatch(action);\n        }\n      };\n      chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(undefined, chain)(store.dispatch);\n\n      return _extends({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/redux/es/applyMiddleware.js","import { get } from '@polymer/polymer/lib/utils/path';\n\n/**\n * Polymer Redux\n *\n * Creates a Class mixin for decorating Elements with a given Redux store.\n *\n * @polymerMixin\n *\n * @param {Object} store Redux store.\n * @return {Function} Class mixin.\n */\nexport default function PolymerRedux (store) {\n  if (!store) {\n    throw new TypeError('PolymerRedux: expecting a redux store.');\n  } else if (!['getState', 'dispatch', 'subscribe'].every(k => typeof store[k] === 'function')) {\n    throw new TypeError('PolymerRedux: invalid store object.');\n  }\n\n  const subscribers = new Map();\n\n  /**\n   * Binds element's properties to state changes from the Redux store.\n   *\n   * @example\n   *     const update = bind(el, props) // set bindings\n   *     update(state) // manual update\n   *\n   * @private\n   * @param {HTMLElement} element\n   * @param {Object} properties\n   * @return {Function} Update function.\n   */\n  const bind = (element, properties) => {\n    const bindings = Object.keys(properties)\n      .filter(name => {\n        const property = properties[name];\n        if (Object.prototype.hasOwnProperty.call(property, 'statePath')) {\n          if (!property.readOnly && property.notify) {\n            console.warn(`PolymerRedux: <${element.constructor.is}>.${name} has \"notify\" enabled, two-way bindings goes against Redux's paradigm`);\n          }\n          return true;\n        }\n        return false;\n      });\n\n    /**\n     * Updates an element's properties with the given state.\n     *\n     * @private\n     * @param {Object} state\n     */\n    const update = state => {\n      let propertiesChanged = false;\n      bindings.forEach(name => { // Perhaps .reduce() to a boolean?\n        const {statePath} = properties[name];\n        const value = (typeof statePath === 'function')\n          ? statePath.call(element, state)\n          : get(state, statePath);\n\n        const changed = element._setPendingPropertyOrPath(name, value, true);\n        propertiesChanged = propertiesChanged || changed;\n      });\n      if (propertiesChanged) {\n        element._invalidateProperties();\n      }\n    };\n\n    // Redux listener\n    const unsubscribe = store.subscribe(() => {\n      const detail = store.getState();\n      update(detail);\n\n      element.dispatchEvent(new window.CustomEvent('state-changed', {detail}));\n    });\n\n    subscribers.set(element, unsubscribe);\n\n    return update(store.getState());\n  };\n\n  /**\n   * Unbinds an element from state changes in the Redux store.\n   *\n   * @private\n   * @param {HTMLElement} element\n   */\n  const unbind = element => {\n    const off = subscribers.get(element);\n    if (typeof off === 'function') {\n      off();\n    }\n  };\n\n  /**\n   * Merges a property's object value using the defaults way.\n   *\n   * @private\n   * @param {Object} what Initial prototype\n   * @param {String} which Property to collect.\n   * @return {Object} the collected values\n   */\n  const collect = (what, which) => {\n    let res = {};\n    while (what) {\n      res = Object.assign({}, what[which], res); // Respect prototype priority\n      what = Object.getPrototypeOf(what);\n    }\n    return res;\n  };\n\n  /**\n   * ReduxMixin\n   *\n   * @example\n   *     const ReduxMixin = PolymerRedux(store)\n   *     class Foo extends ReduxMixin(Polymer.Element) { }\n   *\n   * @polymerMixinClass\n   *\n   * @param {Polymer.Element} parent The polymer parent element.\n   * @return {Function} PolymerRedux mixed class.\n   */\n  return parent => class ReduxMixin extends parent {\n    constructor () {\n      super();\n\n      // Collect the action creators first as property changes trigger\n      // dispatches from observers, see #65, #66, #67\n      const actions = collect(this.constructor, 'actions');\n      Object.defineProperty(this, '_reduxActions', {\n        configurable: true,\n        value: actions\n      });\n    }\n\n    connectedCallback () {\n      super.connectedCallback();\n      const properties = collect(this.constructor, 'properties');\n      bind(this, properties);\n    }\n\n    disconnectedCallback () {\n      super.disconnectedCallback();\n      unbind(this);\n    }\n\n    /**\n     * Dispatches an action to the Redux store.\n     *\n     * @example\n     *     element.dispatch({ type: 'ACTION' })\n     *\n     * @example\n     *     element.dispatch('actionCreator', 'foo', 'bar')\n     *\n     * @example\n     *     element.dispatch((dispatch) => {\n     *         dispatch({ type: 'MIDDLEWARE'})\n     *     })\n     *\n     * @param  {...*} args\n     * @return {Object} The action.\n     */\n    dispatch (...args) {\n      const actions = this._reduxActions;\n\n      // Action creator\n      let [action] = args;\n      if (typeof action === 'string') {\n        if (typeof actions[action] !== 'function') {\n          throw new TypeError(`PolymerRedux: <${this.constructor.is}> invalid action creator \"${action}\"`);\n        }\n        action = actions[action](...args.slice(1));\n      }\n\n      // Proxy async dispatch\n      if (typeof action === 'function') {\n        const originalAction = action;\n        action = (...args) => {\n          // Replace redux dispatch\n          args.splice(0, 1, (...args) => {\n            return this.dispatch(...args);\n          });\n          return originalAction(...args);\n        };\n\n        // Copy props from the original action to the proxy.\n        // see https://github.com/tur-nr/polymer-redux/issues/98\n        Object.keys(originalAction).forEach(prop => {\n          action[prop] = originalAction[prop];\n        });\n      }\n\n      return store.dispatch(action);\n    }\n\n    /**\n     * Gets the current state in the Redux store.\n     *\n     * @return {*}\n     */\n    getState () {\n      return store.getState();\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@littleq/state-manager/mixins/polymer-redux.js","import './littleq-router';\nimport './littleq-route';\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@littleq/littleq-router/index.js","import { Element } from '@polymer/polymer/polymer-element';\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce';\nimport { timeOut } from '@polymer/polymer/lib/utils/async';\nimport { ReduxMixin } from '@littleq/state-manager';\nimport { customElements, alert } from 'global/window';\nimport { ROUTER_ACTION } from './lib/reducer';\nimport getAnimationEvent from './lib/get-animation-event';\nimport pathToRegexp from 'path-to-regexp';\nimport LocationMixin from '@littleq/location-mixin';\nimport QueryParamsMixin from '@littleq/query-params-mixin';\n\nclass LittleqRouter extends ReduxMixin(QueryParamsMixin(LocationMixin(Element))) {\n  static get is () { return 'littleq-router'; }\n\n  static get template () {\n    return `\n    <style>\n      ::slotted(.animated) {\n        animation-duration: 0.3s;\n        animation-fill-mode: both;\n      }\n\n      ::slotted(*) > .animated {\n        animation-duration: 1s;\n        animation-fill-mode: both;\n      }\n\n      ::slotted(.fadeOut) {\n        animation-name: fadeOut;\n      }\n\n      ::slotted(*) > .fadeOut {\n        animation-name: fadeOut;\n      }\n\n      ::slotted(.fadeIn) {\n        animation-name: fadeIn;\n      }\n\n      ::slotted(*) > .fadeIn {\n        animation-name: fadeIn;\n      }\n    </style>\n    <main role=\"main\">\n      <slot name=\"page\"></slot>\n    </main>\n    `;\n  }\n\n  static get properties () {\n    return {\n      defaultRedirect: {\n        type: String\n      },\n\n      params: {\n        type: Object,\n        statePath: 'router.params'\n      },\n\n      currentRoute: {\n        type: String,\n        statePath: 'router.route'\n      }\n    };\n  }\n\n  constructor () {\n    super();\n    this._setKeyframeStyles();\n    this._getLazyLoader();\n  }\n\n  static get observers () {\n    return [\n      '_checkPathRouteIfExists(path, currentRoute)'\n    ];\n  }\n\n  _setKeyframeStyles () {\n    const style = document.createElement('style');\n    style.id = 'littlq-router-animation-styles';\n    style.innerHTML = `\n      @keyframes fadeOut {\n        from {\n          opacity: 1;\n        }\n\n        to {\n          opacity: 0;\n        }\n      }\n\n      @keyframes fadeIn {\n        from {\n          opacity: 0;\n        }\n\n        to {\n          opacity: 1;\n        }\n      }\n    `;\n    if (!document.querySelector('#littlq-router-animation-styles')) document.head.appendChild(style);\n  }\n\n  _getLazyLoader () {\n    const lazy = this.getAttribute('lazy-loader') || 'lazy-loader';\n    this._lazyLoader = document.querySelector(lazy);\n    if (!this._lazyLoader) console.warn('will not be able to lazy load components without the lazy-loader tag. Install lazy-loader tag');\n  }\n\n  /**\n   * Check path and route if it matches. Because the matching happens in the routes\n   * themselves, it will wait for 200 milliseconds before showing the default, which\n   * is the not-found route.\n   *\n   * @param {any} path\n   * @param {any} route\n   * @memberof LittleqRouter\n   */\n  _checkPathRouteIfExists (path, route) {\n    this._debouncer = Debouncer.debounce(\n      this._debouncer,\n      timeOut.after(200),\n      () => {\n        const keys = [];\n        const re = pathToRegexp(route || '', keys);\n        const exec = re.exec(path);\n        if (!exec) {\n          this.dispatch({\n            type: ROUTER_ACTION.ROUTE,\n            route: 'not-found'\n          });\n        }\n      }\n    );\n  }\n\n  _removePageAfterTransition (oldPage, route, transition, fn) {\n    if (this._timeOut) clearTimeout(this._timeOut);\n    if (transition && fn) oldPage.removeEventListener(transition, fn);\n    if (this.contains(oldPage)) this.removeChild(oldPage);\n    this._checkMiddlewares(route);\n  }\n\n  _removePageListenerFallback (oldPage, route, transition) {\n    this._timeOut = setTimeout(() => {\n      this._removePageAfterTransition(oldPage, route, transition);\n    }, 550);\n    const fn = () => {\n      this._removePageAfterTransition(oldPage, route, transition, fn);\n    };\n    oldPage.addEventListener(transition, fn);\n  }\n\n  _removePage (oldPage, route) {\n    const animation = getAnimationEvent(oldPage);\n    oldPage.classList.remove('fadeIn');\n    !animation ? this._removePageAfterTransition(oldPage, route) : this._removePageListenerFallback(oldPage, route, animation);\n    oldPage.classList.add('animated');\n    oldPage.classList.add('fadeOut');\n  }\n\n  _getMiddlewares (parent, middlewares = []) {\n    for (let i = 0; i < parent.children.length; i++) {\n      let child = parent.children[i];\n      this._addMiddleware(!customElements.get(child.tagName.toLowerCase()) ? this._lazyLoadMiddleware(child) : this._getMiddleware(child), middlewares);\n    }\n    return parent.tagName.toLowerCase() === 'littleq-router' || !parent.parentNode ? middlewares : this._getMiddlewares(parent.parentNode, middlewares);\n  }\n\n  _addMiddleware (middleware, middlewares) {\n    if (middleware !== undefined) {\n      middleware instanceof Promise ? middlewares.push(middleware) : middlewares.push(Promise.resolve(middleware));\n    }\n  }\n\n  _getMiddleware (middleware) {\n    if (typeof middleware.middleware === 'function' && middleware.tagName.toLowerCase() !== 'littleq-route') return middleware.middleware();\n  }\n\n  _lazyLoadMiddleware (middleware) {\n    return this._lazyLoader.import(middleware.tagName.toLowerCase())\n      .then(() => {\n        return this._getMiddleware(middleware);\n      })\n      .catch(e => {\n        console.error(e);\n        alert(e.message);\n        return false;\n        // if (this.currentRoute !== 'not-found') {\n        //   this.dispatch({\n        //     type: ROUTER_ACTION.ROUTE,\n        //     route: 'not-found'\n        //   });\n        // }\n      });\n  }\n\n  _processMiddlewares (page, redirect, middlewares) {\n    middlewares.reduce((middleware, prev) => (prev && middleware && typeof middleware === 'boolean')) ? this._loadPage(page) : this._loadRedirect(redirect);\n  }\n\n  _loadRedirect (redirect) {\n    redirect ? this._loadPage(redirect) : this._loadDefaultRedirect();\n  }\n\n  _loadDefaultRedirect () {\n    const redirect = this.defaultRedirect ? document.createElement(this.defaultRedirect) : null;\n    redirect\n      ? this._loadPage(redirect)\n      : this.dispatch({\n        type: ROUTER_ACTION.ROUTE,\n        route: 'not-found'\n      });\n  }\n\n  _checkMiddlewares (route) {\n    if (this.querySelector('[slot=\"page\"]')) this.removeChild(this.querySelector('[slot=\"page\"]'));\n    const middlewares = this._getMiddlewares(route);\n    const page = document.createElement(route.page);\n    const redirect = route.redirect ? document.createElement(route.redirect) : null;\n    middlewares.length ? Promise.all(middlewares).then(this._processMiddlewares.bind(this, page, redirect)) : this._loadPage(page);\n  }\n\n  _loadPage (page) {\n    !customElements.get(page.tagName.toLowerCase()) ? this._lazyLoadPage(page) : this._showPage(page);\n  }\n\n  _lazyLoadPage (page) {\n    this._lazyLoader.import(page.tagName.toLowerCase())\n      .then(() => {\n        this._showPage(page);\n      })\n      .catch(e => {\n        if (this.currentRoute !== 'not-found') {\n          this.dispatch({\n            type: ROUTER_ACTION.ROUTE,\n            route: 'not-found'\n          });\n        }\n      });\n  }\n\n  _showPage (page) {\n    page.setAttribute('slot', 'page');\n    page.classList.add('animated');\n    page.classList.add('fadeIn');\n    this.appendChild(page);\n\n    if (window.ga) {\n      ga('set', 'page', this.path)\n      ga('send', 'pageview')\n    }\n  }\n}\n\n!customElements.get(LittleqRouter.is)\n  ? customElements.define(LittleqRouter.is, LittleqRouter)\n  : console.warn(`${LittleqRouter.is} is already defined`);\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@littleq/littleq-router/littleq-router.js","/* From Modernizr */\nexport default (el) => {\n  const animations = {\n    'animation': 'animationend',\n    'OAnimation': 'oAnimationEnd',\n    'MozAnimation': 'animationend',\n    'WebkitAnimation': 'webkitAnimationEnd'\n  };\n\n  for (var t in animations) {\n    if (el.style[t] !== undefined) {\n      return animations[t];\n    }\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@littleq/littleq-router/lib/get-animation-event.js","import { reducers, store } from '@littleq/state-manager';\nimport { combineReducers } from 'redux';\n\nconst LOCATION_ACTION = {\n  PATH: 'LOCATION_UPDATE_PATH',\n  QUERY: 'LOCATION_UPDATE_QUERY',\n  HASH: 'LOCATION_UPDATE_HASH'\n};\n\nreducers.location = (location = {}, action) => {\n  switch (action.type) {\n    case LOCATION_ACTION.PATH:\n      return Object.assign({}, location, {\n        path: action.path\n      });\n    case LOCATION_ACTION.QUERY:\n      return Object.assign({}, location, {\n        query: action.query\n      });\n    case LOCATION_ACTION.HASH:\n      return Object.assign({}, location, {\n        hash: action.query\n      });\n    default:\n      return location;\n  }\n};\n\nstore.replaceReducer(combineReducers(reducers));\n\nexport { LOCATION_ACTION };\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@littleq/location-mixin/lib/reducer.js","import { URL } from 'global/window';\nvar workingURL;\nvar urlDoc, urlBase, anchor;\n\n/**\n * @param {string} path\n * @param {string=} base\n * @return {!URL|!HTMLAnchorElement}\n */\nexport default (path, base) => {\n  if (workingURL === undefined) {\n    workingURL = false;\n    try {\n      var u = new URL('b', 'http://a');\n      u.pathname = 'c%20d';\n      workingURL = (u.href === 'http://a/c%20d');\n      workingURL = workingURL && (new URL('http://www.google.com/?foo bar').href === 'http://www.google.com/?foo%20bar');\n    } catch (e) {}\n  }\n  if (workingURL) {\n    return new URL(path, base);\n  }\n  if (!urlDoc) {\n    urlDoc = document.implementation.createHTMLDocument('url');\n    urlBase = urlDoc.createElement('base');\n    urlDoc.head.appendChild(urlBase);\n    anchor = /** @type {HTMLAnchorElement} */(urlDoc.createElement('a'));\n  }\n  urlBase.href = base;\n  anchor.href = path.replace(/ /g, '%20');\n  return anchor;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@littleq/location-mixin/lib/resolve-url.js","import { reducers, store, ReduxMixin } from '@littleq/state-manager';\nimport { combineReducers } from 'redux';\n\nconst QUERYPARAMS_ACTION = {\n  UPDATE: 'QUERYPARAMS_UPDATE'\n};\n\nreducers.query = (query = {}, action) => {\n  switch (action.type) {\n    case QUERYPARAMS_ACTION.UPDATE:\n      return Object.assign({}, query, {\n        params: action.params\n      });\n    default:\n      return query;\n  }\n};\n\nstore.replaceReducer(combineReducers(reducers));\n\nexport { QUERYPARAMS_ACTION };\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@littleq/query-params-mixin/lib/reducer.js","import { Element } from '@polymer/polymer/polymer-element';\nimport { ReduxMixin } from '@littleq/state-manager';\nimport LocationMixin from '@littleq/location-mixin';\nimport QueryParamsMixin from '@littleq/query-params-mixin';\nimport pathToRegexp from 'path-to-regexp';\nimport { customElements } from 'global/window';\nimport { ROUTER_ACTION } from './lib/reducer';\nimport getRoutes from './lib/get-routes';\n\nclass LittleqRoute extends ReduxMixin(QueryParamsMixin(LocationMixin(Element))) {\n  static get is () { return 'littleq-route'; }\n\n  static get properties () {\n    return {\n      page: {\n        type: String\n      },\n\n      redirect: {\n        type: String\n      },\n\n      route: {\n        type: String,\n        value: 'not-found'\n      },\n\n      params: {\n        type: Object,\n        statePath: 'router.params'\n      },\n\n      currentRoute: {\n        type: String,\n        observer: '_checkRoute',\n        statePath: 'router.route'\n      }\n    };\n  }\n\n  _processPage () {\n    let router = this;\n    do {\n      router = router.parentNode;\n    } while (router.tagName.toLowerCase() !== 'littleq-router');\n    const page = router.querySelector('[slot=\"page\"]');\n    page ? router._removePage(page, this) : router._checkMiddlewares(this);\n  }\n\n  _checkRoute (route) {\n    if (route === getRoutes(this)) this._processPage();\n  }\n\n  _routeMatches (route, exec, keys) {\n    const params = {};\n    keys.forEach((key, index) => {\n      const { name } = key;\n      params[name] = exec[index + 1] || null;\n    });\n\n    this.dispatch({\n      type: ROUTER_ACTION.PARAMS,\n      params\n    });\n\n    this.dispatch({\n      type: ROUTER_ACTION.ROUTE,\n      route\n    });\n  }\n\n  _checkIfRouteMatches (path) {\n    const route = getRoutes(this);\n    const keys = [];\n    const re = pathToRegexp(route, keys);\n    const exec = re.exec(path);\n    if (exec) this._routeMatches(route, exec, keys);\n  }\n\n  _pathChanged (path) {\n    path = path.replace(/index\\.html$/, '');\n    if (this.route) this._checkIfRouteMatches(path);\n  }\n}\n\n!customElements.get(LittleqRoute.is)\n  ? customElements.define(LittleqRoute.is, LittleqRoute)\n  : console.warn(`${LittleqRoute.is} is already defined`);\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@littleq/littleq-router/littleq-route.js","const getRoutes = (el, route = '') => {\n  route = el.route + route;\n  return el.parentNode && el.parentNode.tagName.toLowerCase() === 'littleq-route' ? getRoutes(el.parentNode, route) : route;\n};\n\nexport default getRoutes;\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@littleq/littleq-router/lib/get-routes.js","import '../utils/boot.js';\nimport { dedupingMixin } from '../utils/mixin.js';\nimport * as gestures$0 from '../utils/gestures.js';\n\n/**\n * @const {Polymer.Gestures}\n */\nconst gestures = gestures$0;\n\nexport const GestureEventListeners = dedupingMixin(superClass => {\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_GestureEventListeners}\n   */\n  class GestureEventListeners extends superClass {\n\n    _addEventListenerToNode(node, eventName, handler) {\n      if (!gestures.addListener(node, eventName, handler)) {\n        super._addEventListenerToNode(node, eventName, handler);\n      }\n    }\n\n    _removeEventListenerFromNode(node, eventName, handler) {\n      if (!gestures.removeListener(node, eventName, handler)) {\n        super._removeEventListenerFromNode(node, eventName, handler);\n      }\n    }\n\n  }\n\n  return GestureEventListeners;\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@polymer/polymer/lib/mixins/gesture-event-listeners.js","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/css-loader/lib/css-base.js"],"sourceRoot":""}