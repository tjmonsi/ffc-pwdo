{"version":3,"sources":["webpack:///fetch.js","webpack:///webpack/bootstrap d438a977f193f4d27dbf","webpack:///./app/system/core/polyfills/fetch.js","webpack:///./app/node_modules/whatwg-fetch/fetch.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","87","88","self","normalizeName","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","support","iterable","Symbol","Headers","headers","this","map","forEach","append","Array","isArray","header","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","length","fromCharCode","join","bufferClone","slice","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","toString","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","Error","type","rejected","then","text","decode","json","JSON","parse","normalizeMethod","method","upcased","toUpperCase","methods","indexOf","Request","input","options","url","credentials","mode","referrer","form","trim","split","bytes","replace","decodeURIComponent","parseHeaders","rawHeaders","line","parts","key","Response","bodyInit","status","ok","statusText","fetch","e","viewClasses","obj","DataView","isView","oldValue","has","callback","thisArg","keys","push","values","entries","clone","response","redirectStatuses","redirect","RangeError","location","init","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill"],"mappings":"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","file":"fetch.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 87);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 87:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n__webpack_require__(88);\n\n/***/ }),\n\n/***/ 88:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n(function (self) {\n  'use strict';\n\n  if (self.fetch) {\n    return;\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && function () {\n      try {\n        new Blob();\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  if (support.arrayBuffer) {\n    var viewClasses = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]'];\n\n    var isDataView = function isDataView(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj);\n    };\n\n    var isArrayBufferView = ArrayBuffer.isView || function (obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;\n    };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name');\n    }\n    return name.toLowerCase();\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value;\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function next() {\n        var value = items.shift();\n        return { done: value === undefined, value: value };\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function () {\n        return iterator;\n      };\n    }\n\n    return iterator;\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function (value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function (header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function (name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function (name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ',' + value : value;\n  };\n\n  Headers.prototype['delete'] = function (name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function (name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null;\n  };\n\n  Headers.prototype.has = function (name) {\n    return this.map.hasOwnProperty(normalizeName(name));\n  };\n\n  Headers.prototype.set = function (name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function (callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function () {\n    var items = [];\n    this.forEach(function (value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items);\n  };\n\n  Headers.prototype.values = function () {\n    var items = [];\n    this.forEach(function (value) {\n      items.push(value);\n    });\n    return iteratorFor(items);\n  };\n\n  Headers.prototype.entries = function () {\n    var items = [];\n    this.forEach(function (value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items);\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'));\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function (resolve, reject) {\n      reader.onload = function () {\n        resolve(reader.result);\n      };\n      reader.onerror = function () {\n        reject(reader.error);\n      };\n    });\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise;\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise;\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('');\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0);\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer;\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function (body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        throw new Error('unsupported BodyInit type');\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function () {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected;\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob);\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]));\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob');\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]));\n        }\n      };\n\n      this.arrayBuffer = function () {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer);\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer);\n        }\n      };\n    }\n\n    this.text = function () {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected;\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob);\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text');\n      } else {\n        return Promise.resolve(this._bodyText);\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function () {\n        return this.text().then(decode);\n      };\n    }\n\n    this.json = function () {\n      return this.text().then(JSON.parse);\n    };\n\n    return this;\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method;\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read');\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests');\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function () {\n    return new Request(this, { body: this._bodyInit });\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body.trim().split('&').forEach(function (bytes) {\n      if (bytes) {\n        var split = bytes.split('=');\n        var name = split.shift().replace(/\\+/g, ' ');\n        var value = split.join('=').replace(/\\+/g, ' ');\n        form.append(decodeURIComponent(name), decodeURIComponent(value));\n      }\n    });\n    return form;\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    rawHeaders.split(/\\r?\\n/).forEach(function (line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers;\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = 'status' in options ? options.status : 200;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function () {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    });\n  };\n\n  Response.error = function () {\n    var response = new Response(null, { status: 0, statusText: '' });\n    response.type = 'error';\n    return response;\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function (url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code');\n    }\n\n    return new Response(null, { status: status, headers: { location: url } });\n  };\n\n  self.Headers = Headers;\n  self.Request = Request;\n  self.Response = Response;\n\n  self.fetch = function (input, init) {\n    return new Promise(function (resolve, reject) {\n      var request = new Request(input, init);\n      var xhr = new XMLHttpRequest();\n\n      xhr.onload = function () {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function () {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function () {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function (value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    });\n  };\n  self.fetch.polyfill = true;\n})(typeof self !== 'undefined' ? self : undefined);\n\n/***/ })\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// fetch.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 87);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d438a977f193f4d27dbf","import 'whatwg-fetch';\n\n\n\n// WEBPACK FOOTER //\n// ./app/system/core/polyfills/fetch.js","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/whatwg-fetch/fetch.js"],"sourceRoot":""}