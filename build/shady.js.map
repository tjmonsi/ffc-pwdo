{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./app/node_modules/@webcomponents/shadycss/src/style-transformer.js","webpack:///./app/node_modules/@webcomponents/shadycss/src/common-regex.js","webpack:///./app/node_modules/@webcomponents/shadycss/src/style-info.js","webpack:///./app/node_modules/@webcomponents/shadycss/src/document-wait.js","webpack:///./app/node_modules/@webcomponents/shadycss/src/style-settings.js","webpack:///./app/node_modules/@webcomponents/shadycss/src/css-parse.js","webpack:///./app/node_modules/@webcomponents/shadycss/src/style-util.js","webpack:///./app/system/core/polyfills/shadycss.js","webpack:///./app/node_modules/@webcomponents/shadycss/entrypoints/scoping-shim.js","webpack:///./app/node_modules/@webcomponents/shadycss/src/scoping-shim.js","webpack:///./app/node_modules/@webcomponents/shadycss/src/style-properties.js","webpack:///./app/node_modules/@webcomponents/shadycss/src/style-placeholder.js","webpack:///./app/node_modules/@webcomponents/shadycss/src/style-cache.js","webpack:///./app/node_modules/@webcomponents/shadycss/src/document-watcher.js","webpack:///./app/node_modules/@webcomponents/shadycss/src/apply-shim-utils.js","webpack:///./app/node_modules/@webcomponents/shadycss/src/common-utils.js","webpack:///./app/node_modules/@webcomponents/shadycss/src/custom-style-interface.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","StyleUtil","_styleSettings","StyleTransformer","node","scope","shouldRemoveScope","this","_transformDom","selector","nodeType","Node","ELEMENT_NODE","element","c$","localName","content","_content","childNodes","children","length","classList","remove","add","getAttribute","CLASS","newValue","replace","setElementClassRaw","styleRules","callback","cssBuildType","cssText","nativeShadow","toCssText","_StyleUtil$getIsExten","getIsExtends","is","typeExtension","css","trim","rules","ext","hostScope","_calcHostScope","_calcElementScope","self","rule","isScoped","CSS_CLASS_PREFIX","_transformRule","_transformComplexSelector","transformer","transformedSelector","_transformRuleCss","p$","split","COMPLEX_SELECTOR_SEP","isKeyframesSelector","join","NTH","type","inside","indexOf","_this","stop","isNth","test","inner","_twiddleNthPlus","SLOTTED_START","HOST","SIMPLE_SELECTOR_SEP","info","_transformCompoundSelector","combinator","slottedIndex","SLOTTED","_transformHostSelector","_transformSimpleSelector","slotted","SLOTTED_PAREN","paren","DIR_PAREN","before","dir","PSEUDO_PREFIX","match","HOST_PAREN","SIMPLE_SELECTOR_PREFIX","host","SELECTOR_NO_MATCH","normalizeRootSelector","_transformDocumentSelector","ROOT","SCOPE_DOC_SELECTOR","RegExp","VAR_ASSIGN","MIXIN_MATCH","VAR_CONSUMED","ANIMATION_MATCH","MEDIA_MATCH","IS_VAR","BRACKETED","HOST_PREFIX","HOST_SUFFIX","StyleInfo","ast","placeholder","ownStylePropertyNames","elementName","cssBuild","_classCallCheck","overrideStyleProperties","styleProperties","scopeSelector","customStyle","styleInfo","_getStyleRules","requestAnimationFrame","whenReady","readyPromise","Promise","resolve","resolveFn","document","readyState","addEventListener","then","window","nativeCssVariables","calcCssVariables","settings","Boolean","navigator","userAgent","CSS","supports","ShadyCSS","undefined","nativeCss","parse","text","parseCss","substring","ss","code","arguments","repeat","_expandUnicodeEscapes","RX","multipleSpaces","lastIndexOf","AT_START","MEDIA_START","types","MEDIA_RULE","keyframesRule","KEYFRAMES_RULE","pop","VAR_START","MIXIN_RULE","STYLE_RULE","r$","root","StyleNode","OPEN_BRACE","previous","push","CLOSE_BRACE","lex","comments","port","stringify","preserveProperties","_hasMixinRules","mixinApply","varApply","removeCustomPropApply","removeCustomPropAssignment","removeCustomProps","customProp","mixinProp","_cssParse","forEachRule","rulesForStyle","style","textContent","applyCss","moniker","target","contextNode","createScopeStyle","applyStyle","applyStylePlaceHolder","placeHolder","createComment","after","lastHeadApplyNode","head","insertBefore","firstChild","isTargetedBuild","buildType","getCssBuildType","processVariableAndFallback","str","start","end","level","findMatchingParen","prefix","suffix","comma","fallback","setAttribute","extends","_commonRegex","styleRuleCallback","keyframesRuleCallback","onlyActiveRules","skipRules","matchMedia","matches","createElement","nextSibling","compareDocumentPosition","DOCUMENT_POSITION_PRECEDING","_scopingShim","scopingShim","ScopingShim","ApplyShim","CustomStyleInterface","prepareTemplate","template","elementExtends","flushCustomStyles","styleSubtree","properties","styleElement","styleDocument","getComputedStyleValue","_documentWatcher","ApplyShimUtils","_commonUtils","styleCache","StyleCache","_scopeCounter","_documentOwner","documentElement","_documentOwnerStyleInfo","set","_elementsHaveApplied","_applyShim","_customStyleInterface","_documentWait2","default","_ensure","flush","styles","querySelectorAll","parentNode","removeChild","querySelector","_prepared","templateMap","_getCssBuild","_gatherStyles","__cssBuild","dom","hasMixins","detectMixin","_cssBuild","ownPropertyNames","StyleProperties","decorateStyles","placeholderMap","_generateStaticStyle","_style","_ownPropertyNames","shadowroot","elementStyles","invalidate","_this2","transformCustomStyleForDocument","_ensureApplyShim","_ensureCustomStyleInterface","customStyles","_revalidateCustomStyleApplyShim","_updateProperties","_applyCustomStyles","overrideProps","_prepareHost","_isRootOwner","assign","updateNativeProperties","templateIsValid","templateIsValidating","startValidatingTemplate","shadowRoot","_applyStyleProperties","getRootNode","_styleOwnerForNode","cacheEntry","fetch","cachedScopeSelector","cachedStyle","oldScopeSelector","_generateScopeSelector","applyElementStyle","applyElementScopeSelector","store","owner","ownerStyleInfo","ownerProperties","props","hostAndRootProps","hostAndRootPropertiesForScope","propertiesMatchingHost","propertyDataFromStyles","hostProps","rootProps","_mixinOverrideStyles","reify","overrides","v","shadowChildren","_revalidateApplyShim","applyCustomStyle","_this3","documentRule","getComputedStyle","getPropertyValue","classString","classes","scopeName","classAttr","k$","SCOPE_NAME","XSCOPE_NAME","setElementClass","_styleInfoForNode","getStyleAst","styleAstToString","defineProperties","matchesSelector","Element","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","IS_IE","keyframes","ruleIndex","decorateRule","index","collectPropertiesInCssText","propertyInfo","_keyframes","names","collectProperties","collectCssText","rx","any","exec","collectConsumingCssText","getOwnPropertyNames","valueForProperty","valueForProperties","propertyValue","parts","lastIndex","colon","pp","slice","output","keyframeTransforms","input","hasAnimations","keyframeNamesToTransform","keyframe","transform","selectorToMatch","bits","parseInt","addToBitMask","parsedSelector","isRoot","isHost","whenHostOrRootRule","_element","_StyleUtil$getIsExten2","hostSelector","rxHostSelector","hostRx","_elementKeyframeTransforms","applyProperties","applyKeyframeTransforms","_scopeSelector","keyframesRules","_scopeKeyframes","_keyframesRuleTransformer","keyframesNameRx","transformedKeyframesName","scopeId","old","transformStyles","_styleUtil","ce","origDefine","clazz","options","typeMax","cache","idx","pn","tagname","list","shift","entry","_validate","_styleTransformer","getCurrentScope","Array","from","hasAttribute","getClasses","handler","mxns","x","mxn","addedNodes","currentScope","ownerDocument","DOCUMENT_FRAGMENT_NODE","newScope","unscoped","j","observer","MutationObserver","observe","childList","subtree","delayedStart","body","listener","removeEventListener","takeRecords","invalidateTemplate","isValid","isValidating","startValidating","elementsAreInvalid","_templateMap","CURRENT_VERSION","NEXT_VERSION","VALIDATING_VERSION","promise","_validating","removeProperty","setProperty","has","_documentWait","CustomStyleProvider","CACHED_STYLE","transformFn","validateFn","enqueueDocumentValidation","cs","getStyleForCustomStyle","styleToTransform","addCustomStyle","processStyles","transformCallback","fn","validateCallback","needsEnqueue","CustomStyleInterfaceInterface"],"mappings":"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","file":"shady.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 74);\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport * as StyleUtil from './style-util.js';\nimport {nativeShadow} from './style-settings.js';\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n* scoping:\n\n  * elements in scope get scoping selector class=\"x-foo-scope\"\n  * selectors re-written as follows:\n\n    div button -> div.x-foo-scope button.x-foo-scope\n\n* :host -> scopeName\n\n* :host(...) -> scopeName...\n\n* ::slotted(...) -> scopeName > ...\n\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\n\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\n\n*/\nconst SCOPE_NAME = 'style-scope';\n\nclass StyleTransformer {\n  get SCOPE_NAME() {\n    return SCOPE_NAME;\n  }\n  // Given a node and scope name, add a scoping class to each node\n  // in the tree. This facilitates transforming css into scoped rules.\n  dom(node, scope, shouldRemoveScope) {\n    // one time optimization to skip scoping...\n    if (node['__styleScoped']) {\n      node['__styleScoped'] = null;\n    } else {\n      this._transformDom(node, scope || '', shouldRemoveScope);\n    }\n  }\n\n  _transformDom(node, selector, shouldRemoveScope) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      this.element(node, selector, shouldRemoveScope);\n    }\n    let c$ = (node.localName === 'template') ?\n      (node.content || node._content).childNodes :\n      node.children || node.childNodes;\n    if (c$) {\n      for (let i=0; i<c$.length; i++) {\n        this._transformDom(c$[i], selector, shouldRemoveScope);\n      }\n    }\n  }\n\n  element(element, scope, shouldRemoveScope) {\n    // note: if using classes, we add both the general 'style-scope' class\n    // as well as the specific scope. This enables easy filtering of all\n    // `style-scope` elements\n    if (scope) {\n      // note: svg on IE does not have classList so fallback to class\n      if (element.classList) {\n        if (shouldRemoveScope) {\n          element.classList.remove(SCOPE_NAME);\n          element.classList.remove(scope);\n        } else {\n          element.classList.add(SCOPE_NAME);\n          element.classList.add(scope);\n        }\n      } else if (element.getAttribute) {\n        let c = element.getAttribute(CLASS);\n        if (shouldRemoveScope) {\n          if (c) {\n            let newValue = c.replace(SCOPE_NAME, '').replace(scope, '');\n            StyleUtil.setElementClassRaw(element, newValue);\n          }\n        } else {\n          let newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;\n          StyleUtil.setElementClassRaw(element, newValue);\n        }\n      }\n    }\n  }\n\n  elementStyles(element, styleRules, callback) {\n    let cssBuildType = element['__cssBuild'];\n    // no need to shim selectors if settings.useNativeShadow, also\n    // a shady css build will already have transformed selectors\n    // NOTE: This method may be called as part of static or property shimming.\n    // When there is a targeted build it will not be called for static shimming,\n    // but when the property shim is used it is called and should opt out of\n    // static shimming work when a proper build exists.\n    let cssText = '';\n    if (nativeShadow || cssBuildType === 'shady') {\n      cssText = StyleUtil.toCssText(styleRules, callback);\n    } else {\n      let {is, typeExtension} = StyleUtil.getIsExtends(element);\n      cssText = this.css(styleRules, is, typeExtension, callback) + '\\n\\n';\n    }\n    return cssText.trim();\n  }\n\n  // Given a string of cssText and a scoping string (scope), returns\n  // a string of scoped css where each selector is transformed to include\n  // a class created from the scope. ShadowDOM selectors are also transformed\n  // (e.g. :host) to use the scoping selector.\n  css(rules, scope, ext, callback) {\n    let hostScope = this._calcHostScope(scope, ext);\n    scope = this._calcElementScope(scope);\n    let self = this;\n    return StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      if (!rule.isScoped) {\n        self.rule(rule, scope, hostScope);\n        rule.isScoped = true;\n      }\n      if (callback) {\n        callback(rule, scope, hostScope);\n      }\n    });\n  }\n\n  _calcElementScope(scope) {\n    if (scope) {\n      return CSS_CLASS_PREFIX + scope;\n    } else {\n      return '';\n    }\n  }\n\n  _calcHostScope(scope, ext) {\n    return ext ? `[is=${scope}]` : scope;\n  }\n\n  rule(rule, scope, hostScope) {\n    this._transformRule(rule, this._transformComplexSelector,\n      scope, hostScope);\n  }\n\n  /**\n   * transforms a css rule to a scoped rule.\n   *\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRule(rule, transformer, scope, hostScope) {\n    // NOTE: save transformedSelector for subsequent matching of elements\n    // against selectors (e.g. when calculating style properties)\n    rule['selector'] = rule.transformedSelector =\n      this._transformRuleCss(rule, transformer, scope, hostScope);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRuleCss(rule, transformer, scope, hostScope) {\n    let p$ = rule['selector'].split(COMPLEX_SELECTOR_SEP);\n    // we want to skip transformation of rules that appear in keyframes,\n    // because they are keyframe selectors, not element selectors.\n    if (!StyleUtil.isKeyframesSelector(rule)) {\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n        p$[i] = transformer.call(this, p, scope, hostScope);\n      }\n    }\n    return p$.join(COMPLEX_SELECTOR_SEP);\n  }\n\n  /**\n   * @param {string} selector\n   * @return {string}\n   */\n  _twiddleNthPlus(selector) {\n    return selector.replace(NTH, (m, type, inside) => {\n      if (inside.indexOf('+') > -1) {\n        inside = inside.replace(/\\+/g, '___');\n      } else if (inside.indexOf('___') > -1) {\n        inside = inside.replace(/___/g, '+');\n      }\n      return `:${type}(${inside})`;\n    });\n  }\n\n/**\n * @param {string} selector\n * @param {string} scope\n * @param {string=} hostScope\n */\n  _transformComplexSelector(selector, scope, hostScope) {\n    let stop = false;\n    selector = selector.trim();\n    // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\n    let isNth = NTH.test(selector);\n    if (isNth) {\n      selector = selector.replace(NTH, (m, type, inner) => `:${type}(${inner.replace(/\\s/g, '')})`)\n      selector = this._twiddleNthPlus(selector);\n    }\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`);\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\n      if (!stop) {\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\n        stop = stop || info.stop;\n        c = info.combinator;\n        s = info.value;\n      }\n      return c + s;\n    });\n    if (isNth) {\n      selector = this._twiddleNthPlus(selector);\n    }\n    return selector;\n  }\n\n  _transformCompoundSelector(selector, combinator, scope, hostScope) {\n    // replace :host with host scoping class\n    let slottedIndex = selector.indexOf(SLOTTED);\n    if (selector.indexOf(HOST) >= 0) {\n      selector = this._transformHostSelector(selector, hostScope);\n    // replace other selectors with scoping class\n    } else if (slottedIndex !== 0) {\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\n        selector;\n    }\n    // mark ::slotted() scope jump to replace with descendant selector + arg\n    // also ignore left-side combinator\n    let slotted = false;\n    if (slottedIndex >= 0) {\n      combinator = '';\n      slotted = true;\n    }\n    // process scope jumping selectors up to the scope jump and then stop\n    let stop;\n    if (slotted) {\n      stop = true;\n      if (slotted) {\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\n      }\n    }\n    selector = selector.replace(DIR_PAREN, (m, before, dir) =>\n      `[dir=\"${dir}\"] ${before}, ${before}[dir=\"${dir}\"]`);\n    return {value: selector, combinator, stop};\n  }\n\n  _transformSimpleSelector(selector, scope) {\n    let p$ = selector.split(PSEUDO_PREFIX);\n    p$[0] += scope;\n    return p$.join(PSEUDO_PREFIX);\n  }\n\n  // :host(...) -> scopeName...\n  _transformHostSelector(selector, hostScope) {\n    let m = selector.match(HOST_PAREN);\n    let paren = m && m[2].trim() || '';\n    if (paren) {\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n        // paren starts with a type selector\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n        // if the type selector is our hostScope then avoid pre-pending it\n        if (typeSelector === hostScope) {\n          return paren;\n        // otherwise, this selector should not match in this scope so\n        // output a bogus selector.\n        } else {\n          return SELECTOR_NO_MATCH;\n        }\n      } else {\n        // make sure to do a replace here to catch selectors like:\n        // `:host(.foo)::before`\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\n          return hostScope + paren;\n        });\n      }\n    // if no paren, do a straight :host replacement.\n    // TODO(sorvell): this should not strictly be necessary but\n    // it's needed to maintain support for `:host[foo]` type selectors\n    // which have been improperly used under Shady DOM. This should be\n    // deprecated.\n    } else {\n      return selector.replace(HOST, hostScope);\n    }\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  documentRule(rule) {\n    // reset selector in case this is redone.\n    rule['selector'] = rule['parsedSelector'];\n    this.normalizeRootSelector(rule);\n    this._transformRule(rule, this._transformDocumentSelector);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  normalizeRootSelector(rule) {\n    if (rule['selector'] === ROOT) {\n      rule['selector'] = 'html';\n    }\n  }\n\n/**\n * @param {string} selector\n */\n  _transformDocumentSelector(selector) {\n    return selector.match(SLOTTED) ?\n      this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR) :\n      this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n  }\n}\n\nlet NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\nlet SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\nlet COMPLEX_SELECTOR_SEP = ',';\nlet SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=[])+)/g;\nlet SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nlet HOST = ':host';\nlet ROOT = ':root';\nlet SLOTTED = '::slotted';\nlet SLOTTED_START = new RegExp(`^(${SLOTTED})`);\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nlet HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// similar to HOST_PAREN\nlet SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nlet DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)/;\nlet CSS_CLASS_PREFIX = '.';\nlet PSEUDO_PREFIX = ':';\nlet CLASS = 'class';\nlet SELECTOR_NO_MATCH = 'should_not_match';\n\nexport default new StyleTransformer()","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nexport const VAR_ASSIGN = /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};{])+)|\\{([^}]*)\\}(?:(?=[;\\s}])|$))/gi;\nexport const MIXIN_MATCH = /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi;\nexport const VAR_CONSUMED = /(--[\\w-]+)\\s*([:,;)]|$)/gi;\nexport const ANIMATION_MATCH = /(animation\\s*:)|(animation-name\\s*:)/;\nexport const MEDIA_MATCH = /@media\\s(.*)/;\nexport const IS_VAR = /^--/;\nexport const BRACKETED = /\\{[^}]*\\}/g;\nexport const HOST_PREFIX = '(?:^|[^.#[:])';\nexport const HOST_SUFFIX = '($|[.:[\\\\s>+~])';\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\n\n/** @const {string} */\nconst infoKey = '__styleInfo';\n\nexport default class StyleInfo {\n  /**\n   * @param {Element} node\n   * @return {StyleInfo}\n   */\n  static get(node) {\n    if (node) {\n      return node[infoKey];\n    } else {\n      return null;\n    }\n  }\n  /**\n   * @param {!Element} node\n   * @param {StyleInfo} styleInfo\n   * @return {StyleInfo}\n   */\n  static set(node, styleInfo) {\n    node[infoKey] = styleInfo;\n    return styleInfo;\n  }\n  /**\n   * @param {StyleNode} ast\n   * @param {Node=} placeholder\n   * @param {Array<string>=} ownStylePropertyNames\n   * @param {string=} elementName\n   * @param {string=} typeExtension\n   * @param {string=} cssBuild\n   */\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\n    /** @type {StyleNode} */\n    this.styleRules = ast || null;\n    /** @type {Node} */\n    this.placeholder = placeholder || null;\n    /** @type {!Array<string>} */\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\n    /** @type {Array<Object>} */\n    this.overrideStyleProperties = null;\n    /** @type {string} */\n    this.elementName = elementName || '';\n    /** @type {string} */\n    this.cssBuild = cssBuild || '';\n    /** @type {string} */\n    this.typeExtension = typeExtension || '';\n    /** @type {Object<string, string>} */\n    this.styleProperties = null;\n    /** @type {?string} */\n    this.scopeSelector = null;\n    /** @type {HTMLStyleElement} */\n    this.customStyle = null;\n  }\n  _getStyleRules() {\n    return this.styleRules;\n  }\n}\n\nStyleInfo.prototype['_getStyleRules'] = StyleInfo.prototype._getStyleRules;","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/** @type {Promise<void>} */\nlet readyPromise = null;\n\n/** @type {?function(?function())} */\nlet whenReady = window['HTMLImports'] && window['HTMLImports']['whenReady'] || null;\n\n/** @type {function()} */\nlet resolveFn;\n\n/**\n * @param {?function()} callback\n */\nexport default function documentWait(callback) {\n  requestAnimationFrame(function() {\n    if (whenReady) {\n      whenReady(callback)\n    } else {\n      if (!readyPromise) {\n        readyPromise = new Promise((resolve) => {resolveFn = resolve});\n        if (document.readyState === 'complete') {\n          resolveFn();\n        } else {\n          document.addEventListener('readystatechange', () => {\n            if (document.readyState === 'complete') {\n              resolveFn();\n            }\n          });\n        }\n      }\n      readyPromise.then(function(){ callback && callback(); });\n    }\n  });\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport let nativeShadow = !(window['ShadyDOM'] && window['ShadyDOM']['inUse']);\nexport let nativeCssVariables;\n\n/**\n * @param {(ShadyCSSOptions | ShadyCSSInterface)=} settings\n */\nfunction calcCssVariables(settings) {\n  if (settings && settings['shimcssproperties']) {\n    nativeCssVariables = false;\n  } else {\n    // chrome 49 has semi-working css vars, check if box-shadow works\n    // safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\n    // However, shim css custom properties are only supported with ShadyDOM enabled,\n    // so fall back on native if we do not detect ShadyDOM\n    // Edge 15: custom properties used in ::before and ::after will also be used in the parent element\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12414257/\n    nativeCssVariables = nativeShadow || Boolean(!navigator.userAgent.match(/AppleWebKit\\/601|Edge\\/15/) &&\n      window.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n  }\n}\n\nif (window.ShadyCSS && window.ShadyCSS.nativeCss !== undefined) {\n  nativeCssVariables = window.ShadyCSS.nativeCss;\n} else if (window.ShadyCSS) {\n  calcCssVariables(window.ShadyCSS);\n  // reset window variable to let ShadyCSS API take its place\n  window.ShadyCSS = undefined;\n} else {\n  calcCssVariables(window['WebComponents'] && window['WebComponents']['flags']);\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n'use strict';\n\n/** @unrestricted */\nclass StyleNode {\n  constructor() {\n    /** @type {number} */\n    this['start'] = 0;\n    /** @type {number} */\n    this['end'] = 0;\n    /** @type {StyleNode} */\n    this['previous'] = null;\n    /** @type {StyleNode} */\n    this['parent'] = null;\n    /** @type {Array<StyleNode>} */\n    this['rules'] = null;\n    /** @type {string} */\n    this['parsedCssText'] = '';\n    /** @type {string} */\n    this['cssText'] = '';\n    /** @type {boolean} */\n    this['atRule'] = false;\n    /** @type {number} */\n    this['type'] = 0;\n    /** @type {string} */\n    this['keyframesName'] = '';\n    /** @type {string} */\n    this['selector'] = '';\n    /** @type {string} */\n    this['parsedSelector'] = '';\n  }\n}\n\nexport {StyleNode}\n\n// given a string of css, return a simple rule tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nexport function parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nfunction lex(text) {\n  let root = new StyleNode();\n  root['start'] = 0;\n  root['end'] = text.length\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n['rules']) {\n        n['rules'] = [];\n      }\n      let p = n;\n      let previous = p['rules'][p['rules'].length - 1] || null;\n      n = new StyleNode();\n      n['start'] = i + 1;\n      n['parent'] = p;\n      n['previous'] = previous;\n      p['rules'].push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n['end'] = i + 1;\n      n = n['parent'] || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\n/**\n * @param {StyleNode} node\n * @param {string} text\n * @return {StyleNode}\n */\nfunction parseCss(node, text) {\n  let t = text.substring(node['start'], node['end'] - 1);\n  node['parsedCssText'] = node['cssText'] = t.trim();\n  if (node['parent']) {\n    let ss = node['previous'] ? node['previous']['end'] : node['parent']['start'];\n    t = text.substring(ss, node['start'] - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = node['parsedSelector'] = node['selector'] = t.trim();\n    node['atRule'] = (s.indexOf(AT_START) === 0);\n    // note, support a subset of rule types...\n    if (node['atRule']) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node['type'] = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node['type'] = types.KEYFRAMES_RULE;\n        node['keyframesName'] =\n          node['selector'].split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node['type'] = types.MIXIN_RULE;\n      } else {\n        node['type'] = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node['rules'];\n  if (r$) {\n    for (let i = 0, l = r$.length, r;\n      (i < l) && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n/**\n * conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n * expanded form that doesn't require trailing space `\\000033`\n * @param {string} s\n * @return {string}\n */\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n/**\n * stringify parsed css.\n * @param {StyleNode} node\n * @param {boolean=} preserveProperties\n * @param {string=} text\n * @return {string}\n */\nexport function stringify(node, preserveProperties, text = '') {\n  // calc rule cssText\n  let cssText = '';\n  if (node['cssText'] || node['rules']) {\n    let r$ = node['rules'];\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r;\n        (i < l) && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node['cssText'] :\n        removeCustomProps(node['cssText']);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node['selector']) {\n      text += node['selector'] + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node['selector']) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\n/**\n * @param {Array<StyleNode>} rules\n * @return {boolean}\n */\nfunction _hasMixinRules(rules) {\n  let r = rules[0];\n  return Boolean(r) && Boolean(r['selector']) && r['selector'].indexOf(VAR_START) === 0;\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nexport function removeCustomPropAssignment(cssText) {\n  return cssText\n    .replace(RX.customProp, '')\n    .replace(RX.mixinProp, '');\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomPropApply(cssText) {\n  return cssText\n    .replace(RX.mixinApply, '')\n    .replace(RX.varApply, '');\n}\n\n/** @enum {number} */\nexport const types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n}\n\nconst OPEN_BRACE = '{';\nconst CLOSE_BRACE = '}';\n\n// helper regexp's\nconst RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n}\n\nconst VAR_START = '--';\nconst MEDIA_START = '@media';\nconst AT_START = '@';\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow, nativeCssVariables} from './style-settings.js';\nimport {parse, stringify, types, StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport {MEDIA_MATCH} from './common-regex.js';\n\n/**\n * @param {string|StyleNode} rules\n * @param {function(StyleNode)=} callback\n * @return {string}\n */\nexport function toCssText (rules, callback) {\n  if (!rules) {\n    return '';\n  }\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @return {StyleNode}\n */\nexport function rulesForStyle(style) {\n  if (!style['__cssRules'] && style.textContent) {\n    style['__cssRules'] = parse(style.textContent);\n  }\n  return style['__cssRules'] || null;\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\n/**\n * @param {StyleNode} rule\n * @return {boolean}\n */\nexport function isKeyframesSelector(rule) {\n  return Boolean(rule['parent']) &&\n  rule['parent']['type'] === types.KEYFRAMES_RULE;\n}\n\n/**\n * @param {StyleNode} node\n * @param {Function=} styleRuleCallback\n * @param {Function=} keyframesRuleCallback\n * @param {boolean=} onlyActiveRules\n */\nexport function forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  let type = node['type'];\n  if (onlyActiveRules) {\n    if (type === types.MEDIA_RULE) {\n      let matchMedia = node['selector'].match(MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback &&\n    type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node['rules'];\n  if (r$ && !skipRules) {\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @param {Node} target\n * @param {Node} contextNode\n * @return {HTMLStyleElement}\n */\nexport function applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  applyStyle(style, target, contextNode);\n  return style;\n}\n\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @return {HTMLStyleElement}\n */\nexport function createScopeStyle(cssText, moniker) {\n  let style = /** @type {HTMLStyleElement} */(document.createElement('style'));\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\n/**\n * Track the position of the last added style for placing placeholders\n * @type {Node}\n */\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\n/**\n * @param {string} moniker\n * @return {!Comment}\n */\nexport function applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\n    moniker + ' ');\n  let after = lastHeadApplyNode ?\n    lastHeadApplyNode['nextSibling'] : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @param {?Node} target\n * @param {?Node} contextNode\n */\nexport function applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) ||\n    target.firstChild;\n  target.insertBefore(style, after);\n  if (!lastHeadApplyNode) {\n    lastHeadApplyNode = style;\n  } else {\n    // only update lastHeadApplyNode if the new style is inserted after the old lastHeadApplyNode\n    let position = style.compareDocumentPosition(lastHeadApplyNode);\n    if (position === Node.DOCUMENT_POSITION_PRECEDING) {\n      lastHeadApplyNode = style;\n    }\n  }\n}\n\n/**\n * @param {string} buildType\n * @return {boolean}\n */\nexport function isTargetedBuild(buildType) {\n  return nativeShadow ? buildType === 'shadow' : buildType === 'shady';\n}\n\n/**\n * @param {Element} element\n * @return {?string}\n */\nexport function getCssBuildType(element) {\n  return element.getAttribute('css-build');\n}\n\n/**\n * Walk from text[start] matching parens and\n * returns position of the outer end paren\n * @param {string} text\n * @param {number} start\n * @return {number}\n */\nfunction findMatchingParen(text, start) {\n  let level = 0;\n  for (let i=start, l=text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\n/**\n * @param {string} str\n * @param {function(string, string, string, string)} callback\n */\nexport function processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\n/**\n * @param {Element} element\n * @param {string} value\n */\nexport function setElementClassRaw(element, value) {\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\n  if (nativeShadow) {\n    element.setAttribute('class', value);\n  } else {\n    window['ShadyDOM']['nativeMethods']['setAttribute'].call(element, 'class', value);\n  }\n}\n\n/**\n * @param {Element | {is: string, extends: string}} element\n * @return {{is: string, typeExtension: string}}\n */\nexport function getIsExtends(element) {\n  let localName = element['localName'];\n  let is = '', typeExtension = '';\n  /*\n  NOTE: technically, this can be wrong for certain svg elements\n  with `-` in the name like `<font-face>`\n  */\n  if (localName) {\n    if (localName.indexOf('-') > -1) {\n      is = localName;\n    } else {\n      typeExtension = localName;\n      is = (element.getAttribute && element.getAttribute('is')) || '';\n    }\n  } else {\n    is = /** @type {?} */(element).is;\n    typeExtension = /** @type {?} */(element).extends;\n  }\n  return {is, typeExtension};\n}\n","import '@webcomponents/shadycss/entrypoints/scoping-shim';\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport ScopingShim from '../src/scoping-shim.js';\nimport {nativeCssVariables, nativeShadow} from '../src/style-settings.js';\n\n/** @const {ScopingShim} */\nconst scopingShim = new ScopingShim();\n\nlet ApplyShim, CustomStyleInterface;\n\nif (window['ShadyCSS']) {\n  ApplyShim = window['ShadyCSS']['ApplyShim'];\n  CustomStyleInterface = window['ShadyCSS']['CustomStyleInterface'];\n}\n\nwindow.ShadyCSS = {\n  ScopingShim: scopingShim,\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} elementExtends\n   */\n  prepareTemplate(template, elementName, elementExtends) {\n    scopingShim.flushCustomStyles();\n    scopingShim.prepareTemplate(template, elementName, elementExtends)\n  },\n\n  /**\n   * @param {!HTMLElement} element\n   * @param {Object=} properties\n   */\n  styleSubtree(element, properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleSubtree(element, properties);\n  },\n\n  /**\n   * @param {!HTMLElement} element\n   */\n  styleElement(element) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleElement(element);\n  },\n\n  /**\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleDocument(properties);\n  },\n\n  /**\n   * @param {Element} element\n   * @param {string} property\n   * @return {string}\n   */\n  getComputedStyleValue(element, property) {\n    return scopingShim.getComputedStyleValue(element, property);\n  },\n\n  nativeCss: nativeCssVariables,\n\n  nativeShadow: nativeShadow\n};\n\nif (ApplyShim) {\n  window.ShadyCSS.ApplyShim = ApplyShim;\n}\n\nif (CustomStyleInterface) {\n  window.ShadyCSS.CustomStyleInterface = CustomStyleInterface;\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {parse, StyleNode} from './css-parse.js';\nimport {nativeShadow, nativeCssVariables} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport * as StyleUtil from './style-util.js';\nimport StyleProperties from './style-properties.js';\nimport placeholderMap from './style-placeholder.js';\nimport StyleInfo from './style-info.js';\nimport StyleCache from './style-cache.js';\nimport {flush as watcherFlush} from './document-watcher.js';\nimport templateMap from './template-map.js';\nimport * as ApplyShimUtils from './apply-shim-utils.js';\nimport documentWait from './document-wait.js';\nimport {updateNativeProperties, detectMixin} from './common-utils.js';\nimport {CustomStyleInterfaceInterface} from './custom-style-interface.js'; // eslint-disable-line no-unused-vars\n\n/**\n * @const {StyleCache}\n */\nconst styleCache = new StyleCache();\n\nexport default class ScopingShim {\n  constructor() {\n    this._scopeCounter = {};\n    this._documentOwner = document.documentElement;\n    let ast = new StyleNode();\n    ast['rules'] = [];\n    this._documentOwnerStyleInfo = StyleInfo.set(this._documentOwner, new StyleInfo(ast));\n    this._elementsHaveApplied = false;\n    this._applyShim = null;\n    /** @type {?CustomStyleInterfaceInterface} */\n    this._customStyleInterface = null;\n    documentWait(() => {\n      this._ensure();\n    });\n  }\n  flush() {\n    watcherFlush();\n  }\n  _generateScopeSelector(name) {\n    let id = this._scopeCounter[name] = (this._scopeCounter[name] || 0) + 1;\n    return `${name}-${id}`;\n  }\n  getStyleAst(style) {\n    return StyleUtil.rulesForStyle(style);\n  }\n  styleAstToString(ast) {\n    return StyleUtil.toCssText(ast);\n  }\n  _gatherStyles(template) {\n    let styles = template.content.querySelectorAll('style');\n    let cssText = [];\n    for (let i = 0; i < styles.length; i++) {\n      let s = styles[i];\n      cssText.push(s.textContent);\n      s.parentNode.removeChild(s);\n    }\n    return cssText.join('').trim();\n  }\n  _getCssBuild(template) {\n    let style = template.content.querySelector('style');\n    if (!style) {\n      return '';\n    }\n    return style.getAttribute('css-build') || '';\n  }\n  /**\n   * Prepare the styling and template for the given element type\n   *\n   * @param {HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} typeExtension\n   */\n  prepareTemplate(template, elementName, typeExtension) {\n    if (template._prepared) {\n      return;\n    }\n    template._prepared = true;\n    template.name = elementName;\n    template.extends = typeExtension;\n    templateMap[elementName] = template;\n    let cssBuild = this._getCssBuild(template);\n    let cssText = this._gatherStyles(template);\n    let info = {\n      is: elementName,\n      extends: typeExtension,\n      __cssBuild: cssBuild,\n    };\n    if (!nativeShadow) {\n      StyleTransformer.dom(template.content, elementName);\n    }\n    // check if the styling has mixin definitions or uses\n    this._ensure();\n    let hasMixins = detectMixin(cssText)\n    let ast = parse(cssText);\n    // only run the applyshim transforms if there is a mixin involved\n    if (hasMixins && nativeCssVariables && this._applyShim) {\n      this._applyShim['transformRules'](ast, elementName);\n    }\n    template['_styleAst'] = ast;\n    template._cssBuild = cssBuild;\n\n    let ownPropertyNames = [];\n    if (!nativeCssVariables) {\n      ownPropertyNames = StyleProperties.decorateStyles(template['_styleAst'], info);\n    }\n    if (!ownPropertyNames.length || nativeCssVariables) {\n      let root = nativeShadow ? template.content : null;\n      let placeholder = placeholderMap[elementName];\n      let style = this._generateStaticStyle(info, template['_styleAst'], root, placeholder);\n      template._style = style;\n    }\n    template._ownPropertyNames = ownPropertyNames;\n  }\n  _generateStaticStyle(info, rules, shadowroot, placeholder) {\n    let cssText = StyleTransformer.elementStyles(info, rules);\n    if (cssText.length) {\n      return StyleUtil.applyCss(cssText, info.is, shadowroot, placeholder);\n    }\n  }\n  _prepareHost(host) {\n    let {is, typeExtension} = StyleUtil.getIsExtends(host);\n    let placeholder = placeholderMap[is];\n    let template = templateMap[is];\n    let ast;\n    let ownStylePropertyNames;\n    let cssBuild;\n    if (template) {\n      ast = template['_styleAst'];\n      ownStylePropertyNames = template._ownPropertyNames;\n      cssBuild = template._cssBuild;\n    }\n    return StyleInfo.set(host,\n      new StyleInfo(\n        ast,\n        placeholder,\n        ownStylePropertyNames,\n        is,\n        typeExtension,\n        cssBuild\n      )\n    );\n  }\n  _ensureApplyShim() {\n    if (this._applyShim) {\n      return;\n    } else if (window.ShadyCSS && window.ShadyCSS.ApplyShim) {\n      this._applyShim = window.ShadyCSS.ApplyShim;\n      this._applyShim['invalidCallback'] = ApplyShimUtils.invalidate;\n    }\n  }\n  _ensureCustomStyleInterface() {\n    if (this._customStyleInterface) {\n      return;\n    } else if (window.ShadyCSS && window.ShadyCSS.CustomStyleInterface) {\n      this._customStyleInterface = /** @type {!CustomStyleInterfaceInterface} */(window.ShadyCSS.CustomStyleInterface);\n      /** @type {function(!HTMLStyleElement)} */\n      this._customStyleInterface['transformCallback'] = (style) => {this.transformCustomStyleForDocument(style)};\n      this._customStyleInterface['validateCallback'] = () => {\n        requestAnimationFrame(() => {\n          if (this._customStyleInterface['enqueued'] || this._elementsHaveApplied) {\n            this.flushCustomStyles();\n          }\n        })\n      };\n    }\n  }\n  _ensure() {\n    this._ensureApplyShim();\n    this._ensureCustomStyleInterface();\n  }\n  /**\n   * Flush and apply custom styles to document\n   */\n  flushCustomStyles() {\n    this._ensure();\n    if (!this._customStyleInterface) {\n      return;\n    }\n    let customStyles = this._customStyleInterface['processStyles']();\n    // early return if custom-styles don't need validation\n    if (!this._customStyleInterface['enqueued']) {\n      return;\n    }\n    if (!nativeCssVariables) {\n      this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\n      this._applyCustomStyles(customStyles);\n    } else {\n      this._revalidateCustomStyleApplyShim(customStyles);\n    }\n    this._customStyleInterface['enqueued'] = false;\n    // if custom elements have upgraded and there are no native css variables, we must recalculate the whole tree\n    if (this._elementsHaveApplied && !nativeCssVariables) {\n      this.styleDocument();\n    }\n  }\n  /**\n   * Apply styles for the given element\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} overrideProps\n   */\n  styleElement(host, overrideProps) {\n    let {is} = StyleUtil.getIsExtends(host);\n    let styleInfo = StyleInfo.get(host);\n    if (!styleInfo) {\n      styleInfo = this._prepareHost(host);\n    }\n    // Only trip the `elementsHaveApplied` flag if a node other that the root document has `applyStyle` called\n    if (!this._isRootOwner(host)) {\n      this._elementsHaveApplied = true;\n    }\n    if (overrideProps) {\n      styleInfo.overrideStyleProperties =\n        styleInfo.overrideStyleProperties || {};\n      Object.assign(styleInfo.overrideStyleProperties, overrideProps);\n    }\n    if (!nativeCssVariables) {\n     this._updateProperties(host, styleInfo);\n      if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\n        this._applyStyleProperties(host, styleInfo);\n      }\n    } else {\n      if (styleInfo.overrideStyleProperties) {\n        updateNativeProperties(host, styleInfo.overrideStyleProperties);\n      }\n      let template = templateMap[is];\n      // bail early if there is no shadowroot for this element\n      if (!template && !this._isRootOwner(host)) {\n        return;\n      }\n      if (template && template._style && !ApplyShimUtils.templateIsValid(template)) {\n        // update template\n        if (!ApplyShimUtils.templateIsValidating(template)) {\n          this._ensure();\n          this._applyShim && this._applyShim['transformRules'](template['_styleAst'], is);\n          template._style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          ApplyShimUtils.startValidatingTemplate(template);\n        }\n        // update instance if native shadowdom\n        if (nativeShadow) {\n          let root = host.shadowRoot;\n          if (root) {\n            let style = root.querySelector('style');\n            style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          }\n        }\n        styleInfo.styleRules = template['_styleAst'];\n      }\n    }\n  }\n  _styleOwnerForNode(node) {\n    let root = node.getRootNode();\n    let host = root.host;\n    if (host) {\n      if (StyleInfo.get(host)) {\n        return host;\n      } else {\n        return this._styleOwnerForNode(host);\n      }\n    }\n    return this._documentOwner;\n  }\n  _isRootOwner(node) {\n    return (node === this._documentOwner);\n  }\n  _applyStyleProperties(host, styleInfo) {\n    let is = StyleUtil.getIsExtends(host).is;\n    let cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\n    let oldScopeSelector = styleInfo.scopeSelector;\n    // only generate new scope if cached style is not found\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\n    let style = StyleProperties.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\n    if (!nativeShadow) {\n      StyleProperties.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\n    }\n    if (!cacheEntry) {\n      styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\n    }\n    return style;\n  }\n  _updateProperties(host, styleInfo) {\n    let owner = this._styleOwnerForNode(host);\n    let ownerStyleInfo = StyleInfo.get(owner);\n    let ownerProperties = ownerStyleInfo.styleProperties;\n    let props = Object.create(ownerProperties || null);\n    let hostAndRootProps = StyleProperties.hostAndRootPropertiesForScope(host, styleInfo.styleRules);\n    let propertyData = StyleProperties.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\n    let propertiesMatchingHost = propertyData.properties\n    Object.assign(\n      props,\n      hostAndRootProps.hostProps,\n      propertiesMatchingHost,\n      hostAndRootProps.rootProps\n    );\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\n    StyleProperties.reify(props);\n    styleInfo.styleProperties = props;\n  }\n  _mixinOverrideStyles(props, overrides) {\n    for (let p in overrides) {\n      let v = overrides[p];\n      // skip override props if they are not truthy or 0\n      // in order to fall back to inherited values\n      if (v || v === 0) {\n        props[p] = v;\n      }\n    }\n  }\n  /**\n   * Update styles of the whole document\n   *\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    this.styleSubtree(this._documentOwner, properties);\n  }\n  /**\n   * Update styles of a subtree\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} properties\n   */\n  styleSubtree(host, properties) {\n    let root = host.shadowRoot;\n    if (root || this._isRootOwner(host)) {\n      this.styleElement(host, properties);\n    }\n    // process the shadowdom children of `host`\n    let shadowChildren = root && (root.children || root.childNodes);\n    if (shadowChildren) {\n      for (let i = 0; i < shadowChildren.length; i++) {\n        let c = /** @type {!HTMLElement} */(shadowChildren[i]);\n        this.styleSubtree(c);\n      }\n    } else {\n      // process the lightdom children of `host`\n      let children = host.children || host.childNodes;\n      if (children) {\n        for (let i = 0; i < children.length; i++) {\n          let c = /** @type {!HTMLElement} */(children[i]);\n          this.styleSubtree(c);\n        }\n      }\n    }\n  }\n  /* Custom Style operations */\n  _revalidateCustomStyleApplyShim(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\n      if (s) {\n        this._revalidateApplyShim(s);\n      }\n    }\n  }\n  _applyCustomStyles(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\n      if (s) {\n        StyleProperties.applyCustomStyle(s, this._documentOwnerStyleInfo.styleProperties);\n      }\n    }\n  }\n  transformCustomStyleForDocument(style) {\n    let ast = StyleUtil.rulesForStyle(style);\n    StyleUtil.forEachRule(ast, (rule) => {\n      if (nativeShadow) {\n        StyleTransformer.normalizeRootSelector(rule);\n      } else {\n        StyleTransformer.documentRule(rule);\n      }\n      if (nativeCssVariables) {\n        this._ensure();\n        this._applyShim && this._applyShim['transformRule'](rule);\n      }\n    });\n    if (nativeCssVariables) {\n      style.textContent = StyleUtil.toCssText(ast);\n    } else {\n      this._documentOwnerStyleInfo.styleRules.rules.push(ast);\n    }\n  }\n  _revalidateApplyShim(style) {\n    if (nativeCssVariables && this._applyShim) {\n      let ast = StyleUtil.rulesForStyle(style);\n      this._ensure();\n      this._applyShim['transformRules'](ast);\n      style.textContent = StyleUtil.toCssText(ast);\n    }\n  }\n  getComputedStyleValue(element, property) {\n    let value;\n    if (!nativeCssVariables) {\n      // element is either a style host, or an ancestor of a style host\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\n      value = styleInfo.styleProperties[property];\n    }\n    // fall back to the property value from the computed styling\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\n    // trim whitespace that can come after the `:` in css\n    // example: padding: 2px -> \" 2px\"\n    return value ? value.trim() : '';\n  }\n  // given an element and a classString, replaces\n  // the element's class with the provided classString and adds\n  // any necessary ShadyCSS static and property based scoping selectors\n  setElementClass(element, classString) {\n    let root = element.getRootNode();\n    let classes = classString ? classString.split(/\\s/) : [];\n    let scopeName = root.host && root.host.localName;\n    // If no scope, try to discover scope name from existing class.\n    // This can occur if, for example, a template stamped element that\n    // has been scoped is manipulated when not in a root.\n    if (!scopeName) {\n      var classAttr = element.getAttribute('class');\n      if (classAttr) {\n        let k$ = classAttr.split(/\\s/);\n        for (let i=0; i < k$.length; i++) {\n          if (k$[i] === StyleTransformer.SCOPE_NAME) {\n            scopeName = k$[i+1];\n            break;\n          }\n        }\n      }\n    }\n    if (scopeName) {\n      classes.push(StyleTransformer.SCOPE_NAME, scopeName);\n    }\n    if (!nativeCssVariables) {\n      let styleInfo = StyleInfo.get(element);\n      if (styleInfo && styleInfo.scopeSelector) {\n        classes.push(StyleProperties.XSCOPE_NAME, styleInfo.scopeSelector);\n      }\n    }\n    StyleUtil.setElementClassRaw(element, classes.join(' '));\n  }\n  _styleInfoForNode(node) {\n    return StyleInfo.get(node);\n  }\n}\n\n/* exports */\nScopingShim.prototype['flush'] = ScopingShim.prototype.flush;\nScopingShim.prototype['prepareTemplate'] = ScopingShim.prototype.prepareTemplate;\nScopingShim.prototype['styleElement'] = ScopingShim.prototype.styleElement;\nScopingShim.prototype['styleDocument'] = ScopingShim.prototype.styleDocument;\nScopingShim.prototype['styleSubtree'] = ScopingShim.prototype.styleSubtree;\nScopingShim.prototype['getComputedStyleValue'] = ScopingShim.prototype.getComputedStyleValue;\nScopingShim.prototype['setElementClass'] = ScopingShim.prototype.setElementClass;\nScopingShim.prototype['_styleInfoForNode'] = ScopingShim.prototype._styleInfoForNode;\nScopingShim.prototype['transformCustomStyleForDocument'] = ScopingShim.prototype.transformCustomStyleForDocument;\nScopingShim.prototype['getStyleAst'] = ScopingShim.prototype.getStyleAst;\nScopingShim.prototype['styleAstToString'] = ScopingShim.prototype.styleAstToString;\nScopingShim.prototype['flushCustomStyles'] = ScopingShim.prototype.flushCustomStyles;\nObject.defineProperties(ScopingShim.prototype, {\n  'nativeShadow': {\n    get() {\n      return nativeShadow;\n    }\n  },\n  'nativeCss': {\n    get() {\n      return nativeCssVariables;\n    }\n  }\n});","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {removeCustomPropAssignment, StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport {nativeShadow} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport * as StyleUtil from './style-util.js';\nimport * as RX from './common-regex.js';\nimport StyleInfo from './style-info.js';\n\n// TODO: dedupe with shady\n/**\n * @const {function(string):boolean}\n */\nconst matchesSelector = ((p) => p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\np.oMatchesSelector || p.webkitMatchesSelector)(window.Element.prototype);\n\nconst IS_IE = navigator.userAgent.match('Trident');\n\nconst XSCOPE_NAME = 'x-scope';\n\nclass StyleProperties {\n  get XSCOPE_NAME() {\n    return XSCOPE_NAME;\n  }\n/**\n * decorates styles with rule info and returns an array of used style property names\n *\n * @param {StyleNode} rules\n * @return {Array<string>}\n */\n  decorateStyles(rules) {\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\n    StyleUtil.forEachRule(rules, function(rule) {\n      self.decorateRule(rule);\n      // mark in-order position of ast rule in styles block, used for cache key\n      rule.index = ruleIndex++;\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n    }, function onKeyframesRule(rule) {\n      keyframes.push(rule);\n    });\n    // Cache all found keyframes rules for later reference:\n    rules._keyframes = keyframes;\n    // return this list of property names *consumes* in these styles.\n    let names = [];\n    for (let i in props) {\n      names.push(i);\n    }\n    return names;\n  }\n\n  // decorate a single rule with property info\n  decorateRule(rule) {\n    if (rule.propertyInfo) {\n      return rule.propertyInfo;\n    }\n    let info = {}, properties = {};\n    let hasProperties = this.collectProperties(rule, properties);\n    if (hasProperties) {\n      info.properties = properties;\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\n      rule['rules'] = null;\n    }\n    info.cssText = this.collectCssText(rule);\n    rule.propertyInfo = info;\n    return info;\n  }\n\n  // collects the custom properties from a rule's cssText\n  collectProperties(rule, properties) {\n    let info = rule.propertyInfo;\n    if (info) {\n      if (info.properties) {\n        Object.assign(properties, info.properties);\n        return true;\n      }\n    } else {\n      let m, rx = RX.VAR_ASSIGN;\n      let cssText = rule['parsedCssText'];\n      let value;\n      let any;\n      while ((m = rx.exec(cssText))) {\n        // note: group 2 is var, 3 is mixin\n        value = (m[2] || m[3]).trim();\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\n        if (value !== 'inherit' || value !== 'unset') {\n          properties[m[1].trim()] = value;\n        }\n        any = true;\n      }\n      return any;\n    }\n\n  }\n\n  // returns cssText of properties that consume variables/mixins\n  collectCssText(rule) {\n    return this.collectConsumingCssText(rule['parsedCssText']);\n  }\n\n  // NOTE: we support consumption inside mixin assignment\n  // but not production, so strip out {...}\n  collectConsumingCssText(cssText) {\n    return cssText.replace(RX.BRACKETED, '')\n      .replace(RX.VAR_ASSIGN, '');\n  }\n\n  collectPropertiesInCssText(cssText, props) {\n    let m;\n    while ((m = RX.VAR_CONSUMED.exec(cssText))) {\n      let name = m[1];\n      // This regex catches all variable names, and following non-whitespace char\n      // If next char is not ':', then variable is a consumer\n      if (m[2] !== ':') {\n        props[name] = true;\n      }\n    }\n  }\n\n  // turns custom properties into realized values.\n  reify(props) {\n    // big perf optimization here: reify only *own* properties\n    // since this object has __proto__ of the element's scope properties\n    let names = Object.getOwnPropertyNames(props);\n    for (let i=0, n; i < names.length; i++) {\n      n = names[i];\n      props[n] = this.valueForProperty(props[n], props);\n    }\n  }\n\n  // given a property value, returns the reified value\n  // a property value may be:\n  // (1) a literal value like: red or 5px;\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n  // var(--a, var(--b));\n  // (3) a literal mixin value like { properties }. Each of these properties\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n  valueForProperty(property, props) {\n    // case (1) default\n    // case (3) defines a mixin and we have to reify the internals\n    if (property) {\n      if (property.indexOf(';') >=0) {\n        property = this.valueForProperties(property, props);\n      } else {\n        // case (2) variable\n        let self = this;\n        let fn = function(prefix, value, fallback, suffix) {\n          if (!value) {\n            return prefix + suffix;\n          }\n          let propertyValue = self.valueForProperty(props[value], props);\n          // if value is \"initial\", then the variable should be treated as unset\n          if (!propertyValue || propertyValue === 'initial') {\n            // fallback may be --a or var(--a) or literal\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\n            fallback;\n          } else if (propertyValue === 'apply-shim-inherit') {\n            // CSS build will replace `inherit` with `apply-shim-inherit`\n            // for use with native css variables.\n            // Since we have full control, we can use `inherit` directly.\n            propertyValue = 'inherit';\n          }\n          return prefix + (propertyValue || '') + suffix;\n        };\n        property = StyleUtil.processVariableAndFallback(property, fn);\n      }\n    }\n    return property && property.trim() || '';\n  }\n\n  // note: we do not yet support mixin within mixin\n  valueForProperties(property, props) {\n    let parts = property.split(';');\n    for (let i=0, p, m; i<parts.length; i++) {\n      if ((p = parts[i])) {\n        RX.MIXIN_MATCH.lastIndex = 0;\n        m = RX.MIXIN_MATCH.exec(p);\n        if (m) {\n          p = this.valueForProperty(props[m[1]], props);\n        } else {\n          let colon = p.indexOf(':');\n          if (colon !== -1) {\n            let pp = p.substring(colon);\n            pp = pp.trim();\n            pp = this.valueForProperty(pp, props) || pp;\n            p = p.substring(0, colon) + pp;\n          }\n        }\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\n          // strip trailing ;\n          p.slice(0, -1) :\n          p || '';\n      }\n    }\n    return parts.join(';');\n  }\n\n  applyProperties(rule, props) {\n    let output = '';\n    // dynamically added sheets may not be decorated so ensure they are.\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (rule.propertyInfo.cssText) {\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\n    }\n    rule['cssText'] = output;\n  }\n\n  // Apply keyframe transformations to the cssText of a given rule. The\n  // keyframeTransforms object is a map of keyframe names to transformer\n  // functions which take in cssText and spit out transformed cssText.\n  applyKeyframeTransforms(rule, keyframeTransforms) {\n    let input = rule['cssText'];\n    let output = rule['cssText'];\n    if (rule.hasAnimations == null) {\n      // Cache whether or not the rule has any animations to begin with:\n      rule.hasAnimations = RX.ANIMATION_MATCH.test(input);\n    }\n    // If there are no animations referenced, we can skip transforms:\n    if (rule.hasAnimations) {\n      let transform;\n      // If we haven't transformed this rule before, we iterate over all\n      // transforms:\n      if (rule.keyframeNamesToTransform == null) {\n        rule.keyframeNamesToTransform = [];\n        for (let keyframe in keyframeTransforms) {\n          transform = keyframeTransforms[keyframe];\n          output = transform(input);\n          // If the transform actually changed the CSS text, we cache the\n          // transform name for future use:\n          if (input !== output) {\n            input = output;\n            rule.keyframeNamesToTransform.push(keyframe);\n          }\n        }\n      } else {\n        // If we already have a list of keyframe names that apply to this\n        // rule, we apply only those keyframe name transforms:\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n          input = transform(input);\n        }\n        output = input;\n      }\n    }\n    rule['cssText'] = output;\n  }\n\n  // Test if the rules in these styles matches the given `element` and if so,\n  // collect any custom properties into `props`.\n  /**\n   * @param {StyleNode} rules\n   * @param {Element} element\n   */\n  propertyDataFromStyles(rules, element) {\n    let props = {}, self = this;\n    // generates a unique key for these matches\n    let o = [];\n    // note: active rules excludes non-matching @media rules\n    StyleUtil.forEachRule(rules, function(rule) {\n      // TODO(sorvell): we could trim the set of rules at declaration\n      // time to only include ones that have properties\n      if (!rule.propertyInfo) {\n        self.decorateRule(rule);\n      }\n      // match element against transformedSelector: selector may contain\n      // unwanted uniquification and parsedSelector does not directly match\n      // for :host selectors.\n      let selectorToMatch = rule.transformedSelector || rule['parsedSelector'];\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\n        if (matchesSelector.call(element, selectorToMatch)) {\n          self.collectProperties(rule, props);\n          // produce numeric key for these matches for lookup\n          addToBitMask(rule.index, o);\n        }\n      }\n    }, null, true);\n    return {properties: props, key: o};\n  }\n\n  /**\n   * @param {Element} scope\n   * @param {StyleNode} rule\n   * @param {string|undefined} cssBuild\n   * @param {function(Object)} callback\n   */\n  whenHostOrRootRule(scope, rule, cssBuild, callback) {\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (!rule.propertyInfo.properties) {\n      return;\n    }\n    let {is, typeExtension} = StyleUtil.getIsExtends(scope);\n    let hostScope = is ?\n      StyleTransformer._calcHostScope(is, typeExtension) :\n      'html';\n    let parsedSelector = rule['parsedSelector'];\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n    // build info is either in scope (when scope is an element) or in the style\n    // when scope is the default scope; note: this allows default scope to have\n    // mixed mode built and unbuilt styles.\n    if (cssBuild === 'shady') {\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n    }\n    if (cssBuild === 'shadow') {\n      isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';\n      isHost = isHost && !isRoot;\n    }\n    if (!isRoot && !isHost) {\n      return;\n    }\n    let selectorToMatch = hostScope;\n    if (isHost) {\n      // need to transform :host under ShadowDOM because `:host` does not work with `matches`\n      if (nativeShadow && !rule.transformedSelector) {\n        // transform :host into a matchable selector\n        rule.transformedSelector =\n        StyleTransformer._transformRuleCss(\n          rule,\n          StyleTransformer._transformComplexSelector,\n          StyleTransformer._calcElementScope(is),\n          hostScope\n        );\n      }\n      selectorToMatch = rule.transformedSelector || hostScope;\n    }\n    callback({\n      selector: selectorToMatch,\n      isHost: isHost,\n      isRoot: isRoot\n    });\n  }\n/**\n * @param {Element} scope\n * @param {StyleNode} rules\n * @return {Object}\n */\n  hostAndRootPropertiesForScope(scope, rules) {\n    let hostProps = {}, rootProps = {}, self = this;\n    // note: active rules excludes non-matching @media rules\n    let cssBuild = rules && rules['__cssBuild'];\n    StyleUtil.forEachRule(rules, function(rule) {\n      // if scope is StyleDefaults, use _element for matchesSelector\n      self.whenHostOrRootRule(scope, rule, cssBuild, function(info) {\n        let element = scope._element || scope;\n        if (matchesSelector.call(element, info.selector)) {\n          if (info.isHost) {\n            self.collectProperties(rule, hostProps);\n          } else {\n            self.collectProperties(rule, rootProps);\n          }\n        }\n      });\n    }, null, true);\n    return {rootProps: rootProps, hostProps: hostProps};\n  }\n\n  /**\n   * @param {Element} element\n   * @param {Object} properties\n   * @param {string} scopeSelector\n   */\n  transformStyles(element, properties, scopeSelector) {\n    let self = this;\n    let {is, typeExtension} = StyleUtil.getIsExtends(element);\n    let hostSelector = StyleTransformer\n      ._calcHostScope(is, typeExtension);\n    let rxHostSelector = element.extends ?\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\n      hostSelector;\n    let hostRx = new RegExp(RX.HOST_PREFIX + rxHostSelector +\n      RX.HOST_SUFFIX);\n    let rules = StyleInfo.get(element).styleRules;\n    let keyframeTransforms =\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\n    return StyleTransformer.elementStyles(element, rules, function(rule) {\n      self.applyProperties(rule, properties);\n      if (!nativeShadow &&\n          !StyleUtil.isKeyframesSelector(rule) &&\n          rule['cssText']) {\n        // NOTE: keyframe transforms only scope munge animation names, so it\n        // is not necessary to apply them in ShadowDOM.\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n      }\n    });\n  }\n\n  /**\n   * @param {Element} element\n   * @param {StyleNode} rules\n   * @param {string} scopeSelector\n   * @return {Object}\n   */\n  _elementKeyframeTransforms(element, rules, scopeSelector) {\n    let keyframesRules = rules._keyframes;\n    let keyframeTransforms = {};\n    if (!nativeShadow && keyframesRules) {\n      // For non-ShadowDOM, we transform all known keyframes rules in\n      // advance for the current scope. This allows us to catch keyframes\n      // rules that appear anywhere in the stylesheet:\n      for (let i = 0, keyframesRule = keyframesRules[i];\n           i < keyframesRules.length;\n           keyframesRule = keyframesRules[++i]) {\n        this._scopeKeyframes(keyframesRule, scopeSelector);\n        keyframeTransforms[keyframesRule['keyframesName']] =\n            this._keyframesRuleTransformer(keyframesRule);\n      }\n    }\n    return keyframeTransforms;\n  }\n\n  // Generate a factory for transforming a chunk of CSS text to handle a\n  // particular scoped keyframes rule.\n  /**\n   * @param {StyleNode} keyframesRule\n   * @return {function(string):string}\n   */\n  _keyframesRuleTransformer(keyframesRule) {\n    return function(cssText) {\n      return cssText.replace(\n          keyframesRule.keyframesNameRx,\n          keyframesRule.transformedKeyframesName);\n    };\n  }\n\n/**\n * Transforms `@keyframes` names to be unique for the current host.\n * Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n *\n * @param {StyleNode} rule\n * @param {string} scopeId\n */\n  _scopeKeyframes(rule, scopeId) {\n    rule.keyframesNameRx = new RegExp(rule['keyframesName'], 'g');\n    rule.transformedKeyframesName = rule['keyframesName'] + '-' + scopeId;\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    rule['selector'] = rule.transformedSelector.replace(\n        rule['keyframesName'], rule.transformedKeyframesName);\n  }\n\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n  // host selector: x-foo.wide -> .x-foo-42.wide\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\n  // (x-foo) to scope :host rules; this helps make property host rules\n  // have low specificity. They are overrideable by class selectors but,\n  // unfortunately, not by type selectors (e.g. overriding via\n  // `.special` is ok, but not by `x-foo`).\n  /**\n   * @param {StyleNode} rule\n   * @param {RegExp} hostRx\n   * @param {string} hostSelector\n   * @param {string} scopeId\n   */\n  _scopeSelector(rule, hostRx, hostSelector, scopeId) {\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    let selector = rule.transformedSelector;\n    let scope = '.' + scopeId;\n    let parts = selector.split(',');\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\n      parts[i] = p.match(hostRx) ?\n        p.replace(hostSelector, scope) :\n        scope + ' ' + p;\n    }\n    rule['selector'] = parts.join(',');\n  }\n\n  /**\n   * @param {Element} element\n   * @param {string} selector\n   * @param {string} old\n   */\n  applyElementScopeSelector(element, selector, old) {\n    let c = element.getAttribute('class') || '';\n    let v = c;\n    if (old) {\n      v = c.replace(\n        new RegExp('\\\\s*' + XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\n    }\n    v += (v ? ' ' : '') + XSCOPE_NAME + ' ' + selector;\n    if (c !== v) {\n      StyleUtil.setElementClassRaw(element, v);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element\n   * @param {Object} properties\n   * @param {string} selector\n   * @param {HTMLStyleElement} style\n   * @return {HTMLStyleElement}\n   */\n  applyElementStyle(element, properties, selector, style) {\n    // calculate cssText to apply\n    let cssText = style ? style.textContent || '' :\n      this.transformStyles(element, properties, selector);\n    // if shady and we have a cached style that is not style, decrement\n    let styleInfo = StyleInfo.get(element);\n    let s = styleInfo.customStyle;\n    if (s && !nativeShadow && (s !== style)) {\n      s['_useCount']--;\n      if (s['_useCount'] <= 0 && s.parentNode) {\n        s.parentNode.removeChild(s);\n      }\n    }\n    // apply styling always under native or if we generated style\n    // or the cached style is not in document(!)\n    if (nativeShadow) {\n      // update existing style only under native\n      if (styleInfo.customStyle) {\n        styleInfo.customStyle.textContent = cssText;\n        style = styleInfo.customStyle;\n      // otherwise, if we have css to apply, do so\n      } else if (cssText) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        style = StyleUtil.applyCss(cssText, selector, element.shadowRoot,\n          styleInfo.placeholder);\n      }\n    } else {\n      // shady and no cache hit\n      if (!style) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        if (cssText) {\n          style = StyleUtil.applyCss(cssText, selector, null,\n            styleInfo.placeholder);\n        }\n      // shady and cache hit but not in document\n      } else if (!style.parentNode) {\n        if (IS_IE && cssText.indexOf('@media') > -1) {\n            // @media rules may be stale in IE 10 and 11\n            // refresh the text content of the style to revalidate them.\n          style.textContent = cssText;\n        }\n        StyleUtil.applyStyle(style, null, styleInfo.placeholder);\n      }\n    }\n    // ensure this style is our custom style and increment its use count.\n    if (style) {\n      style['_useCount'] = style['_useCount'] || 0;\n      // increment use count if we changed styles\n      if (styleInfo.customStyle != style) {\n        style['_useCount']++;\n      }\n      styleInfo.customStyle = style;\n    }\n    return style;\n  }\n\n  /**\n   * @param {Element} style\n   * @param {Object} properties\n   */\n  applyCustomStyle(style, properties) {\n    let rules = StyleUtil.rulesForStyle(/** @type {HTMLStyleElement} */(style));\n    let self = this;\n    style.textContent = StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      let css = rule['cssText'] = rule['parsedCssText'];\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\n        // remove property assignments\n        // so next function isn't confused\n        // NOTE: we have 3 categories of css:\n        // (1) normal properties,\n        // (2) custom property assignments (--foo: red;),\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\n        // In elements, 1 and 3 are separated for efficiency; here they\n        // are not and this makes this case unique.\n        css = removeCustomPropAssignment(/** @type {string} */(css));\n        // replace with reified properties, scenario is same as mixin\n        rule['cssText'] = self.valueForProperties(css, properties);\n      }\n    });\n  }\n}\n\n/**\n * @param {number} n\n * @param {Array<number>} bits\n */\nfunction addToBitMask(n, bits) {\n  let o = parseInt(n / 32, 10);\n  let v = 1 << (n % 32);\n  bits[o] = (bits[o] || 0) | v;\n}\n\nexport default new StyleProperties();","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {applyStylePlaceHolder} from './style-util.js';\nimport {nativeShadow} from './style-settings.js';\n\n/** @type {Object<string, !Node>} */\nlet placeholderMap = {};\n\n/**\n * @const {CustomElementRegistry}\n */\nconst ce = window['customElements'];\nif (ce && !nativeShadow) {\n  /**\n   * @const {function(this:CustomElementRegistry, string,function(new:HTMLElement),{extends: string}=)}\n   */\n  const origDefine = ce['define'];\n  /**\n   * @param {string} name\n   * @param {function(new:HTMLElement)} clazz\n   * @param {{extends: string}=} options\n   * @return {function(new:HTMLElement)}\n   */\n  const wrappedDefine = (name, clazz, options) => {\n    placeholderMap[name] = applyStylePlaceHolder(name);\n    return origDefine.call(/** @type {!CustomElementRegistry} */(ce), name, clazz, options);\n  }\n  ce['define'] = wrappedDefine;\n}\n\nexport default placeholderMap;\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n'use strict';\n\nexport default class StyleCache {\n  constructor(typeMax = 100) {\n    // map element name -> [{properties, styleElement, scopeSelector}]\n    this.cache = {};\n    this.typeMax = typeMax;\n  }\n\n  _validate(cacheEntry, properties, ownPropertyNames) {\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\n      let pn = ownPropertyNames[idx];\n      if (cacheEntry.properties[pn] !== properties[pn]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  store(tagname, properties, styleElement, scopeSelector) {\n    let list = this.cache[tagname] || [];\n    list.push({properties, styleElement, scopeSelector});\n    if (list.length > this.typeMax) {\n      list.shift();\n    }\n    this.cache[tagname] = list;\n  }\n\n  fetch(tagname, properties, ownPropertyNames) {\n    let list = this.cache[tagname];\n    if (!list) {\n      return;\n    }\n    // reverse list for most-recent lookups\n    for (let idx = list.length - 1; idx >= 0; idx--) {\n      let entry = list[idx];\n      if (this._validate(entry, properties, ownPropertyNames)) {\n        return entry;\n      }\n    }\n  }\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport {getIsExtends} from './style-util.js';\n\nexport let flush = function() {};\n\n/**\n * @param {HTMLElement} element\n * @return {!Array<string>}\n */\nfunction getClasses(element) {\n  let classes = [];\n  if (element.classList) {\n    classes = Array.from(element.classList);\n  } else if (element instanceof window['SVGElement'] && element.hasAttribute('class')) {\n    classes = element.getAttribute('class').split(/\\s+/);\n  }\n  return classes;\n}\n\n/**\n * @param {HTMLElement} element\n * @return {string}\n */\nfunction getCurrentScope(element) {\n  let classes = getClasses(element);\n  let idx = classes.indexOf(StyleTransformer.SCOPE_NAME);\n  if (idx > -1) {\n    return classes[idx + 1];\n  }\n  return '';\n}\n\n/**\n * @param {Array<MutationRecord|null>|null} mxns\n */\nfunction handler(mxns) {\n  for (let x=0; x < mxns.length; x++) {\n    let mxn = mxns[x];\n    if (mxn.target === document.documentElement ||\n      mxn.target === document.head) {\n      continue;\n    }\n    for (let i=0; i < mxn.addedNodes.length; i++) {\n      let n = mxn.addedNodes[i];\n      if (n.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      n = /** @type {HTMLElement} */(n); // eslint-disable-line no-self-assign\n      let root = n.getRootNode();\n      let currentScope = getCurrentScope(n);\n      // node was scoped, but now is in document\n      if (currentScope && root === n.ownerDocument) {\n        StyleTransformer.dom(n, currentScope, true);\n      } else if (root.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n        let newScope;\n        let host = /** @type {ShadowRoot} */(root).host;\n        // element may no longer be in a shadowroot\n        if (!host) {\n          continue;\n        }\n        newScope = getIsExtends(host).is;\n        if (currentScope === newScope) {\n          // make sure all the subtree elements are scoped correctly\n          let unscoped = window['ShadyDOM']['nativeMethods']['querySelectorAll'].call(\n            n, `:not(.${StyleTransformer.SCOPE_NAME})`);\n          for (let j = 0; j < unscoped.length; j++) {\n            StyleTransformer.element(unscoped[j], currentScope);\n          }\n          continue;\n        }\n        if (currentScope) {\n          StyleTransformer.dom(n, currentScope, true);\n        }\n        StyleTransformer.dom(n, newScope);\n      }\n    }\n  }\n}\n\nif (!nativeShadow) {\n  let observer = new MutationObserver(handler);\n  let start = (node) => {\n    observer.observe(node, {childList: true, subtree: true});\n  }\n  let nativeCustomElements = (window['customElements'] &&\n    !window['customElements']['polyfillWrapFlushCallback']);\n  // need to start immediately with native custom elements\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\n  // excessive mutations may be observed; this can be optimized via cooperation\n  // with the HTMLImports polyfill.\n  if (nativeCustomElements) {\n    start(document);\n  } else {\n    let delayedStart = () => {\n      start(document.body);\n    }\n    // use polyfill timing if it's available\n    if (window['HTMLImports']) {\n      window['HTMLImports']['whenReady'](delayedStart);\n    // otherwise push beyond native imports being ready\n    // which requires RAF + readystate interactive.\n    } else {\n      requestAnimationFrame(function() {\n        if (document.readyState === 'loading') {\n          let listener = function() {\n            delayedStart();\n            document.removeEventListener('readystatechange', listener);\n          }\n          document.addEventListener('readystatechange', listener);\n        } else {\n          delayedStart();\n        }\n      });\n    }\n  }\n\n  flush = function() {\n    handler(observer.takeRecords());\n  }\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\nimport templateMap from './template-map.js';\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\n\n/*\n * Utilities for handling invalidating apply-shim mixins for a given template.\n *\n * The invalidation strategy involves keeping track of the \"current\" version of a template's mixins, and updating that count when a mixin is invalidated.\n * The template\n */\n\n/** @const {string} */\nconst CURRENT_VERSION = '_applyShimCurrentVersion';\n\n/** @const {string} */\nconst NEXT_VERSION = '_applyShimNextVersion';\n\n/** @const {string} */\nconst VALIDATING_VERSION = '_applyShimValidatingVersion';\n\n/**\n * @const {Promise<void>}\n */\nconst promise = Promise.resolve();\n\n/**\n * @param {string} elementName\n */\nexport function invalidate(elementName){\n  let template = templateMap[elementName];\n  if (template) {\n    invalidateTemplate(template);\n  }\n}\n\n/**\n * This function can be called multiple times to mark a template invalid\n * and signal that the style inside must be regenerated.\n *\n * Use `startValidatingTemplate` to begin an asynchronous validation cycle.\n * During that cycle, call `templateIsValidating` to see if the template must\n * be revalidated\n * @param {HTMLTemplateElement} template\n */\nexport function invalidateTemplate(template) {\n  // default the current version to 0\n  template[CURRENT_VERSION] = template[CURRENT_VERSION] || 0;\n  // ensure the \"validating for\" flag exists\n  template[VALIDATING_VERSION] = template[VALIDATING_VERSION] || 0;\n  // increment the next version\n  template[NEXT_VERSION] = (template[NEXT_VERSION] || 0) + 1;\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValid(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValid(template);\n  }\n  return true;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValid(template) {\n  return template[CURRENT_VERSION] === template[NEXT_VERSION];\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValidating(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValidating(template);\n  }\n  return false;\n}\n\n/**\n * Returns true if the template is currently invalid and `startValidating` has been called since the last invalidation.\n * If false, the template must be validated.\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValidating(template) {\n  return !templateIsValid(template) && template[VALIDATING_VERSION] === template[NEXT_VERSION];\n}\n\n/**\n * the template is marked as `validating` for one microtask so that all instances\n * found in the tree crawl of `applyStyle` will update themselves,\n * but the template will only be updated once.\n * @param {string} elementName\n*/\nexport function startValidating(elementName) {\n  let template = templateMap[elementName];\n  startValidatingTemplate(template);\n}\n\n/**\n * Begin an asynchronous invalidation cycle.\n * This should be called after every validation of a template\n *\n * After one microtask, the template will be marked as valid until the next call to `invalidateTemplate`\n * @param {HTMLTemplateElement} template\n */\nexport function startValidatingTemplate(template) {\n  // remember that the current \"next version\" is the reason for this validation cycle\n  template[VALIDATING_VERSION] = template[NEXT_VERSION];\n  // however, there only needs to be one async task to clear the counters\n  if (!template._validating) {\n    template._validating = true;\n    promise.then(function() {\n      // sync the current version to let future invalidations cause a refresh cycle\n      template[CURRENT_VERSION] = template[NEXT_VERSION];\n      template._validating = false;\n    });\n  }\n}\n\n/**\n * @return {boolean}\n */\nexport function elementsAreInvalid() {\n  for (let elementName in templateMap) {\n    let template = templateMap[elementName];\n    if (!templateIsValid(template)) {\n      return true;\n    }\n  }\n  return false;\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport { MIXIN_MATCH, VAR_ASSIGN } from './common-regex.js';\n\n/**\n * @param {Element} element\n * @param {Object=} properties\n */\nexport function updateNativeProperties(element, properties) {\n  // remove previous properties\n  for (let p in properties) {\n    // NOTE: for bc with shim, don't apply null values.\n    if (p === null) {\n      element.style.removeProperty(p);\n    } else {\n      element.style.setProperty(p, properties[p]);\n    }\n  }\n}\n\n/**\n * @param {Element} element\n * @param {string} property\n * @return {string}\n */\nexport function getComputedStyleValue(element, property) {\n  /**\n   * @const {string}\n   */\n  const value = window.getComputedStyle(element).getPropertyValue(property);\n  if (!value) {\n    return '';\n  } else {\n    return value.trim();\n  }\n}\n\n/**\n * return true if `cssText` contains a mixin definition or consumption\n * @param {string} cssText\n * @return {boolean}\n */\nexport function detectMixin(cssText) {\n  const has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText);\n  // reset state of the regexes\n  MIXIN_MATCH.lastIndex = 0;\n  VAR_ASSIGN.lastIndex = 0;\n  return has;\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport documentWait from './document-wait.js';\n\n/**\n * @typedef {HTMLStyleElement | {getStyle: function():HTMLStyleElement}}\n */\nexport let CustomStyleProvider;\n\nconst SEEN_MARKER = '__seenByShadyCSS';\nconst CACHED_STYLE = '__shadyCSSCachedStyle';\n\n/** @type {?function(!HTMLStyleElement)} */\nlet transformFn = null;\n\n/** @type {?function()} */\nlet validateFn = null;\n\n/**\nThis interface is provided to add document-level <style> elements to ShadyCSS for processing.\nThese styles must be processed by ShadyCSS to simulate ShadowRoot upper-bound encapsulation from outside styles\nIn addition, these styles may also need to be processed for @apply rules and CSS Custom Properties\n\nTo add document-level styles to ShadyCSS, one can call `ShadyCSS.addDocumentStyle(styleElement)` or `ShadyCSS.addDocumentStyle({getStyle: () => styleElement})`\n\nIn addition, if the process used to discover document-level styles can be synchronously flushed, one should set `ShadyCSS.documentStyleFlush`.\nThis function will be called when calculating styles.\n\nAn example usage of the document-level styling api can be found in `examples/document-style-lib.js`\n\n@unrestricted\n*/\nexport default class CustomStyleInterface {\n  constructor() {\n    /** @type {!Array<!CustomStyleProvider>} */\n    this['customStyles'] = [];\n    this['enqueued'] = false;\n  }\n  /**\n   * Queue a validation for new custom styles to batch style recalculations\n   */\n  enqueueDocumentValidation() {\n    if (this['enqueued'] || !validateFn) {\n      return;\n    }\n    this['enqueued'] = true;\n    documentWait(validateFn);\n  }\n  /**\n   * @param {!HTMLStyleElement} style\n   */\n  addCustomStyle(style) {\n    if (!style[SEEN_MARKER]) {\n      style[SEEN_MARKER] = true;\n      this['customStyles'].push(style);\n      this.enqueueDocumentValidation();\n    }\n  }\n  /**\n   * @param {!CustomStyleProvider} customStyle\n   * @return {HTMLStyleElement}\n   */\n  getStyleForCustomStyle(customStyle) {\n    if (customStyle[CACHED_STYLE]) {\n      return customStyle[CACHED_STYLE];\n    }\n    let style;\n    if (customStyle['getStyle']) {\n      style = customStyle['getStyle']();\n    } else {\n      style = customStyle;\n    }\n    return style;\n  }\n  /**\n   * @return {!Array<!CustomStyleProvider>}\n   */\n  processStyles() {\n    const cs = this['customStyles'];\n    for (let i = 0; i < cs.length; i++) {\n      const customStyle = cs[i];\n      if (customStyle[CACHED_STYLE]) {\n        continue;\n      }\n      const style = this.getStyleForCustomStyle(customStyle);\n      if (style) {\n        // HTMLImports polyfill may have cloned the style into the main document,\n        // which is referenced with __appliedElement.\n        const styleToTransform = /** @type {!HTMLStyleElement} */(style['__appliedElement'] || style);\n        if (transformFn) {\n          transformFn(styleToTransform);\n        }\n        customStyle[CACHED_STYLE] = styleToTransform;\n      }\n    }\n    return cs;\n  }\n}\n\nCustomStyleInterface.prototype['addCustomStyle'] = CustomStyleInterface.prototype.addCustomStyle;\nCustomStyleInterface.prototype['getStyleForCustomStyle'] = CustomStyleInterface.prototype.getStyleForCustomStyle;\nCustomStyleInterface.prototype['processStyles'] = CustomStyleInterface.prototype.processStyles;\n\nObject.defineProperties(CustomStyleInterface.prototype, {\n  'transformCallback': {\n    /** @return {?function(!HTMLStyleElement)} */\n    get() {\n      return transformFn;\n    },\n    /** @param {?function(!HTMLStyleElement)} fn */\n    set(fn) {\n      transformFn = fn;\n    }\n  },\n  'validateCallback': {\n    /** @return {?function()} */\n    get() {\n      return validateFn;\n    },\n    /**\n     * @param {?function()} fn\n     * @this {CustomStyleInterface}\n     */\n    set(fn) {\n      let needsEnqueue = false;\n      if (!validateFn) {\n        needsEnqueue = true;\n      }\n      validateFn = fn;\n      if (needsEnqueue) {\n        this.enqueueDocumentValidation();\n      }\n    },\n  }\n})\n\n/** @typedef {{\n * customStyles: !Array<!CustomStyleProvider>,\n * addCustomStyle: function(!CustomStyleProvider),\n * getStyleForCustomStyle: function(!CustomStyleProvider): HTMLStyleElement,\n * findStyles: function(),\n * transformCallback: ?function(!HTMLStyleElement),\n * validateCallback: ?function()\n * }}\n */\nexport let CustomStyleInterfaceInterface;\n"],"sourceRoot":""}