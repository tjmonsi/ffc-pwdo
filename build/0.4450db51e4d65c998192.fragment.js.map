{"version":3,"sources":["webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./app/node_modules/@polymer/polymer/lib/elements/dom-repeat.js","webpack:///./app/node_modules/@polymer/polymer/lib/utils/gestures.js","webpack:///./app/node_modules/@polymer/polymer/lib/utils/templatize.js","webpack:///./app/node_modules/@polymer/polymer/lib/utils/flush.js","webpack:///./app/node_modules/@polymer/polymer/lib/mixins/mutable-data.js","webpack:///./app/node_modules/@polymer/polymer/lib/mixins/gesture-event-listeners.js"],"names":["module","exports","useSourceMap","list","toString","this","map","item","content","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","i","modules","mediaQuery","alreadyImportedModules","length","id","push","_polymerElement","__webpack_require__","_templatize","_debounce","_flush","_mutableData","_path","_async","TemplateInstanceBase$0","domRepeatBase","OptionalMutableData","Element","DomRepeat","_classCallCheck","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","__instances","__limit","Infinity","__pool","__renderDebouncer","__itemsIdxToInstIdx","__chunkCount","__lastChunkTime","__sortFn","__filterFn","__observePaths","__ctor","__isDetached","template","items","type","Array","as","String","value","indexAs","itemsIndexAs","sort","Function","observer","filter","observe","delay","Number","renderedItemCount","notify","readOnly","initialCount","targetFramerate","_targetFrameTime","computed","_get","prototype","__detachInstance","parent","parentNode","__attachInstance","_this2","querySelector","MutationObserver","Error","disconnect","__render","childList","instanceProps","Templatize","templatize","mutableData","parentModel","forwardHostProp","prop","inst","i$","notifyInstanceProp","matches","idx","path","translate","notifyPath","__dataHost","_methodHost","methodHost","__getMethodHost","apply","arguments","__debounceRender","rate","Math","ceil","performance","now","__requestRenderChunk","_this3","requestAnimationFrame","__renderChunk","currChunkTime","ratio","round","replace","split","change","isArray","console","warn","__handleItemPath","__initializeChunking","substring","indexOf","paths","fn","undefined","Debouncer","debounce","timeOut","after","microTask","bind","enqueueDebouncer","flush","__ensureTemplatized","__applyFullRefresh","_setRenderedItemCount","dispatchEvent","CustomEvent","bubbles","composed","__tryRenderChunk","_this4","isntIdxToItemsIdx","array","a","b","itemsIdxToInstIdx","instIdx","limit","min","itemIdx","_setPendingProperty","_flushProperties","__insertInstance","__detachAndRemoveInstance","children","el","root","appendChild","insertBefore","splice","model","pop","__stampInstance","beforeRow","beforeNode","hidden","_showHideChildren","itemsPath","slice","dot","itemsIdx","parseInt","itemSubPath","__handleObservedPaths","itemPath","_setPendingPropertyOrPath","instance","modelForElement","customElements","define","is","deepTargetFind","_findOriginalTarget","_handleNative","_handleTouchAction","addListener","removeListener","_add","_remove","register","_findRecognizerByEvent","setTouchAction","resetMouseCanceller","POINTERSTATE","mouse","mouseIgnoreJob","HAS_NATIVE_TA","document","head","style","touchAction","GESTURE_KEY","HANDLED_OBJ","TOUCH_ACTION","MOUSE_TIMEOUT","MOUSE_EVENTS","MOUSE_WHICH_TO_BUTTONS","MOUSE_HAS_BUTTONS","MouseEvent","buttons","e","SUPPORTS_PASSIVE","opts","defineProperty","get","window","addEventListener","removeEventListener","IS_TOUCH_ONLY","navigator","userAgent","match","GestureRecognizer","reset","mousedown","mousemove","mouseup","touchstart","touchmove","touchend","click","mouseCanceller","mouseEvent","sc","sourceCapabilities","firesTouchEvents","skip","composedPath","target","preventDefault","stopPropagation","setupTeardownMouseCanceller","setup","en","events","hasLeftMouseButton","ev","which","Boolean","button","touch","x","y","scrollDecided","trackDocument","stateObj","movefn","upfn","untrackDocument","passive","gestures","recognizers","node","elementFromPoint","next","shadowRoot","ShadyDOM","handled","gobj","currentTarget","gs","t","changedTouches","touches","identifier","r","name","flow","start","clientX","clientY","ta","n","firstTouchAction","prevent","dx","abs","dy","cancelable","evType","handler","recognizer","deps","dep","gd","_count","recog","emits","evName","j","_fire","detail","Event","defaultPrevented","preventer","sourceEvent","info","end","self","event","state","started","moves","addMove","move","shift","hasMovedEnough","ct","secondlast","lastmove","ddx","ddy","hover","NaN","save","forward","isNaN","nodeType","Node","ELEMENT_NODE","bcr","getBoundingClientRect","pageX","pageY","left","right","top","bottom","isSyntheticClick","findOriginalTarget","add","remove","_propertyEffects","newInstance","HTMLTemplateElementExtension","create","HTMLTemplateElement","constructor","writable","DataTemplate","PropertyEffects","MutableDataTemplate","MutableData","base","_class","TemplateInstanceBase","props","_configureProperties","_stampTemplate","firstChild","nextSibling","__templatizeInstance","__templatizeOwner","__hideTemplateChildren__","options","__templatizeOptions","_enableProperties","iprop","hprop","__hostProps","_enqueueClient","eventName","_addEventListenerToNode","templateHost","hide","c","TEXT_NODE","__polymerTextContent__","textContent","__polymerDisplay__","display","__parentModel","MutableTemplateInstanceBase","createTemplatizerClass","templateInfo","klass","_inherits","_bindTemplate","hostProps","userNotifyInstanceProp","_addPropertyEffect","PROPERTY_EFFECT_TYPES","NOTIFY","createNotifyInstancePropEffect","addNotifyEffects","addPropagateEffects","userForwardHostProp","templatizeTemplateClass","_base4","TemplatizedTemplate","PROPAGATE","createForwardHostPropEffect","_createNotifyingProperty","setPrototypeOf","upgradeTemplate","__dataProto","assign","__data","__dataTemp","__dataPending","__dataOld","hostProp","instProp","owner","_parseTemplate","baseClass","templatizeInstanceClass","TemplateInstance","findMethodHost","debouncerQueue","debouncer","flushDebouncers","didFlush","setTimeout","shadyDOM","debouncers","ShadyCSS","ScopingShim","_mixin","mutablePropertyChange","property","old","isObject","_typeof","shouldChange","dedupingMixin","superClass","_superClass","_createClass","key","_superClass2","_mutablePropertyChange","GestureEventListeners"],"mappings":"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","file":"0.4450db51e4d65c998192.fragment.js","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","import { Element } from '../../polymer-element.js';\nimport { TemplateInstanceBase as TemplateInstanceBase$0, Templatize } from '../utils/templatize.js';\nimport { Debouncer } from '../utils/debounce.js';\nimport { enqueueDebouncer, flush } from '../utils/flush.js';\nimport { OptionalMutableData } from '../mixins/mutable-data.js';\nimport { matches, translate } from '../utils/path.js';\nimport { timeOut, microTask } from '../utils/async.js';\n\nlet TemplateInstanceBase = TemplateInstanceBase$0; // eslint-disable-line\n\n/**\n * @constructor\n * @implements {Polymer_OptionalMutableData}\n * @extends {Polymer.Element}\n */\nconst domRepeatBase = OptionalMutableData(Element);\n\n/**\n * The `<dom-repeat>` element will automatically stamp and binds one instance\n * of template content to each object in a user-provided array.\n * `dom-repeat` accepts an `items` property, and one instance of the template\n * is stamped for each item into the DOM at the location of the `dom-repeat`\n * element.  The `item` property will be set on each instance's binding\n * scope, thus templates should bind to sub-properties of `item`.\n *\n * Example:\n *\n * ```html\n * <dom-module id=\"employee-list\">\n *\n *   <template>\n *\n *     <div> Employee list: </div>\n *     <template is=\"dom-repeat\" items=\"{{employees}}\">\n *         <div>First name: <span>{{item.first}}</span></div>\n *         <div>Last name: <span>{{item.last}}</span></div>\n *     </template>\n *\n *   </template>\n *\n *   <script>\n *     Polymer({\n *       is: 'employee-list',\n *       ready: function() {\n *         this.employees = [\n *             {first: 'Bob', last: 'Smith'},\n *             {first: 'Sally', last: 'Johnson'},\n *             ...\n *         ];\n *       }\n *     });\n *   < /script>\n *\n * </dom-module>\n * ```\n *\n * Notifications for changes to items sub-properties will be forwarded to template\n * instances, which will update via the normal structured data notification system.\n *\n * Mutations to the `items` array itself should be made using the Array\n * mutation API's on `Polymer.Base` (`push`, `pop`, `splice`, `shift`,\n * `unshift`), and template instances will be kept in sync with the data in the\n * array.\n *\n * Events caught by event handlers within the `dom-repeat` template will be\n * decorated with a `model` property, which represents the binding scope for\n * each template instance.  The model is an instance of Polymer.Base, and should\n * be used to manipulate data on the instance, for example\n * `event.model.set('item.checked', true);`.\n *\n * Alternatively, the model for a template instance for an element stamped by\n * a `dom-repeat` can be obtained using the `modelForElement` API on the\n * `dom-repeat` that stamped it, for example\n * `this.$.domRepeat.modelForElement(event.target).set('item.checked', true);`.\n * This may be useful for manipulating instance data of event targets obtained\n * by event handlers on parents of the `dom-repeat` (event delegation).\n *\n * A view-specific filter/sort may be applied to each `dom-repeat` by supplying a\n * `filter` and/or `sort` property.  This may be a string that names a function on\n * the host, or a function may be assigned to the property directly.  The functions\n * should implemented following the standard `Array` filter/sort API.\n *\n * In order to re-run the filter or sort functions based on changes to sub-fields\n * of `items`, the `observe` property may be set as a space-separated list of\n * `item` sub-fields that should cause a re-filter/sort when modified.  If\n * the filter or sort function depends on properties not contained in `items`,\n * the user should observe changes to those properties and call `render` to update\n * the view based on the dependency change.\n *\n * For example, for an `dom-repeat` with a filter of the following:\n *\n * ```js\n * isEngineer: function(item) {\n *     return item.type == 'engineer' || item.manager.type == 'engineer';\n * }\n * ```\n *\n * Then the `observe` property should be configured as follows:\n *\n * ```html\n * <template is=\"dom-repeat\" items=\"{{employees}}\"\n *           filter=\"isEngineer\" observe=\"type manager.type\">\n * ```\n *\n * @customElement\n * @polymer\n * @memberof Polymer\n * @extends {domRepeatBase}\n * @appliesMixin Polymer.OptionalMutableData\n * @summary Custom element for stamping instance of a template bound to\n *   items in an array.\n */\nclass DomRepeat extends domRepeatBase {\n\n  // Not needed to find template; can be removed once the analyzer\n  // can find the tag name from customElements.define call\n  static get is() { return 'dom-repeat'; }\n\n  static get template() { return null; }\n\n  static get properties() {\n\n    /**\n     * Fired whenever DOM is added or removed by this template (by\n     * default, rendering occurs lazily).  To force immediate rendering, call\n     * `render`.\n     *\n     * @event dom-change\n     */\n    return {\n\n      /**\n       * An array containing items determining how many instances of the template\n       * to stamp and that that each template instance should bind to.\n       */\n      items: {\n        type: Array\n      },\n\n      /**\n       * The name of the variable to add to the binding scope for the array\n       * element associated with a given template instance.\n       */\n      as: {\n        type: String,\n        value: 'item'\n      },\n\n      /**\n       * The name of the variable to add to the binding scope with the index\n       * of the instance in the sorted and filtered list of rendered items.\n       * Note, for the index in the `this.items` array, use the value of the\n       * `itemsIndexAs` property.\n       */\n      indexAs: {\n        type: String,\n        value: 'index'\n      },\n\n      /**\n       * The name of the variable to add to the binding scope with the index\n       * of the instance in the `this.items` array. Note, for the index of\n       * this instance in the sorted and filtered list of rendered items,\n       * use the value of the `indexAs` property.\n       */\n      itemsIndexAs: {\n        type: String,\n        value: 'itemsIndex'\n      },\n\n      /**\n       * A function that should determine the sort order of the items.  This\n       * property should either be provided as a string, indicating a method\n       * name on the element's host, or else be an actual function.  The\n       * function should match the sort function passed to `Array.sort`.\n       * Using a sort function has no effect on the underlying `items` array.\n       */\n      sort: {\n        type: Function,\n        observer: '__sortChanged'\n      },\n\n      /**\n       * A function that can be used to filter items out of the view.  This\n       * property should either be provided as a string, indicating a method\n       * name on the element's host, or else be an actual function.  The\n       * function should match the sort function passed to `Array.filter`.\n       * Using a filter function has no effect on the underlying `items` array.\n       */\n      filter: {\n        type: Function,\n        observer: '__filterChanged'\n      },\n\n      /**\n       * When using a `filter` or `sort` function, the `observe` property\n       * should be set to a space-separated list of the names of item\n       * sub-fields that should trigger a re-sort or re-filter when changed.\n       * These should generally be fields of `item` that the sort or filter\n       * function depends on.\n       */\n      observe: {\n        type: String,\n        observer: '__observeChanged'\n      },\n\n      /**\n       * When using a `filter` or `sort` function, the `delay` property\n       * determines a debounce time after a change to observed item\n       * properties that must pass before the filter or sort is re-run.\n       * This is useful in rate-limiting shuffing of the view when\n       * item changes may be frequent.\n       */\n      delay: Number,\n\n      /**\n       * Count of currently rendered items after `filter` (if any) has been applied.\n       * If \"chunking mode\" is enabled, `renderedItemCount` is updated each time a\n       * set of template instances is rendered.\n       *\n       */\n      renderedItemCount: {\n        type: Number,\n        notify: true,\n        readOnly: true\n      },\n\n      /**\n       * Defines an initial count of template instances to render after setting\n       * the `items` array, before the next paint, and puts the `dom-repeat`\n       * into \"chunking mode\".  The remaining items will be created and rendered\n       * incrementally at each animation frame therof until all instances have\n       * been rendered.\n       */\n      initialCount: {\n        type: Number,\n        observer: '__initializeChunking'\n      },\n\n      /**\n       * When `initialCount` is used, this property defines a frame rate to\n       * target by throttling the number of instances rendered each frame to\n       * not exceed the budget for the target frame rate.  Setting this to a\n       * higher number will allow lower latency and higher throughput for\n       * things like event handlers, but will result in a longer time for the\n       * remaining items to complete rendering.\n       */\n      targetFramerate: {\n        type: Number,\n        value: 20\n      },\n\n      _targetFrameTime: {\n        type: Number,\n        computed: '__computeFrameTime(targetFramerate)'\n      }\n\n    };\n\n  }\n\n  static get observers() {\n    return [ '__itemsChanged(items.*)' ];\n  }\n\n  constructor() {\n    super();\n    this.__instances = [];\n    this.__limit = Infinity;\n    this.__pool = [];\n    this.__renderDebouncer = null;\n    this.__itemsIdxToInstIdx = {};\n    this.__chunkCount = null;\n    this.__lastChunkTime = null;\n    this.__sortFn = null;\n    this.__filterFn = null;\n    this.__observePaths = null;\n    this.__ctor = null;\n    this.__isDetached = true;\n    this.template = null;\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__isDetached = true;\n    for (let i=0; i<this.__instances.length; i++) {\n      this.__detachInstance(i);\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    // only perform attachment if the element was previously detached.\n    if (this.__isDetached) {\n      this.__isDetached = false;\n      let parent = this.parentNode;\n      for (let i=0; i<this.__instances.length; i++) {\n        this.__attachInstance(i, parent);\n      }\n    }\n  }\n\n  __ensureTemplatized() {\n    // Templatizing (generating the instance constructor) needs to wait\n    // until ready, since won't have its template content handed back to\n    // it until then\n    if (!this.__ctor) {\n      let template = this.template = this.querySelector('template');\n      if (!template) {\n        // // Wait until childList changes and template should be there by then\n        let observer = new MutationObserver(() => {\n          if (this.querySelector('template')) {\n            observer.disconnect();\n            this.__render();\n          } else {\n            throw new Error('dom-repeat requires a <template> child');\n          }\n        });\n        observer.observe(this, {childList: true});\n        return false;\n      }\n      // Template instance props that should be excluded from forwarding\n      let instanceProps = {};\n      instanceProps[this.as] = true;\n      instanceProps[this.indexAs] = true;\n      instanceProps[this.itemsIndexAs] = true;\n      this.__ctor = Templatize.templatize(template, this, {\n        mutableData: this.mutableData,\n        parentModel: true,\n        instanceProps: instanceProps,\n        /**\n         * @this {this}\n         * @param {string} prop Property to set\n         * @param {*} value Value to set property to\n         */\n        forwardHostProp: function(prop, value) {\n          let i$ = this.__instances;\n          for (let i=0, inst; (i<i$.length) && (inst=i$[i]); i++) {\n            inst.forwardHostProp(prop, value);\n          }\n        },\n        /**\n         * @this {this}\n         * @param {Object} inst Instance to notify\n         * @param {string} prop Property to notify\n         * @param {*} value Value to notify\n         */\n        notifyInstanceProp: function(inst, prop, value) {\n          if (matches(this.as, prop)) {\n            let idx = inst[this.itemsIndexAs];\n            if (prop == this.as) {\n              this.items[idx] = value;\n            }\n            let path = translate(this.as, 'items.' + idx, prop);\n            this.notifyPath(path, value);\n          }\n        }\n      });\n    }\n    return true;\n  }\n\n  __getMethodHost() {\n    // Technically this should be the owner of the outermost template.\n    // In shadow dom, this is always getRootNode().host, but we can\n    // approximate this via cooperation with our dataHost always setting\n    // `_methodHost` as long as there were bindings (or id's) on this\n    // instance causing it to get a dataHost.\n    return this.__dataHost._methodHost || this.__dataHost;\n  }\n\n  __sortChanged(sort) {\n    let methodHost = this.__getMethodHost();\n    this.__sortFn = sort && (typeof sort == 'function' ? sort :\n      function() { return methodHost[sort].apply(methodHost, arguments); });\n    if (this.items) {\n      this.__debounceRender(this.__render);\n    }\n  }\n\n  __filterChanged(filter) {\n    let methodHost = this.__getMethodHost();\n    this.__filterFn = filter && (typeof filter == 'function' ? filter :\n      function() { return methodHost[filter].apply(methodHost, arguments); });\n    if (this.items) {\n      this.__debounceRender(this.__render);\n    }\n  }\n\n  __computeFrameTime(rate) {\n    return Math.ceil(1000/rate);\n  }\n\n  __initializeChunking() {\n    if (this.initialCount) {\n      this.__limit = this.initialCount;\n      this.__chunkCount = this.initialCount;\n      this.__lastChunkTime = performance.now();\n    }\n  }\n\n  __tryRenderChunk() {\n    // Debounced so that multiple calls through `_render` between animation\n    // frames only queue one new rAF (e.g. array mutation & chunked render)\n    if (this.items && this.__limit < this.items.length) {\n      this.__debounceRender(this.__requestRenderChunk);\n    }\n  }\n\n  __requestRenderChunk() {\n    requestAnimationFrame(()=>this.__renderChunk());\n  }\n\n  __renderChunk() {\n    // Simple auto chunkSize throttling algorithm based on feedback loop:\n    // measure actual time between frames and scale chunk count by ratio\n    // of target/actual frame time\n    let currChunkTime = performance.now();\n    let ratio = this._targetFrameTime / (currChunkTime - this.__lastChunkTime);\n    this.__chunkCount = Math.round(this.__chunkCount * ratio) || 1;\n    this.__limit += this.__chunkCount;\n    this.__lastChunkTime = currChunkTime;\n    this.__debounceRender(this.__render);\n  }\n\n  __observeChanged() {\n    this.__observePaths = this.observe &&\n      this.observe.replace('.*', '.').split(' ');\n  }\n\n  __itemsChanged(change) {\n    if (this.items && !Array.isArray(this.items)) {\n      console.warn('dom-repeat expected array for `items`, found', this.items);\n    }\n    // If path was to an item (e.g. 'items.3' or 'items.3.foo'), forward the\n    // path to that instance synchronously (retuns false for non-item paths)\n    if (!this.__handleItemPath(change.path, change.value)) {\n      // Otherwise, the array was reset ('items') or spliced ('items.splices'),\n      // so queue a full refresh\n      this.__initializeChunking();\n      this.__debounceRender(this.__render);\n    }\n  }\n\n  __handleObservedPaths(path) {\n    if (this.__observePaths) {\n      path = path.substring(path.indexOf('.') + 1);\n      let paths = this.__observePaths;\n      for (let i=0; i<paths.length; i++) {\n        if (path.indexOf(paths[i]) === 0) {\n          this.__debounceRender(this.__render, this.delay);\n          return true;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {function(this:DomRepeat)} fn Function to debounce.\n   * @param {number=} delay Delay in ms to debounce by.\n   */\n  __debounceRender(fn, delay = 0) {\n    this.__renderDebouncer = Debouncer.debounce(\n          this.__renderDebouncer\n        , delay > 0 ? timeOut.after(delay) : microTask\n        , fn.bind(this));\n    enqueueDebouncer(this.__renderDebouncer);\n  }\n\n  /**\n   * Forces the element to render its content. Normally rendering is\n   * asynchronous to a provoking change. This is done for efficiency so\n   * that multiple changes trigger only a single render. The render method\n   * should be called if, for example, template rendering is required to\n   * validate application state.\n   */\n  render() {\n    // Queue this repeater, then flush all in order\n    this.__debounceRender(this.__render);\n    flush();\n  }\n\n  __render() {\n    if (!this.__ensureTemplatized()) {\n      // No template found yet\n      return;\n    }\n    this.__applyFullRefresh();\n    // Reset the pool\n    // TODO(kschaaf): Reuse pool across turns and nested templates\n    // Now that objects/arrays are re-evaluated when set, we can safely\n    // reuse pooled instances across turns, however we still need to decide\n    // semantics regarding how long to hold, how many to hold, etc.\n    this.__pool.length = 0;\n    // Set rendered item count\n    this._setRenderedItemCount(this.__instances.length);\n    // Notify users\n    this.dispatchEvent(new CustomEvent('dom-change', {\n      bubbles: true,\n      composed: true\n    }));\n    // Check to see if we need to render more items\n    this.__tryRenderChunk();\n  }\n\n  __applyFullRefresh() {\n    let items = this.items || [];\n    let isntIdxToItemsIdx = new Array(items.length);\n    for (let i=0; i<items.length; i++) {\n      isntIdxToItemsIdx[i] = i;\n    }\n    // Apply user filter\n    if (this.__filterFn) {\n      isntIdxToItemsIdx = isntIdxToItemsIdx.filter((i, idx, array) =>\n        this.__filterFn(items[i], idx, array));\n    }\n    // Apply user sort\n    if (this.__sortFn) {\n      isntIdxToItemsIdx.sort((a, b) => this.__sortFn(items[a], items[b]));\n    }\n    // items->inst map kept for item path forwarding\n    const itemsIdxToInstIdx = this.__itemsIdxToInstIdx = {};\n    let instIdx = 0;\n    // Generate instances and assign items\n    const limit = Math.min(isntIdxToItemsIdx.length, this.__limit);\n    for (; instIdx<limit; instIdx++) {\n      let inst = this.__instances[instIdx];\n      let itemIdx = isntIdxToItemsIdx[instIdx];\n      let item = items[itemIdx];\n      itemsIdxToInstIdx[itemIdx] = instIdx;\n      if (inst && instIdx < this.__limit) {\n        inst._setPendingProperty(this.as, item);\n        inst._setPendingProperty(this.indexAs, instIdx);\n        inst._setPendingProperty(this.itemsIndexAs, itemIdx);\n        inst._flushProperties();\n      } else {\n        this.__insertInstance(item, instIdx, itemIdx);\n      }\n    }\n    // Remove any extra instances from previous state\n    for (let i=this.__instances.length-1; i>=instIdx; i--) {\n      this.__detachAndRemoveInstance(i);\n    }\n  }\n\n  __detachInstance(idx) {\n    let inst = this.__instances[idx];\n    for (let i=0; i<inst.children.length; i++) {\n      let el = inst.children[i];\n      inst.root.appendChild(el);\n    }\n    return inst;\n  }\n\n  __attachInstance(idx, parent) {\n    let inst = this.__instances[idx];\n    parent.insertBefore(inst.root, this);\n  }\n\n  __detachAndRemoveInstance(idx) {\n    let inst = this.__detachInstance(idx);\n    if (inst) {\n      this.__pool.push(inst);\n    }\n    this.__instances.splice(idx, 1);\n  }\n\n  __stampInstance(item, instIdx, itemIdx) {\n    let model = {};\n    model[this.as] = item;\n    model[this.indexAs] = instIdx;\n    model[this.itemsIndexAs] = itemIdx;\n    return new this.__ctor(model);\n  }\n\n  __insertInstance(item, instIdx, itemIdx) {\n    let inst = this.__pool.pop();\n    if (inst) {\n      // TODO(kschaaf): If the pool is shared across turns, hostProps\n      // need to be re-set to reused instances in addition to item\n      inst._setPendingProperty(this.as, item);\n      inst._setPendingProperty(this.indexAs, instIdx);\n      inst._setPendingProperty(this.itemsIndexAs, itemIdx);\n      inst._flushProperties();\n    } else {\n      inst = this.__stampInstance(item, instIdx, itemIdx);\n    }\n    let beforeRow = this.__instances[instIdx + 1];\n    let beforeNode = beforeRow ? beforeRow.children[0] : this;\n    this.parentNode.insertBefore(inst.root, beforeNode);\n    this.__instances[instIdx] = inst;\n    return inst;\n  }\n\n  // Implements extension point from Templatize mixin\n  _showHideChildren(hidden) {\n    for (let i=0; i<this.__instances.length; i++) {\n      this.__instances[i]._showHideChildren(hidden);\n    }\n  }\n\n  // Called as a side effect of a host items.<key>.<path> path change,\n  // responsible for notifying item.<path> changes to inst for key\n  __handleItemPath(path, value) {\n    let itemsPath = path.slice(6); // 'items.'.length == 6\n    let dot = itemsPath.indexOf('.');\n    let itemsIdx = dot < 0 ? itemsPath : itemsPath.substring(0, dot);\n    // If path was index into array...\n    if (itemsIdx == parseInt(itemsIdx, 10)) {\n      let itemSubPath = dot < 0 ? '' : itemsPath.substring(dot+1);\n      // If the path is observed, it will trigger a full refresh\n      this.__handleObservedPaths(itemSubPath);\n      // Note, even if a rull refresh is triggered, always do the path\n      // notification because unless mutableData is used for dom-repeat\n      // and all elements in the instance subtree, a full refresh may\n      // not trigger the proper update.\n      let instIdx = this.__itemsIdxToInstIdx[itemsIdx];\n      let inst = this.__instances[instIdx];\n      if (inst) {\n        let itemPath = this.as + (itemSubPath ? '.' + itemSubPath : '');\n        // This is effectively `notifyPath`, but avoids some of the overhead\n        // of the public API\n        inst._setPendingPropertyOrPath(itemPath, value, false, true);\n        inst._flushProperties();\n      }\n      return true;\n    }\n  }\n\n  /**\n   * Returns the item associated with a given element stamped by\n   * this `dom-repeat`.\n   *\n   * Note, to modify sub-properties of the item,\n   * `modelForElement(el).set('item.<sub-prop>', value)`\n   * should be used.\n   *\n   * @param {HTMLElement} el Element for which to return the item.\n   * @return {*} Item associated with the element.\n   */\n  itemForElement(el) {\n    let instance = this.modelForElement(el);\n    return instance && instance[this.as];\n  }\n\n  /**\n   * Returns the inst index for a given element stamped by this `dom-repeat`.\n   * If `sort` is provided, the index will reflect the sorted order (rather\n   * than the original array order).\n   *\n   * @param {HTMLElement} el Element for which to return the index.\n   * @return {*} Row index associated with the element (note this may\n   *   not correspond to the array index if a user `sort` is applied).\n   */\n  indexForElement(el) {\n    let instance = this.modelForElement(el);\n    return instance && instance[this.indexAs];\n  }\n\n  /**\n   * Returns the template \"model\" associated with a given element, which\n   * serves as the binding scope for the template instance the element is\n   * contained in. A template model is an instance of `Polymer.Base`, and\n   * should be used to manipulate data associated with this template instance.\n   *\n   * Example:\n   *\n   *   let model = modelForElement(el);\n   *   if (model.index < 10) {\n   *     model.set('item.checked', true);\n   *   }\n   *\n   * @param {HTMLElement} el Element for which to return a template model.\n   * @return {TemplateInstanceBase} Model representing the binding scope for\n   *   the element.\n   */\n  modelForElement(el) {\n    return Templatize.modelForElement(this.template, el);\n  }\n\n}\n\ncustomElements.define(DomRepeat.is, DomRepeat);\n\nexport { DomRepeat };\n","import './boot.js';\nimport { timeOut } from './async.js';\nimport { Debouncer } from './debounce.js';\n\n// detect native touch action support\nlet HAS_NATIVE_TA = typeof document.head.style.touchAction === 'string';\nlet GESTURE_KEY = '__polymerGestures';\nlet HANDLED_OBJ = '__polymerGesturesHandled';\nlet TOUCH_ACTION = '__polymerGesturesTouchAction';\n// radius for tap and track\nlet TAP_DISTANCE = 25;\nlet TRACK_DISTANCE = 5;\n// number of last N track positions to keep\nlet TRACK_LENGTH = 2;\n\n// Disabling \"mouse\" handlers for 2500ms is enough\nlet MOUSE_TIMEOUT = 2500;\nlet MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'click'];\n// an array of bitmask values for mapping MouseEvent.which to MouseEvent.buttons\nlet MOUSE_WHICH_TO_BUTTONS = [0, 1, 4, 2];\nlet MOUSE_HAS_BUTTONS = (function() {\n  try {\n    return new MouseEvent('test', {buttons: 1}).buttons === 1;\n  } catch (e) {\n    return false;\n  }\n})();\n\n/* eslint no-empty: [\"error\", { \"allowEmptyCatch\": true }] */\n// check for passive event listeners\nlet SUPPORTS_PASSIVE = false;\n(function() {\n  try {\n    let opts = Object.defineProperty({}, 'passive', {get: function() {SUPPORTS_PASSIVE = true;}});\n    window.addEventListener('test', null, opts);\n    window.removeEventListener('test', null, opts);\n  } catch(e) {}\n})();\n\n// Check for touch-only devices\nlet IS_TOUCH_ONLY = navigator.userAgent.match(/iP(?:[oa]d|hone)|Android/);\n\nlet GestureRecognizer = function(){}; // eslint-disable-line no-unused-vars\nGestureRecognizer.prototype.reset = function(){};\n/** @type {function(MouseEvent) | undefined} */\nGestureRecognizer.prototype.mousedown;\n/** @type {(function(MouseEvent) | undefined)} */\nGestureRecognizer.prototype.mousemove;\n/** @type {(function(MouseEvent) | undefined)} */\nGestureRecognizer.prototype.mouseup;\n/** @type {(function(TouchEvent) | undefined)} */\nGestureRecognizer.prototype.touchstart;\n/** @type {(function(TouchEvent) | undefined)} */\nGestureRecognizer.prototype.touchmove;\n/** @type {(function(TouchEvent) | undefined)} */\nGestureRecognizer.prototype.touchend;\n/** @type {(function(MouseEvent) | undefined)} */\nGestureRecognizer.prototype.click;\n\n// touch will make synthetic mouse events\n// `preventDefault` on touchend will cancel them,\n// but this breaks `<input>` focus and link clicks\n// disable mouse handlers for MOUSE_TIMEOUT ms after\n// a touchend to ignore synthetic mouse events\nlet mouseCanceller = function(mouseEvent) {\n  // Check for sourceCapabilities, used to distinguish synthetic events\n  // if mouseEvent did not come from a device that fires touch events,\n  // it was made by a real mouse and should be counted\n  // http://wicg.github.io/InputDeviceCapabilities/#dom-inputdevicecapabilities-firestouchevents\n  let sc = mouseEvent.sourceCapabilities;\n  if (sc && !sc.firesTouchEvents) {\n    return;\n  }\n  // skip synthetic mouse events\n  mouseEvent[HANDLED_OBJ] = {skip: true};\n  // disable \"ghost clicks\"\n  if (mouseEvent.type === 'click') {\n    let path = mouseEvent.composedPath && mouseEvent.composedPath();\n    if (path) {\n      for (let i = 0; i < path.length; i++) {\n        if (path[i] === POINTERSTATE.mouse.target) {\n          return;\n        }\n      }\n    }\n    mouseEvent.preventDefault();\n    mouseEvent.stopPropagation();\n  }\n};\n\n/**\n * @param {boolean=} setup True to add, false to remove.\n */\nfunction setupTeardownMouseCanceller(setup) {\n  let events = IS_TOUCH_ONLY ? ['click'] : MOUSE_EVENTS;\n  for (let i = 0, en; i < events.length; i++) {\n    en = events[i];\n    if (setup) {\n      document.addEventListener(en, mouseCanceller, true);\n    } else {\n      document.removeEventListener(en, mouseCanceller, true);\n    }\n  }\n}\n\nfunction ignoreMouse(e) {\n  if (!POINTERSTATE.mouse.mouseIgnoreJob) {\n    setupTeardownMouseCanceller(true);\n  }\n  let unset = function() {\n    setupTeardownMouseCanceller();\n    POINTERSTATE.mouse.target = null;\n    POINTERSTATE.mouse.mouseIgnoreJob = null;\n  };\n  POINTERSTATE.mouse.target = e.composedPath()[0];\n  POINTERSTATE.mouse.mouseIgnoreJob = Debouncer.debounce(\n        POINTERSTATE.mouse.mouseIgnoreJob\n      , timeOut.after(MOUSE_TIMEOUT)\n      , unset);\n}\n\n/**\n * @param {MouseEvent} ev event to test for left mouse button down\n * @return {boolean} has left mouse button down\n */\nfunction hasLeftMouseButton(ev) {\n  let type = ev.type;\n  // exit early if the event is not a mouse event\n  if (MOUSE_EVENTS.indexOf(type) === -1) {\n    return false;\n  }\n  // ev.button is not reliable for mousemove (0 is overloaded as both left button and no buttons)\n  // instead we use ev.buttons (bitmask of buttons) or fall back to ev.which (deprecated, 0 for no buttons, 1 for left button)\n  if (type === 'mousemove') {\n    // allow undefined for testing events\n    let buttons = ev.buttons === undefined ? 1 : ev.buttons;\n    if ((ev instanceof window.MouseEvent) && !MOUSE_HAS_BUTTONS) {\n      buttons = MOUSE_WHICH_TO_BUTTONS[ev.which] || 0;\n    }\n    // buttons is a bitmask, check that the left button bit is set (1)\n    return Boolean(buttons & 1);\n  } else {\n    // allow undefined for testing events\n    let button = ev.button === undefined ? 0 : ev.button;\n    // ev.button is 0 in mousedown/mouseup/click for left button activation\n    return button === 0;\n  }\n}\n\nfunction isSyntheticClick(ev) {\n  if (ev.type === 'click') {\n    // ev.detail is 0 for HTMLElement.click in most browsers\n    if (ev.detail === 0) {\n      return true;\n    }\n    // in the worst case, check that the x/y position of the click is within\n    // the bounding box of the target of the event\n    // Thanks IE 10 >:(\n    let t = _findOriginalTarget(ev);\n    // make sure the target of the event is an element so we can use getBoundingClientRect,\n    // if not, just assume it is a synthetic click\n    if (!t.nodeType || /** @type {Element} */(t).nodeType !== Node.ELEMENT_NODE) {\n      return true;\n    }\n    let bcr = /** @type {Element} */(t).getBoundingClientRect();\n    // use page x/y to account for scrolling\n    let x = ev.pageX, y = ev.pageY;\n    // ev is a synthetic click if the position is outside the bounding box of the target\n    return !((x >= bcr.left && x <= bcr.right) && (y >= bcr.top && y <= bcr.bottom));\n  }\n  return false;\n}\n\nlet POINTERSTATE = {\n  mouse: {\n    target: null,\n    mouseIgnoreJob: null\n  },\n  touch: {\n    x: 0,\n    y: 0,\n    id: -1,\n    scrollDecided: false\n  }\n};\n\nfunction firstTouchAction(ev) {\n  let ta = 'auto';\n  let path = ev.composedPath && ev.composedPath();\n  if (path) {\n    for (let i = 0, n; i < path.length; i++) {\n      n = path[i];\n      if (n[TOUCH_ACTION]) {\n        ta = n[TOUCH_ACTION];\n        break;\n      }\n    }\n  }\n  return ta;\n}\n\nfunction trackDocument(stateObj, movefn, upfn) {\n  stateObj.movefn = movefn;\n  stateObj.upfn = upfn;\n  document.addEventListener('mousemove', movefn);\n  document.addEventListener('mouseup', upfn);\n}\n\nfunction untrackDocument(stateObj) {\n  document.removeEventListener('mousemove', stateObj.movefn);\n  document.removeEventListener('mouseup', stateObj.upfn);\n  stateObj.movefn = null;\n  stateObj.upfn = null;\n}\n\n// use a document-wide touchend listener to start the ghost-click prevention mechanism\n// Use passive event listeners, if supported, to not affect scrolling performance\ndocument.addEventListener('touchend', ignoreMouse, SUPPORTS_PASSIVE ? {passive: true} : false);\n\nexport const gestures = {};\nexport const recognizers = [];\n\nexport function deepTargetFind(x, y) {\n  let node = document.elementFromPoint(x, y);\n  let next = node;\n  // this code path is only taken when native ShadowDOM is used\n  // if there is a shadowroot, it may have a node at x/y\n  // if there is not a shadowroot, exit the loop\n  while (next && next.shadowRoot && !window.ShadyDOM) {\n    // if there is a node at x/y in the shadowroot, look deeper\n    let oldNext = next;\n    next = next.shadowRoot.elementFromPoint(x, y);\n    // on Safari, elementFromPoint may return the shadowRoot host\n    if (oldNext === next) {\n      break;\n    }\n    if (next) {\n      node = next;\n    }\n  }\n  return node;\n}\n\nexport function _findOriginalTarget(ev) {\n  // shadowdom\n  if (ev.composedPath) {\n    return /** @type {EventTarget} */(ev.composedPath()[0]);\n  }\n  // shadydom\n  return ev.target;\n}\n\nexport function _handleNative(ev) {\n  let handled;\n  let type = ev.type;\n  let node = ev.currentTarget;\n  let gobj = node[GESTURE_KEY];\n  if (!gobj) {\n    return;\n  }\n  let gs = gobj[type];\n  if (!gs) {\n    return;\n  }\n  if (!ev[HANDLED_OBJ]) {\n    ev[HANDLED_OBJ] = {};\n    if (type.slice(0, 5) === 'touch') {\n      ev = /** @type {TouchEvent} */(ev); // eslint-disable-line no-self-assign\n      let t = ev.changedTouches[0];\n      if (type === 'touchstart') {\n        // only handle the first finger\n        if (ev.touches.length === 1) {\n          POINTERSTATE.touch.id = t.identifier;\n        }\n      }\n      if (POINTERSTATE.touch.id !== t.identifier) {\n        return;\n      }\n      if (!HAS_NATIVE_TA) {\n        if (type === 'touchstart' || type === 'touchmove') {\n          _handleTouchAction(ev);\n        }\n      }\n    }\n  }\n  handled = ev[HANDLED_OBJ];\n  // used to ignore synthetic mouse events\n  if (handled.skip) {\n    return;\n  }\n  // reset recognizer state\n  for (let i = 0, r; i < recognizers.length; i++) {\n    r = recognizers[i];\n    if (gs[r.name] && !handled[r.name]) {\n      if (r.flow && r.flow.start.indexOf(ev.type) > -1 && r.reset) {\n        r.reset();\n      }\n    }\n  }\n  // enforce gesture recognizer order\n  for (let i = 0, r; i < recognizers.length; i++) {\n    r = recognizers[i];\n    if (gs[r.name] && !handled[r.name]) {\n      handled[r.name] = true;\n      r[type](ev);\n    }\n  }\n}\n\nexport function _handleTouchAction(ev) {\n  let t = ev.changedTouches[0];\n  let type = ev.type;\n  if (type === 'touchstart') {\n    POINTERSTATE.touch.x = t.clientX;\n    POINTERSTATE.touch.y = t.clientY;\n    POINTERSTATE.touch.scrollDecided = false;\n  } else if (type === 'touchmove') {\n    if (POINTERSTATE.touch.scrollDecided) {\n      return;\n    }\n    POINTERSTATE.touch.scrollDecided = true;\n    let ta = firstTouchAction(ev);\n    let prevent = false;\n    let dx = Math.abs(POINTERSTATE.touch.x - t.clientX);\n    let dy = Math.abs(POINTERSTATE.touch.y - t.clientY);\n    if (!ev.cancelable) {\n      // scrolling is happening\n    } else if (ta === 'none') {\n      prevent = true;\n    } else if (ta === 'pan-x') {\n      prevent = dy > dx;\n    } else if (ta === 'pan-y') {\n      prevent = dx > dy;\n    }\n    if (prevent) {\n      ev.preventDefault();\n    } else {\n      prevent('track');\n    }\n  }\n}\n\nexport function addListener(node, evType, handler) {\n  if (gestures[evType]) {\n    _add(node, evType, handler);\n    return true;\n  }\n  return false;\n}\n\nexport function removeListener(node, evType, handler) {\n  if (gestures[evType]) {\n    _remove(node, evType, handler);\n    return true;\n  }\n  return false;\n}\n\nexport function _add(node, evType, handler) {\n  let recognizer = gestures[evType];\n  let deps = recognizer.deps;\n  let name = recognizer.name;\n  let gobj = node[GESTURE_KEY];\n  if (!gobj) {\n    node[GESTURE_KEY] = gobj = {};\n  }\n  for (let i = 0, dep, gd; i < deps.length; i++) {\n    dep = deps[i];\n    // don't add mouse handlers on iOS because they cause gray selection overlays\n    if (IS_TOUCH_ONLY && MOUSE_EVENTS.indexOf(dep) > -1 && dep !== 'click') {\n      continue;\n    }\n    gd = gobj[dep];\n    if (!gd) {\n      gobj[dep] = gd = {_count: 0};\n    }\n    if (gd._count === 0) {\n      node.addEventListener(dep, _handleNative);\n    }\n    gd[name] = (gd[name] || 0) + 1;\n    gd._count = (gd._count || 0) + 1;\n  }\n  node.addEventListener(evType, handler);\n  if (recognizer.touchAction) {\n    setTouchAction(node, recognizer.touchAction);\n  }\n}\n\nexport function _remove(node, evType, handler) {\n  let recognizer = gestures[evType];\n  let deps = recognizer.deps;\n  let name = recognizer.name;\n  let gobj = node[GESTURE_KEY];\n  if (gobj) {\n    for (let i = 0, dep, gd; i < deps.length; i++) {\n      dep = deps[i];\n      gd = gobj[dep];\n      if (gd && gd[name]) {\n        gd[name] = (gd[name] || 1) - 1;\n        gd._count = (gd._count || 1) - 1;\n        if (gd._count === 0) {\n          node.removeEventListener(dep, _handleNative);\n        }\n      }\n    }\n  }\n  node.removeEventListener(evType, handler);\n}\n\nexport function register(recog) {\n  recognizers.push(recog);\n  for (let i = 0; i < recog.emits.length; i++) {\n    gestures[recog.emits[i]] = recog;\n  }\n}\n\nexport function _findRecognizerByEvent(evName) {\n  for (let i = 0, r; i < recognizers.length; i++) {\n    r = recognizers[i];\n    for (let j = 0, n; j < r.emits.length; j++) {\n      n = r.emits[j];\n      if (n === evName) {\n        return r;\n      }\n    }\n  }\n  return null;\n}\n\nexport function setTouchAction(node, value) {\n  if (HAS_NATIVE_TA) {\n    node.style.touchAction = value;\n  }\n  node[TOUCH_ACTION] = value;\n}\n\nexport function _fire(target, type, detail) {\n  let ev = new Event(type, { bubbles: true, cancelable: true, composed: true });\n  ev.detail = detail;\n  target.dispatchEvent(ev);\n  // forward `preventDefault` in a clean way\n  if (ev.defaultPrevented) {\n    let preventer = detail.preventer || detail.sourceEvent;\n    if (preventer && preventer.preventDefault) {\n      preventer.preventDefault();\n    }\n  }\n}\n\nexport function prevent(evName) {\n  let recognizer = _findRecognizerByEvent(evName);\n  if (recognizer.info) {\n    recognizer.info.prevent = true;\n  }\n}\n\nexport function resetMouseCanceller() {\n  if (POINTERSTATE.mouse.mouseIgnoreJob) {\n    POINTERSTATE.mouse.mouseIgnoreJob.flush();\n  }\n}\n\n/* eslint-disable valid-jsdoc */\n\nregister({\n  name: 'downup',\n  deps: ['mousedown', 'touchstart', 'touchend'],\n  flow: {\n    start: ['mousedown', 'touchstart'],\n    end: ['mouseup', 'touchend']\n  },\n  emits: ['down', 'up'],\n\n  info: {\n    movefn: null,\n    upfn: null\n  },\n\n  /** @this {GestureRecognizer} */\n  reset: function() {\n    untrackDocument(this.info);\n  },\n\n  /**\n   * @this {GestureRecognizer}\n   * @param {MouseEvent} e\n   */\n  mousedown: function(e) {\n    if (!hasLeftMouseButton(e)) {\n      return;\n    }\n    let t = _findOriginalTarget(e);\n    let self = this;\n    let movefn = function movefn(e) {\n      if (!hasLeftMouseButton(e)) {\n        self._fire('up', t, e);\n        untrackDocument(self.info);\n      }\n    };\n    let upfn = function upfn(e) {\n      if (hasLeftMouseButton(e)) {\n        self._fire('up', t, e);\n      }\n      untrackDocument(self.info);\n    };\n    trackDocument(this.info, movefn, upfn);\n    this._fire('down', t, e);\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   */\n  touchstart: function(e) {\n    this._fire('down', _findOriginalTarget(e), e.changedTouches[0], e);\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   */\n  touchend: function(e) {\n    this._fire('up', _findOriginalTarget(e), e.changedTouches[0], e);\n  },\n  /**\n   * @param {string} type\n   * @param {EventTarget} target\n   * @param {Event} event\n   * @param {Function} preventer\n   */\n  _fire: function(type, target, event, preventer) {\n    _fire(target, type, {\n      x: event.clientX,\n      y: event.clientY,\n      sourceEvent: event,\n      preventer: preventer,\n      prevent: function(e) {\n        return prevent(e);\n      }\n    });\n  }\n});\n\nregister({\n  name: 'track',\n  touchAction: 'none',\n  deps: ['mousedown', 'touchstart', 'touchmove', 'touchend'],\n  flow: {\n    start: ['mousedown', 'touchstart'],\n    end: ['mouseup', 'touchend']\n  },\n  emits: ['track'],\n\n  info: {\n    x: 0,\n    y: 0,\n    state: 'start',\n    started: false,\n    moves: [],\n    /** @this {GestureRecognizer} */\n    addMove: function(move) {\n      if (this.moves.length > TRACK_LENGTH) {\n        this.moves.shift();\n      }\n      this.moves.push(move);\n    },\n    movefn: null,\n    upfn: null,\n    prevent: false\n  },\n\n  /** @this {GestureRecognizer} */\n  reset: function() {\n    this.info.state = 'start';\n    this.info.started = false;\n    this.info.moves = [];\n    this.info.x = 0;\n    this.info.y = 0;\n    this.info.prevent = false;\n    untrackDocument(this.info);\n  },\n\n  /**\n   * @this {GestureRecognizer}\n   * @param {number} x\n   * @param {number} y\n   * @return {boolean}\n   */\n  hasMovedEnough: function(x, y) {\n    if (this.info.prevent) {\n      return false;\n    }\n    if (this.info.started) {\n      return true;\n    }\n    let dx = Math.abs(this.info.x - x);\n    let dy = Math.abs(this.info.y - y);\n    return (dx >= TRACK_DISTANCE || dy >= TRACK_DISTANCE);\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {MouseEvent} e\n   */\n  mousedown: function(e) {\n    if (!hasLeftMouseButton(e)) {\n      return;\n    }\n    let t = _findOriginalTarget(e);\n    let self = this;\n    let movefn = function movefn(e) {\n      let x = e.clientX, y = e.clientY;\n      if (self.hasMovedEnough(x, y)) {\n        // first move is 'start', subsequent moves are 'move', mouseup is 'end'\n        self.info.state = self.info.started ? (e.type === 'mouseup' ? 'end' : 'track') : 'start';\n        if (self.info.state === 'start') {\n          // if and only if tracking, always prevent tap\n          prevent('tap');\n        }\n        self.info.addMove({x: x, y: y});\n        if (!hasLeftMouseButton(e)) {\n          // always _fire \"end\"\n          self.info.state = 'end';\n          untrackDocument(self.info);\n        }\n        self._fire(t, e);\n        self.info.started = true;\n      }\n    };\n    let upfn = function upfn(e) {\n      if (self.info.started) {\n        movefn(e);\n      }\n\n      // remove the temporary listeners\n      untrackDocument(self.info);\n    };\n    // add temporary document listeners as mouse retargets\n    trackDocument(this.info, movefn, upfn);\n    this.info.x = e.clientX;\n    this.info.y = e.clientY;\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   */\n  touchstart: function(e) {\n    let ct = e.changedTouches[0];\n    this.info.x = ct.clientX;\n    this.info.y = ct.clientY;\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   */\n  touchmove: function(e) {\n    let t = _findOriginalTarget(e);\n    let ct = e.changedTouches[0];\n    let x = ct.clientX, y = ct.clientY;\n    if (this.hasMovedEnough(x, y)) {\n      if (this.info.state === 'start') {\n        // if and only if tracking, always prevent tap\n        prevent('tap');\n      }\n      this.info.addMove({x: x, y: y});\n      this._fire(t, ct);\n      this.info.state = 'track';\n      this.info.started = true;\n    }\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   */\n  touchend: function(e) {\n    let t = _findOriginalTarget(e);\n    let ct = e.changedTouches[0];\n    // only trackend if track was started and not aborted\n    if (this.info.started) {\n      // reset started state on up\n      this.info.state = 'end';\n      this.info.addMove({x: ct.clientX, y: ct.clientY});\n      this._fire(t, ct, e);\n    }\n  },\n\n  /**\n   * @this {GestureRecognizer}\n   * @param {EventTarget} target\n   * @param {Touch} touch\n   */\n  _fire: function(target, touch) {\n    let secondlast = this.info.moves[this.info.moves.length - 2];\n    let lastmove = this.info.moves[this.info.moves.length - 1];\n    let dx = lastmove.x - this.info.x;\n    let dy = lastmove.y - this.info.y;\n    let ddx, ddy = 0;\n    if (secondlast) {\n      ddx = lastmove.x - secondlast.x;\n      ddy = lastmove.y - secondlast.y;\n    }\n    _fire(target, 'track', {\n      state: this.info.state,\n      x: touch.clientX,\n      y: touch.clientY,\n      dx: dx,\n      dy: dy,\n      ddx: ddx,\n      ddy: ddy,\n      sourceEvent: touch,\n      hover: function() {\n        return deepTargetFind(touch.clientX, touch.clientY);\n      }\n    });\n  }\n\n});\n\nregister({\n  name: 'tap',\n  deps: ['mousedown', 'click', 'touchstart', 'touchend'],\n  flow: {\n    start: ['mousedown', 'touchstart'],\n    end: ['click', 'touchend']\n  },\n  emits: ['tap'],\n  info: {\n    x: NaN,\n    y: NaN,\n    prevent: false\n  },\n  /** @this {GestureRecognizer} */\n  reset: function() {\n    this.info.x = NaN;\n    this.info.y = NaN;\n    this.info.prevent = false;\n  },\n  /** @this {GestureRecognizer} */\n  save: function(e) {\n    this.info.x = e.clientX;\n    this.info.y = e.clientY;\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {MouseEvent} e\n   */\n  mousedown: function(e) {\n    if (hasLeftMouseButton(e)) {\n      this.save(e);\n    }\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {MouseEvent} e\n   */\n  click: function(e) {\n    if (hasLeftMouseButton(e)) {\n      this.forward(e);\n    }\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   */\n  touchstart: function(e) {\n    this.save(e.changedTouches[0], e);\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   */\n  touchend: function(e) {\n    this.forward(e.changedTouches[0], e);\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {Event | Touch} e\n   * @param {Event=} preventer\n   */\n  forward: function(e, preventer) {\n    let dx = Math.abs(e.clientX - this.info.x);\n    let dy = Math.abs(e.clientY - this.info.y);\n    // find original target from `preventer` for TouchEvents, or `e` for MouseEvents\n    let t = _findOriginalTarget((preventer || e));\n    // dx,dy can be NaN if `click` has been simulated and there was no `down` for `start`\n    if (isNaN(dx) || isNaN(dy) || (dx <= TAP_DISTANCE && dy <= TAP_DISTANCE) || isSyntheticClick(e)) {\n      // prevent taps from being generated if an event has canceled them\n      if (!this.info.prevent) {\n        _fire(t, 'tap', {\n          x: e.clientX,\n          y: e.clientY,\n          sourceEvent: e,\n          preventer: preventer\n        });\n      }\n    }\n  }\n});\n\nexport const findOriginalTarget = _findOriginalTarget;\nexport const add = addListener;\nexport const remove = removeListener;\n","import './boot.js';\nimport { PropertyEffects } from '../mixins/property-effects.js';\nimport { MutableData } from '../mixins/mutable-data.js';\n\n// Base class for HTMLTemplateElement extension that has property effects\n// machinery for propagating host properties to children. This is an ES5\n// class only because Babel (incorrectly) requires super() in the class\n// constructor even though no `this` is used and it returns an instance.\nlet newInstance = null;\n/**\n * @constructor\n * @extends {HTMLTemplateElement}\n */\nfunction HTMLTemplateElementExtension() { return newInstance; }\nHTMLTemplateElementExtension.prototype = Object.create(HTMLTemplateElement.prototype, {\n  constructor: {\n    value: HTMLTemplateElementExtension,\n    writable: true\n  }\n});\n/**\n * @constructor\n * @implements {Polymer_PropertyEffects}\n * @extends {HTMLTemplateElementExtension}\n */\nconst DataTemplate = PropertyEffects(HTMLTemplateElementExtension);\n/**\n * @constructor\n * @implements {Polymer_MutableData}\n * @extends {DataTemplate}\n */\nconst MutableDataTemplate = MutableData(DataTemplate);\n\n// Applies a DataTemplate subclass to a <template> instance\nfunction upgradeTemplate(template, constructor) {\n  newInstance = template;\n  Object.setPrototypeOf(template, constructor.prototype);\n  new constructor();\n  newInstance = null;\n}\n\n// Base class for TemplateInstance's\n/**\n * @constructor\n * @implements {Polymer_PropertyEffects}\n */\nconst base = PropertyEffects(class {});\n\n/**\n * @polymer\n * @customElement\n * @appliesMixin Polymer.PropertyEffects\n * @unrestricted\n */\nclass TemplateInstanceBase extends base {\n  constructor(props) {\n    super();\n    this._configureProperties(props);\n    this.root = this._stampTemplate(this.__dataHost);\n    // Save list of stamped children\n    let children = this.children = [];\n    for (let n = this.root.firstChild; n; n=n.nextSibling) {\n      children.push(n);\n      n.__templatizeInstance = this;\n    }\n    if (this.__templatizeOwner.__hideTemplateChildren__) {\n      this._showHideChildren(true);\n    }\n    // Flush props only when props are passed if instance props exist\n    // or when there isn't instance props.\n    let options = this.__templatizeOptions;\n    if ((props && options.instanceProps) || !options.instanceProps) {\n      this._enableProperties();\n    }\n  }\n  /**\n   * Configure the given `props` by calling `_setPendingProperty`. Also\n   * sets any properties stored in `__hostProps`.\n   * @private\n   * @param {Object} props Object of property name-value pairs to set.\n   */\n  _configureProperties(props) {\n    let options = this.__templatizeOptions;\n    if (props) {\n      for (let iprop in options.instanceProps) {\n        if (iprop in props) {\n          this._setPendingProperty(iprop, props[iprop]);\n        }\n      }\n    }\n    for (let hprop in this.__hostProps) {\n      this._setPendingProperty(hprop, this.__dataHost['_host_' + hprop]);\n    }\n  }\n  /**\n   * Forwards a host property to this instance.  This method should be\n   * called on instances from the `options.forwardHostProp` callback\n   * to propagate changes of host properties to each instance.\n   *\n   * Note this method enqueues the change, which are flushed as a batch.\n   *\n   * @param {string} prop Property or path name\n   * @param {*} value Value of the property to forward\n   */\n  forwardHostProp(prop, value) {\n    if (this._setPendingPropertyOrPath(prop, value, false, true)) {\n      this.__dataHost._enqueueClient(this);\n    }\n  }\n  /**\n   * @override\n   */\n  _addEventListenerToNode(node, eventName, handler) {\n    if (this._methodHost && this.__templatizeOptions.parentModel) {\n      // If this instance should be considered a parent model, decorate\n      // events this template instance as `model`\n      this._methodHost._addEventListenerToNode(node, eventName, (e) => {\n        e.model = this;\n        handler(e);\n      });\n    } else {\n      // Otherwise delegate to the template's host (which could be)\n      // another template instance\n      let templateHost = this.__dataHost.__dataHost;\n      if (templateHost) {\n        templateHost._addEventListenerToNode(node, eventName, handler);\n      }\n    }\n  }\n  /**\n   * Shows or hides the template instance top level child elements. For\n   * text nodes, `textContent` is removed while \"hidden\" and replaced when\n   * \"shown.\"\n   * @param {boolean} hide Set to true to hide the children;\n   * set to false to show them.\n   * @protected\n   */\n  _showHideChildren(hide) {\n    let c = this.children;\n    for (let i=0; i<c.length; i++) {\n      let n = c[i];\n      // Ignore non-changes\n      if (Boolean(hide) != Boolean(n.__hideTemplateChildren__)) {\n        if (n.nodeType === Node.TEXT_NODE) {\n          if (hide) {\n            n.__polymerTextContent__ = n.textContent;\n            n.textContent = '';\n          } else {\n            n.textContent = n.__polymerTextContent__;\n          }\n        } else if (n.style) {\n          if (hide) {\n            n.__polymerDisplay__ = n.style.display;\n            n.style.display = 'none';\n          } else {\n            n.style.display = n.__polymerDisplay__;\n          }\n        }\n      }\n      n.__hideTemplateChildren__ = hide;\n      if (n._showHideChildren) {\n        n._showHideChildren(hide);\n      }\n    }\n  }\n  /**\n   * Overrides default property-effects implementation to intercept\n   * textContent bindings while children are \"hidden\" and cache in\n   * private storage for later retrieval.\n   *\n   * @override\n   */\n  _setUnmanagedPropertyToNode(node, prop, value) {\n    if (node.__hideTemplateChildren__ &&\n        node.nodeType == Node.TEXT_NODE && prop == 'textContent') {\n      node.__polymerTextContent__ = value;\n    } else {\n      super._setUnmanagedPropertyToNode(node, prop, value);\n    }\n  }\n  /**\n   * Find the parent model of this template instance.  The parent model\n   * is either another templatize instance that had option `parentModel: true`,\n   * or else the host element.\n   *\n   * @return {Polymer_PropertyEffects} The parent model of this instance\n   */\n  get parentModel() {\n    let model = this.__parentModel;\n    if (!model) {\n      let options;\n      model = this;\n      do {\n        // A template instance's `__dataHost` is a <template>\n        // `model.__dataHost.__dataHost` is the template's host\n        model = model.__dataHost.__dataHost;\n      } while ((options = model.__templatizeOptions) && !options.parentModel);\n      this.__parentModel = model;\n    }\n    return model;\n  }\n}\n\n/** @type {!DataTemplate} */\nTemplateInstanceBase.prototype.__dataHost;\n/** @type {!TemplatizeOptions} */\nTemplateInstanceBase.prototype.__templatizeOptions;\n/** @type {!Polymer_PropertyEffects} */\nTemplateInstanceBase.prototype._methodHost;\n/** @type {!Object} */\nTemplateInstanceBase.prototype.__templatizeOwner;\n/** @type {!Object} */\nTemplateInstanceBase.prototype.__hostProps;\n\n/**\n * @constructor\n * @extends {TemplateInstanceBase}\n * @implements {Polymer_MutableData}\n */\nconst MutableTemplateInstanceBase = MutableData(TemplateInstanceBase);\n\nfunction findMethodHost(template) {\n  // Technically this should be the owner of the outermost template.\n  // In shadow dom, this is always getRootNode().host, but we can\n  // approximate this via cooperation with our dataHost always setting\n  // `_methodHost` as long as there were bindings (or id's) on this\n  // instance causing it to get a dataHost.\n  let templateHost = template.__dataHost;\n  return templateHost && templateHost._methodHost || templateHost;\n}\n\n/* eslint-disable valid-jsdoc */\n/**\n * @suppress {missingProperties} class.prototype is not defined for some reason\n */\nfunction createTemplatizerClass(template, templateInfo, options) {\n  // Anonymous class created by the templatize\n  let base = options.mutableData ?\n    MutableTemplateInstanceBase : TemplateInstanceBase;\n  /**\n   * @constructor\n   * @extends {base}\n   */\n  let klass = class extends base { };\n  klass.prototype.__templatizeOptions = options;\n  klass.prototype._bindTemplate(template);\n  addNotifyEffects(klass, template, templateInfo, options);\n  return klass;\n}\n\n/**\n * @suppress {missingProperties} class.prototype is not defined for some reason\n */\nfunction addPropagateEffects(template, templateInfo, options) {\n  let userForwardHostProp = options.forwardHostProp;\n  if (userForwardHostProp) {\n    // Provide data API and property effects on memoized template class\n    let klass = templateInfo.templatizeTemplateClass;\n    if (!klass) {\n      let base = options.mutableData ? MutableDataTemplate : DataTemplate;\n      klass = templateInfo.templatizeTemplateClass =\n        class TemplatizedTemplate extends base {};\n      // Add template - >instances effects\n      // and host <- template effects\n      let hostProps = templateInfo.hostProps;\n      for (let prop in hostProps) {\n        klass.prototype._addPropertyEffect('_host_' + prop,\n          klass.prototype.PROPERTY_EFFECT_TYPES.PROPAGATE,\n          {fn: createForwardHostPropEffect(prop, userForwardHostProp)});\n        klass.prototype._createNotifyingProperty('_host_' + prop);\n      }\n    }\n    upgradeTemplate(template, klass);\n    // Mix any pre-bound data into __data; no need to flush this to\n    // instances since they pull from the template at instance-time\n    if (template.__dataProto) {\n      // Note, generally `__dataProto` could be chained, but it's guaranteed\n      // to not be since this is a vanilla template we just added effects to\n      Object.assign(template.__data, template.__dataProto);\n    }\n    // Clear any pending data for performance\n    template.__dataTemp = {};\n    template.__dataPending = null;\n    template.__dataOld = null;\n    template._enableProperties();\n  }\n}\n/* eslint-enable valid-jsdoc */\n\nfunction createForwardHostPropEffect(hostProp, userForwardHostProp) {\n  return function forwardHostProp(template, prop, props) {\n    userForwardHostProp.call(template.__templatizeOwner,\n      prop.substring('_host_'.length), props[prop]);\n  };\n}\n\nfunction addNotifyEffects(klass, template, templateInfo, options) {\n  let hostProps = templateInfo.hostProps || {};\n  for (let iprop in options.instanceProps) {\n    delete hostProps[iprop];\n    let userNotifyInstanceProp = options.notifyInstanceProp;\n    if (userNotifyInstanceProp) {\n      klass.prototype._addPropertyEffect(iprop,\n        klass.prototype.PROPERTY_EFFECT_TYPES.NOTIFY,\n        {fn: createNotifyInstancePropEffect(iprop, userNotifyInstanceProp)});\n    }\n  }\n  if (options.forwardHostProp && template.__dataHost) {\n    for (let hprop in hostProps) {\n      klass.prototype._addPropertyEffect(hprop,\n        klass.prototype.PROPERTY_EFFECT_TYPES.NOTIFY,\n        {fn: createNotifyHostPropEffect()});\n    }\n  }\n}\n\nfunction createNotifyInstancePropEffect(instProp, userNotifyInstanceProp) {\n  return function notifyInstanceProp(inst, prop, props) {\n    userNotifyInstanceProp.call(inst.__templatizeOwner,\n      inst, prop, props[prop]);\n  };\n}\n\nfunction createNotifyHostPropEffect() {\n  return function notifyHostProp(inst, prop, props) {\n    inst.__dataHost._setPendingPropertyOrPath('_host_' + prop, props[prop], true, true);\n  };\n}\n\n/**\n * Module for preparing and stamping instances of templates that utilize\n * Polymer's data-binding and declarative event listener features.\n *\n * Example:\n *\n *     // Get a template from somewhere, e.g. light DOM\n *     let template = this.querySelector('template');\n *     // Prepare the template\n *     let TemplateClass = Polymer.Templatize.templatize(template);\n *     // Instance the template with an initial data model\n *     let instance = new TemplateClass({myProp: 'initial'});\n *     // Insert the instance's DOM somewhere, e.g. element's shadow DOM\n *     this.shadowRoot.appendChild(instance.root);\n *     // Changing a property on the instance will propagate to bindings\n *     // in the template\n *     instance.myProp = 'new value';\n *\n * The `options` dictionary passed to `templatize` allows for customizing\n * features of the generated template class, including how outer-scope host\n * properties should be forwarded into template instances, how any instance\n * properties added into the template's scope should be notified out to\n * the host, and whether the instance should be decorated as a \"parent model\"\n * of any event handlers.\n *\n *     // Customze property forwarding and event model decoration\n *     let TemplateClass = Polymer.Templatize.templatize(template, this, {\n *       parentModel: true,\n *       instanceProps: {...},\n *       forwardHostProp(property, value) {...},\n *       notifyInstanceProp(instance, property, value) {...},\n *     });\n *\n *\n * @namespace\n * @memberof Polymer\n * @summary Module for preparing and stamping instances of templates\n *   utilizing Polymer templating features.\n */\n\nconst Templatize = {\n\n  /**\n   * Returns an anonymous `Polymer.PropertyEffects` class bound to the\n   * `<template>` provided.  Instancing the class will result in the\n   * template being stamped into document fragment stored as the instance's\n   * `root` property, after which it can be appended to the DOM.\n   *\n   * Templates may utilize all Polymer data-binding features as well as\n   * declarative event listeners.  Event listeners and inline computing\n   * functions in the template will be called on the host of the template.\n   *\n   * The constructor returned takes a single argument dictionary of initial\n   * property values to propagate into template bindings.  Additionally\n   * host properties can be forwarded in, and instance properties can be\n   * notified out by providing optional callbacks in the `options` dictionary.\n   *\n   * Valid configuration in `options` are as follows:\n   *\n   * - `forwardHostProp(property, value)`: Called when a property referenced\n   *   in the template changed on the template's host. As this library does\n   *   not retain references to templates instanced by the user, it is the\n   *   templatize owner's responsibility to forward host property changes into\n   *   user-stamped instances.  The `instance.forwardHostProp(property, value)`\n   *    method on the generated class should be called to forward host\n   *   properties into the template to prevent unnecessary property-changed\n   *   notifications. Any properties referenced in the template that are not\n   *   defined in `instanceProps` will be notified up to the template's host\n   *   automatically.\n   * - `instanceProps`: Dictionary of property names that will be added\n   *   to the instance by the templatize owner.  These properties shadow any\n   *   host properties, and changes within the template to these properties\n   *   will result in `notifyInstanceProp` being called.\n   * - `mutableData`: When `true`, the generated class will skip strict\n   *   dirty-checking for objects and arrays (always consider them to be\n   *   \"dirty\").\n   * - `notifyInstanceProp(instance, property, value)`: Called when\n   *   an instance property changes.  Users may choose to call `notifyPath`\n   *   on e.g. the owner to notify the change.\n   * - `parentModel`: When `true`, events handled by declarative event listeners\n   *   (`on-event=\"handler\"`) will be decorated with a `model` property pointing\n   *   to the template instance that stamped it.  It will also be returned\n   *   from `instance.parentModel` in cases where template instance nesting\n   *   causes an inner model to shadow an outer model.\n   *\n   * Note that the class returned from `templatize` is generated only once\n   * for a given `<template>` using `options` from the first call for that\n   * template, and the cached class is returned for all subsequent calls to\n   * `templatize` for that template.  As such, `options` callbacks should not\n   * close over owner-specific properties since only the first `options` is\n   * used; rather, callbacks are called bound to the `owner`, and so context\n   * needed from the callbacks (such as references to `instances` stamped)\n   * should be stored on the `owner` such that they can be retrieved via `this`.\n   *\n   * @memberof Polymer.Templatize\n   * @param {!HTMLTemplateElement} template Template to templatize\n   * @param {!Polymer_PropertyEffects} owner Owner of the template instances;\n   *   any optional callbacks will be bound to this owner.\n   * @param {Object=} options Options dictionary (see summary for details)\n   * @return {function(new:TemplateInstanceBase)} Generated class bound to the template\n   *   provided\n   * @suppress {invalidCasts}\n   */\n  templatize(template, owner, options) {\n    options = /** @type {!TemplatizeOptions} */(options || {});\n    if (template.__templatizeOwner) {\n      throw new Error('A <template> can only be templatized once');\n    }\n    template.__templatizeOwner = owner;\n    let templateInfo = owner.constructor._parseTemplate(template);\n    // Get memoized base class for the prototypical template, which\n    // includes property effects for binding template & forwarding\n    let baseClass = templateInfo.templatizeInstanceClass;\n    if (!baseClass) {\n      baseClass = createTemplatizerClass(template, templateInfo, options);\n      templateInfo.templatizeInstanceClass = baseClass;\n    }\n    // Host property forwarding must be installed onto template instance\n    addPropagateEffects(template, templateInfo, options);\n    // Subclass base class and add reference for this specific template\n    let klass = class TemplateInstance extends baseClass {};\n    klass.prototype._methodHost = findMethodHost(template);\n    klass.prototype.__dataHost = template;\n    klass.prototype.__templatizeOwner = owner;\n    klass.prototype.__hostProps = templateInfo.hostProps;\n    return /** @type {function(new:TemplateInstanceBase)} */(klass);\n  },\n\n  /**\n   * Returns the template \"model\" associated with a given element, which\n   * serves as the binding scope for the template instance the element is\n   * contained in. A template model is an instance of\n   * `TemplateInstanceBase`, and should be used to manipulate data\n   * associated with this template instance.\n   *\n   * Example:\n   *\n   *   let model = modelForElement(el);\n   *   if (model.index < 10) {\n   *     model.set('item.checked', true);\n   *   }\n   *\n   * @memberof Polymer.Templatize\n   * @param {HTMLTemplateElement} template The model will be returned for\n   *   elements stamped from this template\n   * @param {Node} node Node for which to return a template model.\n   * @return {TemplateInstanceBase} Template instance representing the\n   *   binding scope for the element\n   */\n  modelForElement(template, node) {\n    let model;\n    while (node) {\n      // An element with a __templatizeInstance marks the top boundary\n      // of a scope; walk up until we find one, and then ensure that\n      // its __dataHost matches `this`, meaning this dom-repeat stamped it\n      if ((model = node.__templatizeInstance)) {\n        // Found an element stamped by another template; keep walking up\n        // from its __dataHost\n        if (model.__dataHost != template) {\n          node = model.__dataHost;\n        } else {\n          return model;\n        }\n      } else {\n        // Still in a template scope, keep going up until\n        // a __templatizeInstance is found\n        node = node.parentNode;\n      }\n    }\n    return null;\n  }\n};\n\nexport { Templatize };\nexport { TemplateInstanceBase };\n","import './boot.js';\n\nlet debouncerQueue = [];\n\nexport const enqueueDebouncer = function(debouncer) {\n  debouncerQueue.push(debouncer);\n};\n\nfunction flushDebouncers() {\n  const didFlush = Boolean(debouncerQueue.length);\n  while (debouncerQueue.length) {\n    try {\n      debouncerQueue.shift().flush();\n    } catch(e) {\n      setTimeout(() => {\n        throw e;\n      });\n    }\n  }\n  return didFlush;\n}\n\nexport const flush = function() {\n  let shadyDOM, debouncers;\n  do {\n    shadyDOM = window.ShadyDOM && ShadyDOM.flush();\n    if (window.ShadyCSS && window.ShadyCSS.ScopingShim) {\n      window.ShadyCSS.ScopingShim.flush();\n    }\n    debouncers = flushDebouncers();\n  } while (shadyDOM || debouncers);\n};\n","import { dedupingMixin } from '../utils/mixin.js';\n\n// Common implementation for mixin & behavior\nfunction mutablePropertyChange(inst, property, value, old, mutableData) {\n  let isObject;\n  if (mutableData) {\n    isObject = (typeof value === 'object' && value !== null);\n    // Pull `old` for Objects from temp cache, but treat `null` as a primitive\n    if (isObject) {\n      old = inst.__dataTemp[property];\n    }\n  }\n  // Strict equality check, but return false for NaN===NaN\n  let shouldChange = (old !== value && (old === old || value === value));\n  // Objects are stored in temporary cache (cleared at end of\n  // turn), which is used for dirty-checking\n  if (isObject && shouldChange) {\n    inst.__dataTemp[property] = value;\n  }\n  return shouldChange;\n}\n\nexport const MutableData = dedupingMixin(superClass => {\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_MutableData}\n   */\n  class MutableData extends superClass {\n    /**\n     * Overrides `Polymer.PropertyEffects` to provide option for skipping\n     * strict equality checking for Objects and Arrays.\n     *\n     * This method pulls the value to dirty check against from the `__dataTemp`\n     * cache (rather than the normal `__data` cache) for Objects.  Since the temp\n     * cache is cleared at the end of a turn, this implementation allows\n     * side-effects of deep object changes to be processed by re-setting the\n     * same object (using the temp cache as an in-turn backstop to prevent\n     * cycles due to 2-way notification).\n     *\n     * @param {string} property Property name\n     * @param {*} value New property value\n     * @param {*} old Previous property value\n     * @return {boolean} Whether the property should be considered a change\n     * @protected\n     */\n    _shouldPropertyChange(property, value, old) {\n      return mutablePropertyChange(this, property, value, old, true);\n    }\n\n  }\n  /** @type {boolean} */\n  MutableData.prototype.mutableData = false;\n\n  return MutableData;\n\n});\n\nexport const OptionalMutableData = dedupingMixin(superClass => {\n\n  /**\n   * @mixinClass\n   * @polymer\n   * @implements {Polymer_OptionalMutableData}\n   */\n  class OptionalMutableData extends superClass {\n\n    static get properties() {\n      return {\n        /**\n         * Instance-level flag for configuring the dirty-checking strategy\n         * for this element.  When true, Objects and Arrays will skip dirty\n         * checking, otherwise strict equality checking will be used.\n         */\n        mutableData: Boolean\n      };\n    }\n\n    /**\n     * Overrides `Polymer.PropertyEffects` to provide option for skipping\n     * strict equality checking for Objects and Arrays.\n     *\n     * When `this.mutableData` is true on this instance, this method\n     * pulls the value to dirty check against from the `__dataTemp` cache\n     * (rather than the normal `__data` cache) for Objects.  Since the temp\n     * cache is cleared at the end of a turn, this implementation allows\n     * side-effects of deep object changes to be processed by re-setting the\n     * same object (using the temp cache as an in-turn backstop to prevent\n     * cycles due to 2-way notification).\n     *\n     * @param {string} property Property name\n     * @param {*} value New property value\n     * @param {*} old Previous property value\n     * @return {boolean} Whether the property should be considered a change\n     * @protected\n     */\n    _shouldPropertyChange(property, value, old) {\n      return mutablePropertyChange(this, property, value, old, this.mutableData);\n    }\n  }\n\n  return OptionalMutableData;\n\n});\n\n// Export for use by legacy behavior\nMutableData._mutablePropertyChange = mutablePropertyChange;\n","import '../utils/boot.js';\nimport { dedupingMixin } from '../utils/mixin.js';\nimport * as gestures$0 from '../utils/gestures.js';\n\n/**\n * @const {Polymer.Gestures}\n */\nconst gestures = gestures$0;\n\nexport const GestureEventListeners = dedupingMixin(superClass => {\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_GestureEventListeners}\n   */\n  class GestureEventListeners extends superClass {\n\n    _addEventListenerToNode(node, eventName, handler) {\n      if (!gestures.addListener(node, eventName, handler)) {\n        super._addEventListenerToNode(node, eventName, handler);\n      }\n    }\n\n    _removeEventListenerFromNode(node, eventName, handler) {\n      if (!gestures.removeListener(node, eventName, handler)) {\n        super._removeEventListenerFromNode(node, eventName, handler);\n      }\n    }\n\n  }\n\n  return GestureEventListeners;\n\n});\n"],"sourceRoot":""}