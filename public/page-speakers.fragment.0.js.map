{"version":3,"sources":["webpack:///./app/dependencies/ffc-logo/index.js","webpack:///./app/dependencies/side-bar/index.js","webpack:///./app/dependencies/side-bar/style.scss?f04f","webpack:///./app/dependencies/side-bar/style.scss","webpack:///./app/dependencies/side-bar/template.html","webpack:///./app/dependencies/nav-list/index.js","webpack:///./app/dependencies/nav-list/style.scss?6f47","webpack:///./app/dependencies/nav-list/style.scss","webpack:///./app/dependencies/nav-list/template.html","webpack:///./app/dependencies/ffc-logo/style.scss?70f4","webpack:///./app/dependencies/ffc-logo/style.scss","webpack:///./app/dependencies/ffc-logo/template.html","webpack:///./app/node_modules/@polymer/polymer/lib/elements/dom-if.js","webpack:///./app/dependencies/fetch-mixin/index.js","webpack:///./app/dependencies/speaker-item/index.js","webpack:///./app/dependencies/speaker-item/style.scss?0dfa","webpack:///./app/dependencies/speaker-item/style.scss","webpack:///./app/dependencies/speaker-item/template.html","webpack:///./app/pages/page-speakers/style.scss?3fd6","webpack:///./app/pages/page-speakers/style.scss","webpack:///./app/pages/page-speakers/template.html","webpack:///./app/dependencies/speaker-list/index.js","webpack:///./app/dependencies/speaker-list/style.scss?9d1c","webpack:///./app/dependencies/speaker-list/style.scss","webpack:///./app/dependencies/speaker-list/template.html","webpack:///./app/pages/page-speakers/index.js","webpack:///./app/node_modules/@polymer/polymer/lib/elements/dom-repeat.js","webpack:///./app/node_modules/@polymer/polymer/lib/utils/templatize.js","webpack:///./app/node_modules/@polymer/polymer/lib/mixins/mutable-data.js","webpack:///./app/node_modules/@polymer/polymer/lib/utils/flush.js"],"names":["Component","get","is","define","console","warn","withLogo","type","Boolean","value","nav","Array","href","label","DomIf","if","observer","restamp","__renderDebouncer","__invalidProps","__instance","_lastIf","__ctor","debounce","__render","parentNode","nodeType","Node","DOCUMENT_FRAGMENT_NODE","host","__teardownInstance","__debounceRender","__ensureInstance","_showHideChildren","dispatchEvent","CustomEvent","bubbles","composed","template","querySelector","MutationObserver","disconnect","Error","observe","childList","templatize","mutableData","forwardHostProp","prop","Object","create","insertBefore","root","__syncHostProperties","c$","children","length","lastChild","previousSibling","i","n","props","_setPendingProperty","__dataHost","_flushProperties","parent","removeChild","hidden","__hideTemplateChildren__","customElements","FetchMixin","superClass","indexOf","path","url","then","result","json","text","speakerId","fetch","speaker","assign","bio","sessionId","session","String","speakers","speakersList","TemplateInstanceBase","domRepeatBase","DomRepeat","items","as","indexAs","itemsIndexAs","sort","Function","filter","delay","Number","renderedItemCount","notify","readOnly","initialCount","targetFramerate","_targetFrameTime","computed","__instances","__limit","Infinity","__pool","__itemsIdxToInstIdx","__chunkCount","__lastChunkTime","__sortFn","__filterFn","__observePaths","__isDetached","__detachInstance","__attachInstance","instanceProps","parentModel","i$","inst","notifyInstanceProp","idx","notifyPath","_methodHost","methodHost","__getMethodHost","apply","arguments","rate","Math","ceil","performance","now","__requestRenderChunk","requestAnimationFrame","__renderChunk","currChunkTime","ratio","round","replace","split","change","isArray","__handleItemPath","__initializeChunking","substring","paths","fn","after","bind","__ensureTemplatized","__applyFullRefresh","_setRenderedItemCount","__tryRenderChunk","isntIdxToItemsIdx","array","a","b","itemsIdxToInstIdx","instIdx","limit","min","itemIdx","item","__insertInstance","__detachAndRemoveInstance","el","appendChild","push","splice","model","pop","__stampInstance","beforeRow","beforeNode","itemsPath","slice","dot","itemsIdx","parseInt","itemSubPath","__handleObservedPaths","itemPath","_setPendingPropertyOrPath","instance","modelForElement","newInstance","HTMLTemplateElementExtension","prototype","HTMLTemplateElement","constructor","writable","DataTemplate","MutableDataTemplate","upgradeTemplate","setPrototypeOf","base","_configureProperties","_stampTemplate","firstChild","nextSibling","__templatizeInstance","__templatizeOwner","options","__templatizeOptions","_enableProperties","iprop","hprop","__hostProps","_enqueueClient","node","eventName","handler","_addEventListenerToNode","e","templateHost","hide","c","TEXT_NODE","__polymerTextContent__","textContent","style","__polymerDisplay__","display","__parentModel","MutableTemplateInstanceBase","findMethodHost","createTemplatizerClass","templateInfo","klass","_bindTemplate","addNotifyEffects","addPropagateEffects","userForwardHostProp","templatizeTemplateClass","hostProps","_addPropertyEffect","PROPERTY_EFFECT_TYPES","PROPAGATE","createForwardHostPropEffect","_createNotifyingProperty","__dataProto","__data","__dataTemp","__dataPending","__dataOld","hostProp","call","userNotifyInstanceProp","NOTIFY","createNotifyInstancePropEffect","createNotifyHostPropEffect","instProp","notifyHostProp","Templatize","owner","_parseTemplate","baseClass","templatizeInstanceClass","mutablePropertyChange","property","old","isObject","shouldChange","MutableData","OptionalMutableData","_mutablePropertyChange","debouncerQueue","enqueueDebouncer","debouncer","flushDebouncers","didFlush","shift","flush","setTimeout","shadyDOM","debouncers","window","ShadyDOM","ShadyCSS","ScopingShim"],"mappings":"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","file":"page-speakers.fragment.0.js","sourcesContent":["import { Element } from '@polymer/polymer/polymer-element';\nimport { GestureEventListeners } from '@polymer/polymer/lib/mixins/gesture-event-listeners';\nimport { customElements } from 'global/window';\nimport css from './style.scss';\nimport template from './template.html';\n\nclass Component extends GestureEventListeners(Element) {\n  static get is () { return 'ffc-logo'; }\n\n  static get template () {\n    return `\n      <style>\n        ${css}\n      </style>\n      ${template}\n    `;\n  }\n}\n\n!customElements.get(Component.is)\n  ? customElements.define(Component.is, Component)\n  : console.warn(`${Component.is} is already defined`);\n\n\n\n// WEBPACK FOOTER //\n// ./app/dependencies/ffc-logo/index.js","import { Element } from '@polymer/polymer/polymer-element';\nimport { GestureEventListeners } from '@polymer/polymer/lib/mixins/gesture-event-listeners';\nimport { customElements } from 'global/window';\nimport css from './style.scss';\nimport template from './template.html';\nimport 'nav-list';\nimport 'ffc-logo';\nimport '@polymer/polymer/lib/elements/dom-if';\n\nclass Component extends GestureEventListeners(Element) {\n  static get is () { return 'side-bar'; }\n\n  static get properties () {\n    return {\n      withLogo: {\n        type: Boolean,\n        value: false\n      }\n    };\n  }\n\n  static get template () {\n    return `\n      <style>\n        ${css}\n      </style>\n      ${template}\n    `;\n  }\n}\n\n!customElements.get(Component.is)\n  ? customElements.define(Component.is, Component)\n  : console.warn(`${Component.is} is already defined`);\n\n\n\n// WEBPACK FOOTER //\n// ./app/dependencies/side-bar/index.js","\n        var result = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./style.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/dependencies/side-bar/style.scss\n// module id = 102\n// module chunks = 0 1 2","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host {\\n  display: flex;\\n  align-items: center;\\n  min-height: 100vh; }\\n\\nffc-logo {\\n  width: 200px;\\n  margin: 20px; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./app/dependencies/side-bar/style.scss\n// module id = 103\n// module chunks = 0 1 2","module.exports = \"<div>\\n  <template is=\\\"dom-if\\\" if=\\\"[[withLogo]]\\\">\\n    <ffc-logo></ffc-logo>\\n  </template>\\n\\n  <nav-list></nav-list>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/dependencies/side-bar/template.html\n// module id = 104\n// module chunks = 0 1 2","import { Element } from '@polymer/polymer/polymer-element';\nimport { GestureEventListeners } from '@polymer/polymer/lib/mixins/gesture-event-listeners';\nimport { customElements } from 'global/window';\nimport css from './style.scss';\nimport template from './template.html';\nimport '@polymer/polymer/lib/elements/dom-repeat';\n\nclass Component extends GestureEventListeners(Element) {\n  static get is () { return 'nav-list'; }\n\n  static get properties () {\n    return {\n      nav: {\n        type: Array,\n        value: [\n          {\n            href: '/',\n            label: 'Home'\n          },\n          {\n            href: '/speakers',\n            label: 'Speakers'\n          },\n          {\n            href: '/schedule',\n            label: 'Schedule'\n          },\n          {\n            href: '/tickets',\n            label: 'Tickets'\n          },\n          {\n            href: '/sponsors',\n            label: 'Sponsors'\n          },\n          {\n            href: '/about',\n            label: 'About'\n          },\n          {\n            href: '/faq',\n            label: 'FAQ'\n          },\n          {\n            href: '/scrapbook',\n            label: 'Scrapbook'\n          }\n        ]\n      }\n    };\n  }\n\n  static get template () {\n    return `\n      <style>\n        ${css}\n      </style>\n      ${template}\n    `;\n  }\n}\n\n!customElements.get(Component.is)\n  ? customElements.define(Component.is, Component)\n  : console.warn(`${Component.is} is already defined`);\n\n\n\n// WEBPACK FOOTER //\n// ./app/dependencies/nav-list/index.js","\n        var result = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./style.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/dependencies/nav-list/style.scss\n// module id = 106\n// module chunks = 0 1 2","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"a {\\n  color: #fff;\\n  text-decoration: none;\\n  border-bottom: 1px solid #fff; }\\n\\n:host {\\n  display: block; }\\n\\n.nav-list {\\n  margin: 0;\\n  list-style-type: none; }\\n\\n.nav-item {\\n  margin: 1rem auto; }\\n\\n.nav-anchor {\\n  border: none; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./app/dependencies/nav-list/style.scss\n// module id = 107\n// module chunks = 0 1 2","module.exports = \"<nav class=\\\"nav\\\" role=\\\"navigation\\\">\\n  <ul class=\\\"nav-list\\\">\\n    <template is=\\\"dom-repeat\\\" items=\\\"[[nav]]\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-anchor\\\" href=\\\"[[item.href]]\\\">\\n          [[item.label]]\\n        </a>\\n      </li>\\n    </template>\\n  </ul>\\n</nav>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/dependencies/nav-list/template.html\n// module id = 108\n// module chunks = 0 1 2","\n        var result = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./style.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/dependencies/ffc-logo/style.scss\n// module id = 109\n// module chunks = 0 1 2","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host {\\n  display: inline-block; }\\n\\nsvg {\\n  width: 100%; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./app/dependencies/ffc-logo/style.scss\n// module id = 110\n// module chunks = 0 1 2","module.exports = \"<svg class=\\\"logo\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" viewBox=\\\"0 0 505.039 237.126\\\">\\n  <g fill=\\\"#EFEFEF\\\">\\n    <path d=\\\"M198.318 11.002v12.571h20.685V34.54h-20.685v23.983H186.46V.036h38.605v10.966h-26.747zM227.654 35.342c0-18.723 7.399-24.162 19.971-24.162 12.66 0 20.061 5.438 20.061 24.162 0 18.812-7.4 23.805-20.061 23.805-12.571 0-19.971-4.993-19.971-23.805zm28.263 0c0-10.075-3.655-13.552-8.292-13.552-4.636 0-8.202 3.478-8.202 13.552 0 9.807 3.566 13.195 8.202 13.195 4.637 0 8.292-3.388 8.292-13.195zM306.205 12.25l-3.389 11.501h-5.527l-8.916 3.388v31.383h-11.769V12.161h10.075l1.604 5.706 4.279-2.764c3.299-2.14 7.044-3.299 10.343-3.299 1.16.001 2.765.179 3.3.446zM370.668 29.19v29.333h-11.769V29.19c0-3.566-1.783-6.509-6.509-6.509h-5.26v35.841h-11.769V29.19c0-3.566-1.783-6.509-6.509-6.509h-5.261v35.841h-11.769V12.161h10.967l.445 1.605 8.916-1.961c4.102 0 8.916.802 11.59 2.585l11.947-2.585c10.434 0 14.981 5.26 14.981 17.385zM198.318 100.17v12.571h20.685v10.966h-20.685v23.983H186.46V89.203h38.605v10.967h-26.747zM266.438 101.329v46.362h-10.967l-.445-1.693-9.361 2.05c-11.323 0-15.691-7.043-15.691-17.385V101.33h11.769v29.333c0 4.457 1.961 6.508 5.171 6.508l7.757-.802v-35.04h11.767zM313.249 118.358v29.333h-11.77v-29.333c0-4.458-1.961-6.509-5.171-6.509l-7.757.803v35.039h-11.769v-46.362h10.967l.445 1.694 9.361-2.051c11.325 0 15.694 7.044 15.694 17.386zM340.712 100.972h5.082l8.915 2.051v9.629l-10.163-1.07h-3.834c-5.617 0-7.489 4.012-7.489 13.017 0 9.184 1.872 12.75 7.489 12.75h3.834l10.163-1.07v9.629l-8.915 2.051h-5.082c-13.552 0-19.258-6.062-19.258-23.359 0-17.298 5.706-23.628 19.258-23.628zM390.287 137.17v8.203l-11.77 2.585c-7.935 0-12.036-5.438-12.036-15.514v-20.238h-5.616v-10.877h5.795V90.273l11.59-1.605v12.66h11.502v10.877H378.25v15.067c0 8.024 1.694 9.896 6.598 9.896h5.439zM410.617 80.823v14.176H397.6V83.586l13.017-2.763zm-.625 20.506v46.362h-11.769v-46.362h11.769zM419.623 124.51c0-18.723 7.399-24.162 19.971-24.162 12.66 0 20.061 5.438 20.061 24.162 0 18.812-7.4 23.805-20.061 23.805-12.572-.001-19.971-4.993-19.971-23.805zm28.263 0c0-10.075-3.655-13.552-8.292-13.552-4.636 0-8.202 3.478-8.202 13.552 0 9.808 3.566 13.195 8.202 13.195s8.292-3.388 8.292-13.195zM505.039 118.358v29.333h-11.77v-29.333c0-4.458-1.961-6.509-5.171-6.509l-7.757.803v35.039h-11.769v-46.362h10.967l.445 1.694 9.361-2.051c11.325 0 15.694 7.044 15.694 17.386zM229.523 212.696h-3.656v22.735l-6.687 1.427h-15.959c-13.374 0-18.812-4.19-18.812-16.673 0-6.241 1.962-10.521 5.35-13.284-2.051-2.496-3.21-6.151-3.21-11.323 0-11.857 5.35-17.118 14.89-17.118h9.094l6.509 1.338v9.45h-14.265c-2.942 0-4.369 2.586-4.369 6.241 0 4.102 1.783 6.419 3.923 6.419h3.478v10.788h-4.28c-3.031 0-5.26 3.389-5.26 6.776 0 4.102 2.496 6.598 6.954 6.598h11.056v-13.374h-3.655v-10.788h18.901v10.788zM277.405 178.192h11.947l8.916 2.051v10.075l-10.164-1.338h-6.687c-7.133 0-10.075 4.993-10.075 18.724 0 13.819 2.942 18.634 10.075 18.634h6.687l10.164-1.07v9.808l-8.916 2.051h-11.947c-11.145 0-17.92-8.381-17.92-29.422s6.776-29.513 17.92-29.513zM307.454 236.858v-64.461l11.769-2.407v66.868h-11.769zM364.783 205.742v31.116h-22.557c-9.985 0-14.8-4.904-14.8-13.998 0-9.272 4.814-14.443 14.8-14.443h5.617l5.171 1.07v-3.478c0-2.675-1.783-4.903-5.528-4.903h-5.171l-10.966 1.069v-9.629l10.342-2.229h9.272c7.223.001 13.82 7.044 13.82 15.425zm-22.468 20.328h10.699v-6.865h-10.699c-1.783 0-3.12 1.961-3.12 3.655 0 1.605 1.516 3.21 3.12 3.21zM394.653 200.66h-5.082c-4.102 0-5.527 1.338-5.527 3.21 0 2.407.892 3.21 5.527 3.655 14.265 1.516 18.277 4.726 18.277 15.781 0 10.698-3.745 13.819-18.188 13.819h-7.578l-8.916-2.051v-9.629l10.164 1.069h6.241c5.706 0 6.954-.98 6.954-3.031 0-2.229-1.516-3.388-6.954-4.101-12.66-1.516-16.851-5.261-16.851-14.979 0-10.164 4.992-14.354 16.851-14.354h6.419l9.629 2.14v9.54l-10.966-1.069zM436.828 200.66h-5.082c-4.102 0-5.527 1.338-5.527 3.21 0 2.407.892 3.21 5.527 3.655 14.265 1.516 18.277 4.726 18.277 15.781 0 10.698-3.745 13.819-18.188 13.819h-7.578l-8.916-2.051v-9.629l10.164 1.069h6.241c5.706 0 6.954-.98 6.954-3.031 0-2.229-1.516-3.388-6.954-4.101-12.66-1.516-16.851-5.261-16.851-14.979 0-10.164 4.993-14.354 16.851-14.354h6.419l9.629 2.14v9.54l-10.966-1.069z\\\"></path>\\n    <g>\\n        <path d=\\\"M0 0h13.429v147.72H0z\\\"></path>\\n        <path d=\\\"M0 0h147.72v13.429H0zM0 40.287h147.72v13.429H0zM26.858 107.433h13.43v40.287h-13.43z\\\"></path>\\n        <path d=\\\"M26.858 107.433h53.717v13.43H26.858zM94.004 67.146h13.429v80.574H94.004z\\\"></path>\\n        <path d=\\\"M94.004 67.146h53.716v13.429H94.004zM94.004 134.291h53.716v13.429H94.004zM26.858 67.146h13.43v26.858h-13.43z\\\"></path>\\n        <path d=\\\"M26.858 67.146h53.717v13.429H26.858z\\\"></path>\\n    </g>\\n  </g>\\n</svg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/dependencies/ffc-logo/template.html\n// module id = 111\n// module chunks = 0 1 2","import { Element } from '../../polymer-element.js';\nimport { Templatize } from '../utils/templatize.js';\nimport { Debouncer } from '../utils/debounce.js';\nimport { enqueueDebouncer, flush } from '../utils/flush.js';\nimport { microTask } from '../utils/async.js';\nimport { root as root$0 } from '../utils/path.js';\n\n/**\n * The `<dom-if>` element will stamp a light-dom `<template>` child when\n * the `if` property becomes truthy, and the template can use Polymer\n * data-binding and declarative event features when used in the context of\n * a Polymer element's template.\n *\n * When `if` becomes falsey, the stamped content is hidden but not\n * removed from dom. When `if` subsequently becomes truthy again, the content\n * is simply re-shown. This approach is used due to its favorable performance\n * characteristics: the expense of creating template content is paid only\n * once and lazily.\n *\n * Set the `restamp` property to true to force the stamped content to be\n * created / destroyed when the `if` condition changes.\n *\n * @customElement\n * @polymer\n * @extends Polymer.Element\n * @memberof Polymer\n * @summary Custom element that conditionally stamps and hides or removes\n *   template content based on a boolean flag.\n */\nclass DomIf extends Element {\n\n  // Not needed to find template; can be removed once the analyzer\n  // can find the tag name from customElements.define call\n  static get is() { return 'dom-if'; }\n\n  static get template() { return null; }\n\n  static get properties() {\n\n    return {\n\n      /**\n       * Fired whenever DOM is added or removed/hidden by this template (by\n       * default, rendering occurs lazily).  To force immediate rendering, call\n       * `render`.\n       *\n       * @event dom-change\n       */\n\n      /**\n       * A boolean indicating whether this template should stamp.\n       */\n      if: {\n        type: Boolean,\n        observer: '__debounceRender'\n      },\n\n      /**\n       * When true, elements will be removed from DOM and discarded when `if`\n       * becomes false and re-created and added back to the DOM when `if`\n       * becomes true.  By default, stamped elements will be hidden but left\n       * in the DOM when `if` becomes false, which is generally results\n       * in better performance.\n       */\n      restamp: {\n        type: Boolean,\n        observer: '__debounceRender'\n      }\n\n    };\n\n  }\n\n  constructor() {\n    super();\n    this.__renderDebouncer = null;\n    this.__invalidProps = null;\n    this.__instance = null;\n    this._lastIf = false;\n    this.__ctor = null;\n  }\n\n  __debounceRender() {\n    // Render is async for 2 reasons:\n    // 1. To eliminate dom creation trashing if user code thrashes `if` in the\n    //    same turn. This was more common in 1.x where a compound computed\n    //    property could result in the result changing multiple times, but is\n    //    mitigated to a large extent by batched property processing in 2.x.\n    // 2. To avoid double object propagation when a bag including values bound\n    //    to the `if` property as well as one or more hostProps could enqueue\n    //    the <dom-if> to flush before the <template>'s host property\n    //    forwarding. In that scenario creating an instance would result in\n    //    the host props being set once, and then the enqueued changes on the\n    //    template would set properties a second time, potentially causing an\n    //    object to be set to an instance more than once.  Creating the\n    //    instance async from flushing data ensures this doesn't happen. If\n    //    we wanted a sync option in the future, simply having <dom-if> flush\n    //    (or clear) its template's pending host properties before creating\n    //    the instance would also avoid the problem.\n    this.__renderDebouncer = Debouncer.debounce(\n          this.__renderDebouncer\n        , microTask\n        , () => this.__render());\n    enqueueDebouncer(this.__renderDebouncer);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    if (!this.parentNode ||\n        (this.parentNode.nodeType == Node.DOCUMENT_FRAGMENT_NODE &&\n         !this.parentNode.host)) {\n      this.__teardownInstance();\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    if (this.if) {\n      this.__debounceRender();\n    }\n  }\n\n  /**\n   * Forces the element to render its content. Normally rendering is\n   * asynchronous to a provoking change. This is done for efficiency so\n   * that multiple changes trigger only a single render. The render method\n   * should be called if, for example, template rendering is required to\n   * validate application state.\n   */\n  render() {\n    flush();\n  }\n\n  __render() {\n    if (this.if) {\n      if (!this.__ensureInstance()) {\n        // No template found yet\n        return;\n      }\n      this._showHideChildren();\n    } else if (this.restamp) {\n      this.__teardownInstance();\n    }\n    if (!this.restamp && this.__instance) {\n      this._showHideChildren();\n    }\n    if (this.if != this._lastIf) {\n      this.dispatchEvent(new CustomEvent('dom-change', {\n        bubbles: true,\n        composed: true\n      }));\n      this._lastIf = this.if;\n    }\n  }\n\n  __ensureInstance() {\n    let parentNode = this.parentNode;\n    // Guard against element being detached while render was queued\n    if (parentNode) {\n      if (!this.__ctor) {\n        let template = this.querySelector('template');\n        if (!template) {\n          // Wait until childList changes and template should be there by then\n          let observer = new MutationObserver(() => {\n            if (this.querySelector('template')) {\n              observer.disconnect();\n              this.__render();\n            } else {\n              throw new Error('dom-if requires a <template> child');\n            }\n          });\n          observer.observe(this, {childList: true});\n          return false;\n        }\n        this.__ctor = Templatize.templatize(template, this, {\n          // dom-if templatizer instances require `mutable: true`, as\n          // `__syncHostProperties` relies on that behavior to sync objects\n          mutableData: true,\n          /**\n           * @param {string} prop Property to forward\n           * @param {*} value Value of property\n           * @this {this}\n           */\n          forwardHostProp: function(prop, value) {\n            if (this.__instance) {\n              if (this.if) {\n                this.__instance.forwardHostProp(prop, value);\n              } else {\n                // If we have an instance but are squelching host property\n                // forwarding due to if being false, note the invalidated\n                // properties so `__syncHostProperties` can sync them the next\n                // time `if` becomes true\n                this.__invalidProps = this.__invalidProps || Object.create(null);\n                this.__invalidProps[root$0(prop)] = true;\n              }\n            }\n          }\n        });\n      }\n      if (!this.__instance) {\n        this.__instance = new this.__ctor();\n        parentNode.insertBefore(this.__instance.root, this);\n      } else {\n        this.__syncHostProperties();\n        let c$ = this.__instance.children;\n        if (c$ && c$.length) {\n          // Detect case where dom-if was re-attached in new position\n          let lastChild = this.previousSibling;\n          if (lastChild !== c$[c$.length-1]) {\n            for (let i=0, n; (i<c$.length) && (n=c$[i]); i++) {\n              parentNode.insertBefore(n, this);\n            }\n          }\n        }\n      }\n    }\n    return true;\n  }\n\n  __syncHostProperties() {\n    let props = this.__invalidProps;\n    if (props) {\n      for (let prop in props) {\n        this.__instance._setPendingProperty(prop, this.__dataHost[prop]);\n      }\n      this.__invalidProps = null;\n      this.__instance._flushProperties();\n    }\n  }\n\n  __teardownInstance() {\n    if (this.__instance) {\n      let c$ = this.__instance.children;\n      if (c$ && c$.length) {\n        // use first child parent, for case when dom-if may have been detached\n        let parent = c$[0].parentNode;\n        for (let i=0, n; (i<c$.length) && (n=c$[i]); i++) {\n          parent.removeChild(n);\n        }\n      }\n      this.__instance = null;\n      this.__invalidProps = null;\n    }\n  }\n\n  _showHideChildren() {\n    let hidden = this.__hideTemplateChildren__ || !this.if;\n    if (this.__instance) {\n      this.__instance._showHideChildren(hidden);\n    }\n  }\n\n}\n\ncustomElements.define(DomIf.is, DomIf);\n\nexport { DomIf };\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@polymer/polymer/lib/elements/dom-if.js","import { fetch, location } from 'global/window';\nconst host = 'https://raw.githubusercontent.com/tjmonsi/ffc-pwdo/master';\n\nexport const FetchMixin = (superClass) => {\n  return class extends superClass {\n    getHost () {\n      return location.host.indexOf('localhost') === 0 ? '' : host;\n    }\n    fetch (path) {\n      const url = location.host.indexOf('localhost') === 0\n        ? path\n        : host + path;\n\n      return fetch(url)\n        .then(result => path.indexOf('.md') < 0 ? result.json() : result.text());\n      // add catch\n    }\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/dependencies/fetch-mixin/index.js","import { Element } from '@polymer/polymer/polymer-element';\nimport { GestureEventListeners } from '@polymer/polymer/lib/mixins/gesture-event-listeners';\nimport { customElements } from 'global/window';\nimport { FetchMixin } from 'fetch-mixin';\nimport css from './style.scss';\nimport template from './template.html';\n\nclass Component extends FetchMixin(GestureEventListeners(Element)) {\n  static get is () { return 'speaker-item'; }\n\n  static get properties () {\n    return {\n      speaker: {\n        type: Object,\n        value: {}\n      },\n      session: {\n        type: Object,\n        value: {}\n      },\n      speakerId: {\n        type: String,\n        observer: '_fetchSpeaker'\n      }\n    };\n  }\n\n  static get template () {\n    return `\n      <style>\n        ${css}\n      </style>\n      ${template}\n    `;\n  }\n\n  static get observers () {\n    return [\n      '_fetchSession(speaker.sessionId)'\n    ];\n  }\n\n  _fetchSpeaker (speakerId) {\n    if (speakerId) {\n      this.fetch(`/data/speakers/${speakerId}.json`)\n        .then(speaker => (this.speaker = Object.assign({}, this.speaker, speaker)));\n\n      this.fetch(`/data/speakers/${speakerId}.md`)\n        .then(bio => (this.speaker = Object.assign({}, this.speaker, { bio })));\n    } else {\n      this.speaker = {};\n    }\n  }\n\n  _fetchSession (sessionId) {\n    if (sessionId) {\n      this.fetch(`/data/sessions/${sessionId}.json`)\n        .then(session => (this.session = Object.assign({}, this.session, session)));\n    } else {\n      this.session = {};\n    }\n  }\n}\n\n!customElements.get(Component.is)\n  ? customElements.define(Component.is, Component)\n  : console.warn(`${Component.is} is already defined`);\n\n\n\n// WEBPACK FOOTER //\n// ./app/dependencies/speaker-item/index.js","\n        var result = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./style.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/dependencies/speaker-item/style.scss\n// module id = 115\n// module chunks = 0 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"* {\\n  font-family: 'Inovato', sans-serif; }\\n\\n:host {\\n  display: grid;\\n  padding: 20px;\\n  grid-template-columns: 1fr 1fr 1fr 1fr;\\n  grid-template-rows: auto;\\n  background: #3a3a3a;\\n  color: #efefef;\\n  grid-template-areas: \\\"avatar main main main\\\"; }\\n\\n.speaker {\\n  grid-area: main;\\n  display: block;\\n  padding: 0 20px; }\\n\\n.avatar {\\n  grid-area: avatar;\\n  max-width: 100%; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./app/dependencies/speaker-item/style.scss\n// module id = 116\n// module chunks = 0 1","module.exports = \"<img class=\\\"avatar\\\" src=\\\"[[getHost()]]/data/speakers/[[speakerId]].jpg\\\">\\n\\n<section class=\\\"speaker\\\">\\n  <h3 class=\\\"speaker-name\\\">\\n    [[speaker.name]]\\n  </h3>\\n  <p class=\\\"speaker-position\\\">\\n    [[speaker.position]]\\n  </p>\\n  <p class=\\\"speaker-bio\\\">\\n    [[speaker.bio]]\\n  </p>\\n  <a class=\\\"speaker-talk\\\">\\n    [[session.title]]\\n  </a>\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/dependencies/speaker-item/template.html\n// module id = 117\n// module chunks = 0 1","\n        var result = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./style.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/pages/page-speakers/style.scss\n// module id = 121\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"* {\\n  font-family: 'Inovato', sans-serif; }\\n\\n:host {\\n  display: grid;\\n  grid-template-columns: 1fr 1fr 1fr 1fr;\\n  grid-template-rows: auto;\\n  min-height: 100vh;\\n  background: #3a3a3a;\\n  color: #efefef;\\n  grid-template-areas: \\\"sidebar main main main\\\"; }\\n\\n.main {\\n  grid-area: main;\\n  display: block;\\n  min-height: 100vh;\\n  padding: 20px; }\\n\\nside-bar {\\n  grid-area: sidebar;\\n  min-height: 100vh; }\\n\\na {\\n  color: #fff;\\n  text-decoration: none;\\n  border-bottom: 1px solid #fff; }\\n\\n.button {\\n  display: inline-block;\\n  margin: 1rem auto;\\n  padding: 1rem 1.5rem;\\n  border: 1px solid #fff; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./app/pages/page-speakers/style.scss\n// module id = 122\n// module chunks = 0","module.exports = \"<side-bar with-logo></side-bar>\\n\\n<section class=\\\"main\\\">\\n\\n  <header class=\\\"header\\\">\\n    <h1>\\n      Speakers\\n    </h1>\\n  </header>\\n\\n  <template is=\\\"dom-repeat\\\" items=\\\"[[speakersList]]\\\">\\n    <speaker-list speakers=\\\"[[item]]\\\"></speaker-list>\\n  </template>\\n\\n</section>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/pages/page-speakers/template.html\n// module id = 123\n// module chunks = 0","import { Element } from '@polymer/polymer/polymer-element';\nimport { GestureEventListeners } from '@polymer/polymer/lib/mixins/gesture-event-listeners';\nimport { customElements } from 'global/window';\nimport css from './style.scss';\nimport template from './template.html';\nimport 'speaker-item';\nimport '@polymer/polymer/lib/elements/dom-repeat';\n\nclass Component extends GestureEventListeners(Element) {\n  static get is () { return 'speaker-list'; }\n\n  static get properties () {\n    return {\n      speakers: {\n        type: Object\n      }\n    };\n  }\n\n  static get template () {\n    return `\n      <style>\n        ${css}\n      </style>\n      ${template}\n    `;\n  }\n}\n\n!customElements.get(Component.is)\n  ? customElements.define(Component.is, Component)\n  : console.warn(`${Component.is} is already defined`);\n\n\n\n// WEBPACK FOOTER //\n// ./app/dependencies/speaker-list/index.js","\n        var result = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./style.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/dependencies/speaker-list/style.scss\n// module id = 125\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"* {\\n  font-family: 'Inovato', sans-serif; }\\n\\n:host {\\n  display: block; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./app/dependencies/speaker-list/style.scss\n// module id = 126\n// module chunks = 0","module.exports = \"<h2>\\n  [[speakers.title]]\\n</h2>\\n\\n<template is=\\\"dom-repeat\\\" items=\\\"[[speakers.list]]\\\">\\n  <speaker-item speaker-id=\\\"[[item]]\\\"></speaker-item>\\n</template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/dependencies/speaker-list/template.html\n// module id = 127\n// module chunks = 0","import { Element } from '@polymer/polymer/polymer-element';\nimport { GestureEventListeners } from '@polymer/polymer/lib/mixins/gesture-event-listeners';\nimport { customElements } from 'global/window';\nimport { FetchMixin } from 'fetch-mixin';\nimport css from './style.scss';\nimport template from './template.html';\nimport 'side-bar';\nimport 'speaker-list';\nimport '@polymer/polymer/lib/elements/dom-repeat';\n\nclass Component extends FetchMixin(GestureEventListeners(Element)) {\n  static get is () { return 'page-speakers'; }\n\n  static get properties () {\n    return {\n      speakersList: {\n        type: Array\n      }\n    };\n  }\n\n  static get template () {\n    return `\n      <style>\n        ${css}\n      </style>\n      ${template}\n    `;\n  }\n\n  connectedCallback () {\n    super.connectedCallback();\n    this.fetch('/data/speakers.json')\n      .then(json => (this.speakersList = json));\n  }\n}\n\n!customElements.get(Component.is)\n  ? customElements.define(Component.is, Component)\n  : console.warn(`${Component.is} is already defined`);\n\n\n\n// WEBPACK FOOTER //\n// ./app/pages/page-speakers/index.js","import { Element } from '../../polymer-element.js';\nimport { TemplateInstanceBase as TemplateInstanceBase$0, Templatize } from '../utils/templatize.js';\nimport { Debouncer } from '../utils/debounce.js';\nimport { enqueueDebouncer, flush } from '../utils/flush.js';\nimport { OptionalMutableData } from '../mixins/mutable-data.js';\nimport { matches, translate } from '../utils/path.js';\nimport { timeOut, microTask } from '../utils/async.js';\n\nlet TemplateInstanceBase = TemplateInstanceBase$0; // eslint-disable-line\n\n/**\n * @constructor\n * @implements {Polymer_OptionalMutableData}\n * @extends {Polymer.Element}\n */\nconst domRepeatBase = OptionalMutableData(Element);\n\n/**\n * The `<dom-repeat>` element will automatically stamp and binds one instance\n * of template content to each object in a user-provided array.\n * `dom-repeat` accepts an `items` property, and one instance of the template\n * is stamped for each item into the DOM at the location of the `dom-repeat`\n * element.  The `item` property will be set on each instance's binding\n * scope, thus templates should bind to sub-properties of `item`.\n *\n * Example:\n *\n * ```html\n * <dom-module id=\"employee-list\">\n *\n *   <template>\n *\n *     <div> Employee list: </div>\n *     <template is=\"dom-repeat\" items=\"{{employees}}\">\n *         <div>First name: <span>{{item.first}}</span></div>\n *         <div>Last name: <span>{{item.last}}</span></div>\n *     </template>\n *\n *   </template>\n *\n *   <script>\n *     Polymer({\n *       is: 'employee-list',\n *       ready: function() {\n *         this.employees = [\n *             {first: 'Bob', last: 'Smith'},\n *             {first: 'Sally', last: 'Johnson'},\n *             ...\n *         ];\n *       }\n *     });\n *   < /script>\n *\n * </dom-module>\n * ```\n *\n * Notifications for changes to items sub-properties will be forwarded to template\n * instances, which will update via the normal structured data notification system.\n *\n * Mutations to the `items` array itself should be made using the Array\n * mutation API's on `Polymer.Base` (`push`, `pop`, `splice`, `shift`,\n * `unshift`), and template instances will be kept in sync with the data in the\n * array.\n *\n * Events caught by event handlers within the `dom-repeat` template will be\n * decorated with a `model` property, which represents the binding scope for\n * each template instance.  The model is an instance of Polymer.Base, and should\n * be used to manipulate data on the instance, for example\n * `event.model.set('item.checked', true);`.\n *\n * Alternatively, the model for a template instance for an element stamped by\n * a `dom-repeat` can be obtained using the `modelForElement` API on the\n * `dom-repeat` that stamped it, for example\n * `this.$.domRepeat.modelForElement(event.target).set('item.checked', true);`.\n * This may be useful for manipulating instance data of event targets obtained\n * by event handlers on parents of the `dom-repeat` (event delegation).\n *\n * A view-specific filter/sort may be applied to each `dom-repeat` by supplying a\n * `filter` and/or `sort` property.  This may be a string that names a function on\n * the host, or a function may be assigned to the property directly.  The functions\n * should implemented following the standard `Array` filter/sort API.\n *\n * In order to re-run the filter or sort functions based on changes to sub-fields\n * of `items`, the `observe` property may be set as a space-separated list of\n * `item` sub-fields that should cause a re-filter/sort when modified.  If\n * the filter or sort function depends on properties not contained in `items`,\n * the user should observe changes to those properties and call `render` to update\n * the view based on the dependency change.\n *\n * For example, for an `dom-repeat` with a filter of the following:\n *\n * ```js\n * isEngineer: function(item) {\n *     return item.type == 'engineer' || item.manager.type == 'engineer';\n * }\n * ```\n *\n * Then the `observe` property should be configured as follows:\n *\n * ```html\n * <template is=\"dom-repeat\" items=\"{{employees}}\"\n *           filter=\"isEngineer\" observe=\"type manager.type\">\n * ```\n *\n * @customElement\n * @polymer\n * @memberof Polymer\n * @extends {domRepeatBase}\n * @appliesMixin Polymer.OptionalMutableData\n * @summary Custom element for stamping instance of a template bound to\n *   items in an array.\n */\nclass DomRepeat extends domRepeatBase {\n\n  // Not needed to find template; can be removed once the analyzer\n  // can find the tag name from customElements.define call\n  static get is() { return 'dom-repeat'; }\n\n  static get template() { return null; }\n\n  static get properties() {\n\n    /**\n     * Fired whenever DOM is added or removed by this template (by\n     * default, rendering occurs lazily).  To force immediate rendering, call\n     * `render`.\n     *\n     * @event dom-change\n     */\n    return {\n\n      /**\n       * An array containing items determining how many instances of the template\n       * to stamp and that that each template instance should bind to.\n       */\n      items: {\n        type: Array\n      },\n\n      /**\n       * The name of the variable to add to the binding scope for the array\n       * element associated with a given template instance.\n       */\n      as: {\n        type: String,\n        value: 'item'\n      },\n\n      /**\n       * The name of the variable to add to the binding scope with the index\n       * of the instance in the sorted and filtered list of rendered items.\n       * Note, for the index in the `this.items` array, use the value of the\n       * `itemsIndexAs` property.\n       */\n      indexAs: {\n        type: String,\n        value: 'index'\n      },\n\n      /**\n       * The name of the variable to add to the binding scope with the index\n       * of the instance in the `this.items` array. Note, for the index of\n       * this instance in the sorted and filtered list of rendered items,\n       * use the value of the `indexAs` property.\n       */\n      itemsIndexAs: {\n        type: String,\n        value: 'itemsIndex'\n      },\n\n      /**\n       * A function that should determine the sort order of the items.  This\n       * property should either be provided as a string, indicating a method\n       * name on the element's host, or else be an actual function.  The\n       * function should match the sort function passed to `Array.sort`.\n       * Using a sort function has no effect on the underlying `items` array.\n       */\n      sort: {\n        type: Function,\n        observer: '__sortChanged'\n      },\n\n      /**\n       * A function that can be used to filter items out of the view.  This\n       * property should either be provided as a string, indicating a method\n       * name on the element's host, or else be an actual function.  The\n       * function should match the sort function passed to `Array.filter`.\n       * Using a filter function has no effect on the underlying `items` array.\n       */\n      filter: {\n        type: Function,\n        observer: '__filterChanged'\n      },\n\n      /**\n       * When using a `filter` or `sort` function, the `observe` property\n       * should be set to a space-separated list of the names of item\n       * sub-fields that should trigger a re-sort or re-filter when changed.\n       * These should generally be fields of `item` that the sort or filter\n       * function depends on.\n       */\n      observe: {\n        type: String,\n        observer: '__observeChanged'\n      },\n\n      /**\n       * When using a `filter` or `sort` function, the `delay` property\n       * determines a debounce time after a change to observed item\n       * properties that must pass before the filter or sort is re-run.\n       * This is useful in rate-limiting shuffing of the view when\n       * item changes may be frequent.\n       */\n      delay: Number,\n\n      /**\n       * Count of currently rendered items after `filter` (if any) has been applied.\n       * If \"chunking mode\" is enabled, `renderedItemCount` is updated each time a\n       * set of template instances is rendered.\n       *\n       */\n      renderedItemCount: {\n        type: Number,\n        notify: true,\n        readOnly: true\n      },\n\n      /**\n       * Defines an initial count of template instances to render after setting\n       * the `items` array, before the next paint, and puts the `dom-repeat`\n       * into \"chunking mode\".  The remaining items will be created and rendered\n       * incrementally at each animation frame therof until all instances have\n       * been rendered.\n       */\n      initialCount: {\n        type: Number,\n        observer: '__initializeChunking'\n      },\n\n      /**\n       * When `initialCount` is used, this property defines a frame rate to\n       * target by throttling the number of instances rendered each frame to\n       * not exceed the budget for the target frame rate.  Setting this to a\n       * higher number will allow lower latency and higher throughput for\n       * things like event handlers, but will result in a longer time for the\n       * remaining items to complete rendering.\n       */\n      targetFramerate: {\n        type: Number,\n        value: 20\n      },\n\n      _targetFrameTime: {\n        type: Number,\n        computed: '__computeFrameTime(targetFramerate)'\n      }\n\n    };\n\n  }\n\n  static get observers() {\n    return [ '__itemsChanged(items.*)' ];\n  }\n\n  constructor() {\n    super();\n    this.__instances = [];\n    this.__limit = Infinity;\n    this.__pool = [];\n    this.__renderDebouncer = null;\n    this.__itemsIdxToInstIdx = {};\n    this.__chunkCount = null;\n    this.__lastChunkTime = null;\n    this.__sortFn = null;\n    this.__filterFn = null;\n    this.__observePaths = null;\n    this.__ctor = null;\n    this.__isDetached = true;\n    this.template = null;\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__isDetached = true;\n    for (let i=0; i<this.__instances.length; i++) {\n      this.__detachInstance(i);\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    // only perform attachment if the element was previously detached.\n    if (this.__isDetached) {\n      this.__isDetached = false;\n      let parent = this.parentNode;\n      for (let i=0; i<this.__instances.length; i++) {\n        this.__attachInstance(i, parent);\n      }\n    }\n  }\n\n  __ensureTemplatized() {\n    // Templatizing (generating the instance constructor) needs to wait\n    // until ready, since won't have its template content handed back to\n    // it until then\n    if (!this.__ctor) {\n      let template = this.template = this.querySelector('template');\n      if (!template) {\n        // // Wait until childList changes and template should be there by then\n        let observer = new MutationObserver(() => {\n          if (this.querySelector('template')) {\n            observer.disconnect();\n            this.__render();\n          } else {\n            throw new Error('dom-repeat requires a <template> child');\n          }\n        });\n        observer.observe(this, {childList: true});\n        return false;\n      }\n      // Template instance props that should be excluded from forwarding\n      let instanceProps = {};\n      instanceProps[this.as] = true;\n      instanceProps[this.indexAs] = true;\n      instanceProps[this.itemsIndexAs] = true;\n      this.__ctor = Templatize.templatize(template, this, {\n        mutableData: this.mutableData,\n        parentModel: true,\n        instanceProps: instanceProps,\n        /**\n         * @this {this}\n         * @param {string} prop Property to set\n         * @param {*} value Value to set property to\n         */\n        forwardHostProp: function(prop, value) {\n          let i$ = this.__instances;\n          for (let i=0, inst; (i<i$.length) && (inst=i$[i]); i++) {\n            inst.forwardHostProp(prop, value);\n          }\n        },\n        /**\n         * @this {this}\n         * @param {Object} inst Instance to notify\n         * @param {string} prop Property to notify\n         * @param {*} value Value to notify\n         */\n        notifyInstanceProp: function(inst, prop, value) {\n          if (matches(this.as, prop)) {\n            let idx = inst[this.itemsIndexAs];\n            if (prop == this.as) {\n              this.items[idx] = value;\n            }\n            let path = translate(this.as, 'items.' + idx, prop);\n            this.notifyPath(path, value);\n          }\n        }\n      });\n    }\n    return true;\n  }\n\n  __getMethodHost() {\n    // Technically this should be the owner of the outermost template.\n    // In shadow dom, this is always getRootNode().host, but we can\n    // approximate this via cooperation with our dataHost always setting\n    // `_methodHost` as long as there were bindings (or id's) on this\n    // instance causing it to get a dataHost.\n    return this.__dataHost._methodHost || this.__dataHost;\n  }\n\n  __sortChanged(sort) {\n    let methodHost = this.__getMethodHost();\n    this.__sortFn = sort && (typeof sort == 'function' ? sort :\n      function() { return methodHost[sort].apply(methodHost, arguments); });\n    if (this.items) {\n      this.__debounceRender(this.__render);\n    }\n  }\n\n  __filterChanged(filter) {\n    let methodHost = this.__getMethodHost();\n    this.__filterFn = filter && (typeof filter == 'function' ? filter :\n      function() { return methodHost[filter].apply(methodHost, arguments); });\n    if (this.items) {\n      this.__debounceRender(this.__render);\n    }\n  }\n\n  __computeFrameTime(rate) {\n    return Math.ceil(1000/rate);\n  }\n\n  __initializeChunking() {\n    if (this.initialCount) {\n      this.__limit = this.initialCount;\n      this.__chunkCount = this.initialCount;\n      this.__lastChunkTime = performance.now();\n    }\n  }\n\n  __tryRenderChunk() {\n    // Debounced so that multiple calls through `_render` between animation\n    // frames only queue one new rAF (e.g. array mutation & chunked render)\n    if (this.items && this.__limit < this.items.length) {\n      this.__debounceRender(this.__requestRenderChunk);\n    }\n  }\n\n  __requestRenderChunk() {\n    requestAnimationFrame(()=>this.__renderChunk());\n  }\n\n  __renderChunk() {\n    // Simple auto chunkSize throttling algorithm based on feedback loop:\n    // measure actual time between frames and scale chunk count by ratio\n    // of target/actual frame time\n    let currChunkTime = performance.now();\n    let ratio = this._targetFrameTime / (currChunkTime - this.__lastChunkTime);\n    this.__chunkCount = Math.round(this.__chunkCount * ratio) || 1;\n    this.__limit += this.__chunkCount;\n    this.__lastChunkTime = currChunkTime;\n    this.__debounceRender(this.__render);\n  }\n\n  __observeChanged() {\n    this.__observePaths = this.observe &&\n      this.observe.replace('.*', '.').split(' ');\n  }\n\n  __itemsChanged(change) {\n    if (this.items && !Array.isArray(this.items)) {\n      console.warn('dom-repeat expected array for `items`, found', this.items);\n    }\n    // If path was to an item (e.g. 'items.3' or 'items.3.foo'), forward the\n    // path to that instance synchronously (retuns false for non-item paths)\n    if (!this.__handleItemPath(change.path, change.value)) {\n      // Otherwise, the array was reset ('items') or spliced ('items.splices'),\n      // so queue a full refresh\n      this.__initializeChunking();\n      this.__debounceRender(this.__render);\n    }\n  }\n\n  __handleObservedPaths(path) {\n    if (this.__observePaths) {\n      path = path.substring(path.indexOf('.') + 1);\n      let paths = this.__observePaths;\n      for (let i=0; i<paths.length; i++) {\n        if (path.indexOf(paths[i]) === 0) {\n          this.__debounceRender(this.__render, this.delay);\n          return true;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {function(this:DomRepeat)} fn Function to debounce.\n   * @param {number=} delay Delay in ms to debounce by.\n   */\n  __debounceRender(fn, delay = 0) {\n    this.__renderDebouncer = Debouncer.debounce(\n          this.__renderDebouncer\n        , delay > 0 ? timeOut.after(delay) : microTask\n        , fn.bind(this));\n    enqueueDebouncer(this.__renderDebouncer);\n  }\n\n  /**\n   * Forces the element to render its content. Normally rendering is\n   * asynchronous to a provoking change. This is done for efficiency so\n   * that multiple changes trigger only a single render. The render method\n   * should be called if, for example, template rendering is required to\n   * validate application state.\n   */\n  render() {\n    // Queue this repeater, then flush all in order\n    this.__debounceRender(this.__render);\n    flush();\n  }\n\n  __render() {\n    if (!this.__ensureTemplatized()) {\n      // No template found yet\n      return;\n    }\n    this.__applyFullRefresh();\n    // Reset the pool\n    // TODO(kschaaf): Reuse pool across turns and nested templates\n    // Now that objects/arrays are re-evaluated when set, we can safely\n    // reuse pooled instances across turns, however we still need to decide\n    // semantics regarding how long to hold, how many to hold, etc.\n    this.__pool.length = 0;\n    // Set rendered item count\n    this._setRenderedItemCount(this.__instances.length);\n    // Notify users\n    this.dispatchEvent(new CustomEvent('dom-change', {\n      bubbles: true,\n      composed: true\n    }));\n    // Check to see if we need to render more items\n    this.__tryRenderChunk();\n  }\n\n  __applyFullRefresh() {\n    let items = this.items || [];\n    let isntIdxToItemsIdx = new Array(items.length);\n    for (let i=0; i<items.length; i++) {\n      isntIdxToItemsIdx[i] = i;\n    }\n    // Apply user filter\n    if (this.__filterFn) {\n      isntIdxToItemsIdx = isntIdxToItemsIdx.filter((i, idx, array) =>\n        this.__filterFn(items[i], idx, array));\n    }\n    // Apply user sort\n    if (this.__sortFn) {\n      isntIdxToItemsIdx.sort((a, b) => this.__sortFn(items[a], items[b]));\n    }\n    // items->inst map kept for item path forwarding\n    const itemsIdxToInstIdx = this.__itemsIdxToInstIdx = {};\n    let instIdx = 0;\n    // Generate instances and assign items\n    const limit = Math.min(isntIdxToItemsIdx.length, this.__limit);\n    for (; instIdx<limit; instIdx++) {\n      let inst = this.__instances[instIdx];\n      let itemIdx = isntIdxToItemsIdx[instIdx];\n      let item = items[itemIdx];\n      itemsIdxToInstIdx[itemIdx] = instIdx;\n      if (inst && instIdx < this.__limit) {\n        inst._setPendingProperty(this.as, item);\n        inst._setPendingProperty(this.indexAs, instIdx);\n        inst._setPendingProperty(this.itemsIndexAs, itemIdx);\n        inst._flushProperties();\n      } else {\n        this.__insertInstance(item, instIdx, itemIdx);\n      }\n    }\n    // Remove any extra instances from previous state\n    for (let i=this.__instances.length-1; i>=instIdx; i--) {\n      this.__detachAndRemoveInstance(i);\n    }\n  }\n\n  __detachInstance(idx) {\n    let inst = this.__instances[idx];\n    for (let i=0; i<inst.children.length; i++) {\n      let el = inst.children[i];\n      inst.root.appendChild(el);\n    }\n    return inst;\n  }\n\n  __attachInstance(idx, parent) {\n    let inst = this.__instances[idx];\n    parent.insertBefore(inst.root, this);\n  }\n\n  __detachAndRemoveInstance(idx) {\n    let inst = this.__detachInstance(idx);\n    if (inst) {\n      this.__pool.push(inst);\n    }\n    this.__instances.splice(idx, 1);\n  }\n\n  __stampInstance(item, instIdx, itemIdx) {\n    let model = {};\n    model[this.as] = item;\n    model[this.indexAs] = instIdx;\n    model[this.itemsIndexAs] = itemIdx;\n    return new this.__ctor(model);\n  }\n\n  __insertInstance(item, instIdx, itemIdx) {\n    let inst = this.__pool.pop();\n    if (inst) {\n      // TODO(kschaaf): If the pool is shared across turns, hostProps\n      // need to be re-set to reused instances in addition to item\n      inst._setPendingProperty(this.as, item);\n      inst._setPendingProperty(this.indexAs, instIdx);\n      inst._setPendingProperty(this.itemsIndexAs, itemIdx);\n      inst._flushProperties();\n    } else {\n      inst = this.__stampInstance(item, instIdx, itemIdx);\n    }\n    let beforeRow = this.__instances[instIdx + 1];\n    let beforeNode = beforeRow ? beforeRow.children[0] : this;\n    this.parentNode.insertBefore(inst.root, beforeNode);\n    this.__instances[instIdx] = inst;\n    return inst;\n  }\n\n  // Implements extension point from Templatize mixin\n  _showHideChildren(hidden) {\n    for (let i=0; i<this.__instances.length; i++) {\n      this.__instances[i]._showHideChildren(hidden);\n    }\n  }\n\n  // Called as a side effect of a host items.<key>.<path> path change,\n  // responsible for notifying item.<path> changes to inst for key\n  __handleItemPath(path, value) {\n    let itemsPath = path.slice(6); // 'items.'.length == 6\n    let dot = itemsPath.indexOf('.');\n    let itemsIdx = dot < 0 ? itemsPath : itemsPath.substring(0, dot);\n    // If path was index into array...\n    if (itemsIdx == parseInt(itemsIdx, 10)) {\n      let itemSubPath = dot < 0 ? '' : itemsPath.substring(dot+1);\n      // If the path is observed, it will trigger a full refresh\n      this.__handleObservedPaths(itemSubPath);\n      // Note, even if a rull refresh is triggered, always do the path\n      // notification because unless mutableData is used for dom-repeat\n      // and all elements in the instance subtree, a full refresh may\n      // not trigger the proper update.\n      let instIdx = this.__itemsIdxToInstIdx[itemsIdx];\n      let inst = this.__instances[instIdx];\n      if (inst) {\n        let itemPath = this.as + (itemSubPath ? '.' + itemSubPath : '');\n        // This is effectively `notifyPath`, but avoids some of the overhead\n        // of the public API\n        inst._setPendingPropertyOrPath(itemPath, value, false, true);\n        inst._flushProperties();\n      }\n      return true;\n    }\n  }\n\n  /**\n   * Returns the item associated with a given element stamped by\n   * this `dom-repeat`.\n   *\n   * Note, to modify sub-properties of the item,\n   * `modelForElement(el).set('item.<sub-prop>', value)`\n   * should be used.\n   *\n   * @param {HTMLElement} el Element for which to return the item.\n   * @return {*} Item associated with the element.\n   */\n  itemForElement(el) {\n    let instance = this.modelForElement(el);\n    return instance && instance[this.as];\n  }\n\n  /**\n   * Returns the inst index for a given element stamped by this `dom-repeat`.\n   * If `sort` is provided, the index will reflect the sorted order (rather\n   * than the original array order).\n   *\n   * @param {HTMLElement} el Element for which to return the index.\n   * @return {*} Row index associated with the element (note this may\n   *   not correspond to the array index if a user `sort` is applied).\n   */\n  indexForElement(el) {\n    let instance = this.modelForElement(el);\n    return instance && instance[this.indexAs];\n  }\n\n  /**\n   * Returns the template \"model\" associated with a given element, which\n   * serves as the binding scope for the template instance the element is\n   * contained in. A template model is an instance of `Polymer.Base`, and\n   * should be used to manipulate data associated with this template instance.\n   *\n   * Example:\n   *\n   *   let model = modelForElement(el);\n   *   if (model.index < 10) {\n   *     model.set('item.checked', true);\n   *   }\n   *\n   * @param {HTMLElement} el Element for which to return a template model.\n   * @return {TemplateInstanceBase} Model representing the binding scope for\n   *   the element.\n   */\n  modelForElement(el) {\n    return Templatize.modelForElement(this.template, el);\n  }\n\n}\n\ncustomElements.define(DomRepeat.is, DomRepeat);\n\nexport { DomRepeat };\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@polymer/polymer/lib/elements/dom-repeat.js","import './boot.js';\nimport { PropertyEffects } from '../mixins/property-effects.js';\nimport { MutableData } from '../mixins/mutable-data.js';\n\n// Base class for HTMLTemplateElement extension that has property effects\n// machinery for propagating host properties to children. This is an ES5\n// class only because Babel (incorrectly) requires super() in the class\n// constructor even though no `this` is used and it returns an instance.\nlet newInstance = null;\n/**\n * @constructor\n * @extends {HTMLTemplateElement}\n */\nfunction HTMLTemplateElementExtension() { return newInstance; }\nHTMLTemplateElementExtension.prototype = Object.create(HTMLTemplateElement.prototype, {\n  constructor: {\n    value: HTMLTemplateElementExtension,\n    writable: true\n  }\n});\n/**\n * @constructor\n * @implements {Polymer_PropertyEffects}\n * @extends {HTMLTemplateElementExtension}\n */\nconst DataTemplate = PropertyEffects(HTMLTemplateElementExtension);\n/**\n * @constructor\n * @implements {Polymer_MutableData}\n * @extends {DataTemplate}\n */\nconst MutableDataTemplate = MutableData(DataTemplate);\n\n// Applies a DataTemplate subclass to a <template> instance\nfunction upgradeTemplate(template, constructor) {\n  newInstance = template;\n  Object.setPrototypeOf(template, constructor.prototype);\n  new constructor();\n  newInstance = null;\n}\n\n// Base class for TemplateInstance's\n/**\n * @constructor\n * @implements {Polymer_PropertyEffects}\n */\nconst base = PropertyEffects(class {});\n\n/**\n * @polymer\n * @customElement\n * @appliesMixin Polymer.PropertyEffects\n * @unrestricted\n */\nclass TemplateInstanceBase extends base {\n  constructor(props) {\n    super();\n    this._configureProperties(props);\n    this.root = this._stampTemplate(this.__dataHost);\n    // Save list of stamped children\n    let children = this.children = [];\n    for (let n = this.root.firstChild; n; n=n.nextSibling) {\n      children.push(n);\n      n.__templatizeInstance = this;\n    }\n    if (this.__templatizeOwner.__hideTemplateChildren__) {\n      this._showHideChildren(true);\n    }\n    // Flush props only when props are passed if instance props exist\n    // or when there isn't instance props.\n    let options = this.__templatizeOptions;\n    if ((props && options.instanceProps) || !options.instanceProps) {\n      this._enableProperties();\n    }\n  }\n  /**\n   * Configure the given `props` by calling `_setPendingProperty`. Also\n   * sets any properties stored in `__hostProps`.\n   * @private\n   * @param {Object} props Object of property name-value pairs to set.\n   */\n  _configureProperties(props) {\n    let options = this.__templatizeOptions;\n    if (props) {\n      for (let iprop in options.instanceProps) {\n        if (iprop in props) {\n          this._setPendingProperty(iprop, props[iprop]);\n        }\n      }\n    }\n    for (let hprop in this.__hostProps) {\n      this._setPendingProperty(hprop, this.__dataHost['_host_' + hprop]);\n    }\n  }\n  /**\n   * Forwards a host property to this instance.  This method should be\n   * called on instances from the `options.forwardHostProp` callback\n   * to propagate changes of host properties to each instance.\n   *\n   * Note this method enqueues the change, which are flushed as a batch.\n   *\n   * @param {string} prop Property or path name\n   * @param {*} value Value of the property to forward\n   */\n  forwardHostProp(prop, value) {\n    if (this._setPendingPropertyOrPath(prop, value, false, true)) {\n      this.__dataHost._enqueueClient(this);\n    }\n  }\n  /**\n   * @override\n   */\n  _addEventListenerToNode(node, eventName, handler) {\n    if (this._methodHost && this.__templatizeOptions.parentModel) {\n      // If this instance should be considered a parent model, decorate\n      // events this template instance as `model`\n      this._methodHost._addEventListenerToNode(node, eventName, (e) => {\n        e.model = this;\n        handler(e);\n      });\n    } else {\n      // Otherwise delegate to the template's host (which could be)\n      // another template instance\n      let templateHost = this.__dataHost.__dataHost;\n      if (templateHost) {\n        templateHost._addEventListenerToNode(node, eventName, handler);\n      }\n    }\n  }\n  /**\n   * Shows or hides the template instance top level child elements. For\n   * text nodes, `textContent` is removed while \"hidden\" and replaced when\n   * \"shown.\"\n   * @param {boolean} hide Set to true to hide the children;\n   * set to false to show them.\n   * @protected\n   */\n  _showHideChildren(hide) {\n    let c = this.children;\n    for (let i=0; i<c.length; i++) {\n      let n = c[i];\n      // Ignore non-changes\n      if (Boolean(hide) != Boolean(n.__hideTemplateChildren__)) {\n        if (n.nodeType === Node.TEXT_NODE) {\n          if (hide) {\n            n.__polymerTextContent__ = n.textContent;\n            n.textContent = '';\n          } else {\n            n.textContent = n.__polymerTextContent__;\n          }\n        } else if (n.style) {\n          if (hide) {\n            n.__polymerDisplay__ = n.style.display;\n            n.style.display = 'none';\n          } else {\n            n.style.display = n.__polymerDisplay__;\n          }\n        }\n      }\n      n.__hideTemplateChildren__ = hide;\n      if (n._showHideChildren) {\n        n._showHideChildren(hide);\n      }\n    }\n  }\n  /**\n   * Overrides default property-effects implementation to intercept\n   * textContent bindings while children are \"hidden\" and cache in\n   * private storage for later retrieval.\n   *\n   * @override\n   */\n  _setUnmanagedPropertyToNode(node, prop, value) {\n    if (node.__hideTemplateChildren__ &&\n        node.nodeType == Node.TEXT_NODE && prop == 'textContent') {\n      node.__polymerTextContent__ = value;\n    } else {\n      super._setUnmanagedPropertyToNode(node, prop, value);\n    }\n  }\n  /**\n   * Find the parent model of this template instance.  The parent model\n   * is either another templatize instance that had option `parentModel: true`,\n   * or else the host element.\n   *\n   * @return {Polymer_PropertyEffects} The parent model of this instance\n   */\n  get parentModel() {\n    let model = this.__parentModel;\n    if (!model) {\n      let options;\n      model = this;\n      do {\n        // A template instance's `__dataHost` is a <template>\n        // `model.__dataHost.__dataHost` is the template's host\n        model = model.__dataHost.__dataHost;\n      } while ((options = model.__templatizeOptions) && !options.parentModel);\n      this.__parentModel = model;\n    }\n    return model;\n  }\n}\n\n/** @type {!DataTemplate} */\nTemplateInstanceBase.prototype.__dataHost;\n/** @type {!TemplatizeOptions} */\nTemplateInstanceBase.prototype.__templatizeOptions;\n/** @type {!Polymer_PropertyEffects} */\nTemplateInstanceBase.prototype._methodHost;\n/** @type {!Object} */\nTemplateInstanceBase.prototype.__templatizeOwner;\n/** @type {!Object} */\nTemplateInstanceBase.prototype.__hostProps;\n\n/**\n * @constructor\n * @extends {TemplateInstanceBase}\n * @implements {Polymer_MutableData}\n */\nconst MutableTemplateInstanceBase = MutableData(TemplateInstanceBase);\n\nfunction findMethodHost(template) {\n  // Technically this should be the owner of the outermost template.\n  // In shadow dom, this is always getRootNode().host, but we can\n  // approximate this via cooperation with our dataHost always setting\n  // `_methodHost` as long as there were bindings (or id's) on this\n  // instance causing it to get a dataHost.\n  let templateHost = template.__dataHost;\n  return templateHost && templateHost._methodHost || templateHost;\n}\n\n/* eslint-disable valid-jsdoc */\n/**\n * @suppress {missingProperties} class.prototype is not defined for some reason\n */\nfunction createTemplatizerClass(template, templateInfo, options) {\n  // Anonymous class created by the templatize\n  let base = options.mutableData ?\n    MutableTemplateInstanceBase : TemplateInstanceBase;\n  /**\n   * @constructor\n   * @extends {base}\n   */\n  let klass = class extends base { };\n  klass.prototype.__templatizeOptions = options;\n  klass.prototype._bindTemplate(template);\n  addNotifyEffects(klass, template, templateInfo, options);\n  return klass;\n}\n\n/**\n * @suppress {missingProperties} class.prototype is not defined for some reason\n */\nfunction addPropagateEffects(template, templateInfo, options) {\n  let userForwardHostProp = options.forwardHostProp;\n  if (userForwardHostProp) {\n    // Provide data API and property effects on memoized template class\n    let klass = templateInfo.templatizeTemplateClass;\n    if (!klass) {\n      let base = options.mutableData ? MutableDataTemplate : DataTemplate;\n      klass = templateInfo.templatizeTemplateClass =\n        class TemplatizedTemplate extends base {};\n      // Add template - >instances effects\n      // and host <- template effects\n      let hostProps = templateInfo.hostProps;\n      for (let prop in hostProps) {\n        klass.prototype._addPropertyEffect('_host_' + prop,\n          klass.prototype.PROPERTY_EFFECT_TYPES.PROPAGATE,\n          {fn: createForwardHostPropEffect(prop, userForwardHostProp)});\n        klass.prototype._createNotifyingProperty('_host_' + prop);\n      }\n    }\n    upgradeTemplate(template, klass);\n    // Mix any pre-bound data into __data; no need to flush this to\n    // instances since they pull from the template at instance-time\n    if (template.__dataProto) {\n      // Note, generally `__dataProto` could be chained, but it's guaranteed\n      // to not be since this is a vanilla template we just added effects to\n      Object.assign(template.__data, template.__dataProto);\n    }\n    // Clear any pending data for performance\n    template.__dataTemp = {};\n    template.__dataPending = null;\n    template.__dataOld = null;\n    template._enableProperties();\n  }\n}\n/* eslint-enable valid-jsdoc */\n\nfunction createForwardHostPropEffect(hostProp, userForwardHostProp) {\n  return function forwardHostProp(template, prop, props) {\n    userForwardHostProp.call(template.__templatizeOwner,\n      prop.substring('_host_'.length), props[prop]);\n  };\n}\n\nfunction addNotifyEffects(klass, template, templateInfo, options) {\n  let hostProps = templateInfo.hostProps || {};\n  for (let iprop in options.instanceProps) {\n    delete hostProps[iprop];\n    let userNotifyInstanceProp = options.notifyInstanceProp;\n    if (userNotifyInstanceProp) {\n      klass.prototype._addPropertyEffect(iprop,\n        klass.prototype.PROPERTY_EFFECT_TYPES.NOTIFY,\n        {fn: createNotifyInstancePropEffect(iprop, userNotifyInstanceProp)});\n    }\n  }\n  if (options.forwardHostProp && template.__dataHost) {\n    for (let hprop in hostProps) {\n      klass.prototype._addPropertyEffect(hprop,\n        klass.prototype.PROPERTY_EFFECT_TYPES.NOTIFY,\n        {fn: createNotifyHostPropEffect()});\n    }\n  }\n}\n\nfunction createNotifyInstancePropEffect(instProp, userNotifyInstanceProp) {\n  return function notifyInstanceProp(inst, prop, props) {\n    userNotifyInstanceProp.call(inst.__templatizeOwner,\n      inst, prop, props[prop]);\n  };\n}\n\nfunction createNotifyHostPropEffect() {\n  return function notifyHostProp(inst, prop, props) {\n    inst.__dataHost._setPendingPropertyOrPath('_host_' + prop, props[prop], true, true);\n  };\n}\n\n/**\n * Module for preparing and stamping instances of templates that utilize\n * Polymer's data-binding and declarative event listener features.\n *\n * Example:\n *\n *     // Get a template from somewhere, e.g. light DOM\n *     let template = this.querySelector('template');\n *     // Prepare the template\n *     let TemplateClass = Polymer.Templatize.templatize(template);\n *     // Instance the template with an initial data model\n *     let instance = new TemplateClass({myProp: 'initial'});\n *     // Insert the instance's DOM somewhere, e.g. element's shadow DOM\n *     this.shadowRoot.appendChild(instance.root);\n *     // Changing a property on the instance will propagate to bindings\n *     // in the template\n *     instance.myProp = 'new value';\n *\n * The `options` dictionary passed to `templatize` allows for customizing\n * features of the generated template class, including how outer-scope host\n * properties should be forwarded into template instances, how any instance\n * properties added into the template's scope should be notified out to\n * the host, and whether the instance should be decorated as a \"parent model\"\n * of any event handlers.\n *\n *     // Customze property forwarding and event model decoration\n *     let TemplateClass = Polymer.Templatize.templatize(template, this, {\n *       parentModel: true,\n *       instanceProps: {...},\n *       forwardHostProp(property, value) {...},\n *       notifyInstanceProp(instance, property, value) {...},\n *     });\n *\n *\n * @namespace\n * @memberof Polymer\n * @summary Module for preparing and stamping instances of templates\n *   utilizing Polymer templating features.\n */\n\nconst Templatize = {\n\n  /**\n   * Returns an anonymous `Polymer.PropertyEffects` class bound to the\n   * `<template>` provided.  Instancing the class will result in the\n   * template being stamped into document fragment stored as the instance's\n   * `root` property, after which it can be appended to the DOM.\n   *\n   * Templates may utilize all Polymer data-binding features as well as\n   * declarative event listeners.  Event listeners and inline computing\n   * functions in the template will be called on the host of the template.\n   *\n   * The constructor returned takes a single argument dictionary of initial\n   * property values to propagate into template bindings.  Additionally\n   * host properties can be forwarded in, and instance properties can be\n   * notified out by providing optional callbacks in the `options` dictionary.\n   *\n   * Valid configuration in `options` are as follows:\n   *\n   * - `forwardHostProp(property, value)`: Called when a property referenced\n   *   in the template changed on the template's host. As this library does\n   *   not retain references to templates instanced by the user, it is the\n   *   templatize owner's responsibility to forward host property changes into\n   *   user-stamped instances.  The `instance.forwardHostProp(property, value)`\n   *    method on the generated class should be called to forward host\n   *   properties into the template to prevent unnecessary property-changed\n   *   notifications. Any properties referenced in the template that are not\n   *   defined in `instanceProps` will be notified up to the template's host\n   *   automatically.\n   * - `instanceProps`: Dictionary of property names that will be added\n   *   to the instance by the templatize owner.  These properties shadow any\n   *   host properties, and changes within the template to these properties\n   *   will result in `notifyInstanceProp` being called.\n   * - `mutableData`: When `true`, the generated class will skip strict\n   *   dirty-checking for objects and arrays (always consider them to be\n   *   \"dirty\").\n   * - `notifyInstanceProp(instance, property, value)`: Called when\n   *   an instance property changes.  Users may choose to call `notifyPath`\n   *   on e.g. the owner to notify the change.\n   * - `parentModel`: When `true`, events handled by declarative event listeners\n   *   (`on-event=\"handler\"`) will be decorated with a `model` property pointing\n   *   to the template instance that stamped it.  It will also be returned\n   *   from `instance.parentModel` in cases where template instance nesting\n   *   causes an inner model to shadow an outer model.\n   *\n   * Note that the class returned from `templatize` is generated only once\n   * for a given `<template>` using `options` from the first call for that\n   * template, and the cached class is returned for all subsequent calls to\n   * `templatize` for that template.  As such, `options` callbacks should not\n   * close over owner-specific properties since only the first `options` is\n   * used; rather, callbacks are called bound to the `owner`, and so context\n   * needed from the callbacks (such as references to `instances` stamped)\n   * should be stored on the `owner` such that they can be retrieved via `this`.\n   *\n   * @memberof Polymer.Templatize\n   * @param {!HTMLTemplateElement} template Template to templatize\n   * @param {!Polymer_PropertyEffects} owner Owner of the template instances;\n   *   any optional callbacks will be bound to this owner.\n   * @param {Object=} options Options dictionary (see summary for details)\n   * @return {function(new:TemplateInstanceBase)} Generated class bound to the template\n   *   provided\n   * @suppress {invalidCasts}\n   */\n  templatize(template, owner, options) {\n    options = /** @type {!TemplatizeOptions} */(options || {});\n    if (template.__templatizeOwner) {\n      throw new Error('A <template> can only be templatized once');\n    }\n    template.__templatizeOwner = owner;\n    let templateInfo = owner.constructor._parseTemplate(template);\n    // Get memoized base class for the prototypical template, which\n    // includes property effects for binding template & forwarding\n    let baseClass = templateInfo.templatizeInstanceClass;\n    if (!baseClass) {\n      baseClass = createTemplatizerClass(template, templateInfo, options);\n      templateInfo.templatizeInstanceClass = baseClass;\n    }\n    // Host property forwarding must be installed onto template instance\n    addPropagateEffects(template, templateInfo, options);\n    // Subclass base class and add reference for this specific template\n    let klass = class TemplateInstance extends baseClass {};\n    klass.prototype._methodHost = findMethodHost(template);\n    klass.prototype.__dataHost = template;\n    klass.prototype.__templatizeOwner = owner;\n    klass.prototype.__hostProps = templateInfo.hostProps;\n    return /** @type {function(new:TemplateInstanceBase)} */(klass);\n  },\n\n  /**\n   * Returns the template \"model\" associated with a given element, which\n   * serves as the binding scope for the template instance the element is\n   * contained in. A template model is an instance of\n   * `TemplateInstanceBase`, and should be used to manipulate data\n   * associated with this template instance.\n   *\n   * Example:\n   *\n   *   let model = modelForElement(el);\n   *   if (model.index < 10) {\n   *     model.set('item.checked', true);\n   *   }\n   *\n   * @memberof Polymer.Templatize\n   * @param {HTMLTemplateElement} template The model will be returned for\n   *   elements stamped from this template\n   * @param {Node} node Node for which to return a template model.\n   * @return {TemplateInstanceBase} Template instance representing the\n   *   binding scope for the element\n   */\n  modelForElement(template, node) {\n    let model;\n    while (node) {\n      // An element with a __templatizeInstance marks the top boundary\n      // of a scope; walk up until we find one, and then ensure that\n      // its __dataHost matches `this`, meaning this dom-repeat stamped it\n      if ((model = node.__templatizeInstance)) {\n        // Found an element stamped by another template; keep walking up\n        // from its __dataHost\n        if (model.__dataHost != template) {\n          node = model.__dataHost;\n        } else {\n          return model;\n        }\n      } else {\n        // Still in a template scope, keep going up until\n        // a __templatizeInstance is found\n        node = node.parentNode;\n      }\n    }\n    return null;\n  }\n};\n\nexport { Templatize };\nexport { TemplateInstanceBase };\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@polymer/polymer/lib/utils/templatize.js","import { dedupingMixin } from '../utils/mixin.js';\n\n// Common implementation for mixin & behavior\nfunction mutablePropertyChange(inst, property, value, old, mutableData) {\n  let isObject;\n  if (mutableData) {\n    isObject = (typeof value === 'object' && value !== null);\n    // Pull `old` for Objects from temp cache, but treat `null` as a primitive\n    if (isObject) {\n      old = inst.__dataTemp[property];\n    }\n  }\n  // Strict equality check, but return false for NaN===NaN\n  let shouldChange = (old !== value && (old === old || value === value));\n  // Objects are stored in temporary cache (cleared at end of\n  // turn), which is used for dirty-checking\n  if (isObject && shouldChange) {\n    inst.__dataTemp[property] = value;\n  }\n  return shouldChange;\n}\n\nexport const MutableData = dedupingMixin(superClass => {\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_MutableData}\n   */\n  class MutableData extends superClass {\n    /**\n     * Overrides `Polymer.PropertyEffects` to provide option for skipping\n     * strict equality checking for Objects and Arrays.\n     *\n     * This method pulls the value to dirty check against from the `__dataTemp`\n     * cache (rather than the normal `__data` cache) for Objects.  Since the temp\n     * cache is cleared at the end of a turn, this implementation allows\n     * side-effects of deep object changes to be processed by re-setting the\n     * same object (using the temp cache as an in-turn backstop to prevent\n     * cycles due to 2-way notification).\n     *\n     * @param {string} property Property name\n     * @param {*} value New property value\n     * @param {*} old Previous property value\n     * @return {boolean} Whether the property should be considered a change\n     * @protected\n     */\n    _shouldPropertyChange(property, value, old) {\n      return mutablePropertyChange(this, property, value, old, true);\n    }\n\n  }\n  /** @type {boolean} */\n  MutableData.prototype.mutableData = false;\n\n  return MutableData;\n\n});\n\nexport const OptionalMutableData = dedupingMixin(superClass => {\n\n  /**\n   * @mixinClass\n   * @polymer\n   * @implements {Polymer_OptionalMutableData}\n   */\n  class OptionalMutableData extends superClass {\n\n    static get properties() {\n      return {\n        /**\n         * Instance-level flag for configuring the dirty-checking strategy\n         * for this element.  When true, Objects and Arrays will skip dirty\n         * checking, otherwise strict equality checking will be used.\n         */\n        mutableData: Boolean\n      };\n    }\n\n    /**\n     * Overrides `Polymer.PropertyEffects` to provide option for skipping\n     * strict equality checking for Objects and Arrays.\n     *\n     * When `this.mutableData` is true on this instance, this method\n     * pulls the value to dirty check against from the `__dataTemp` cache\n     * (rather than the normal `__data` cache) for Objects.  Since the temp\n     * cache is cleared at the end of a turn, this implementation allows\n     * side-effects of deep object changes to be processed by re-setting the\n     * same object (using the temp cache as an in-turn backstop to prevent\n     * cycles due to 2-way notification).\n     *\n     * @param {string} property Property name\n     * @param {*} value New property value\n     * @param {*} old Previous property value\n     * @return {boolean} Whether the property should be considered a change\n     * @protected\n     */\n    _shouldPropertyChange(property, value, old) {\n      return mutablePropertyChange(this, property, value, old, this.mutableData);\n    }\n  }\n\n  return OptionalMutableData;\n\n});\n\n// Export for use by legacy behavior\nMutableData._mutablePropertyChange = mutablePropertyChange;\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@polymer/polymer/lib/mixins/mutable-data.js","import './boot.js';\n\nlet debouncerQueue = [];\n\nexport const enqueueDebouncer = function(debouncer) {\n  debouncerQueue.push(debouncer);\n};\n\nfunction flushDebouncers() {\n  const didFlush = Boolean(debouncerQueue.length);\n  while (debouncerQueue.length) {\n    try {\n      debouncerQueue.shift().flush();\n    } catch(e) {\n      setTimeout(() => {\n        throw e;\n      });\n    }\n  }\n  return didFlush;\n}\n\nexport const flush = function() {\n  let shadyDOM, debouncers;\n  do {\n    shadyDOM = window.ShadyDOM && ShadyDOM.flush();\n    if (window.ShadyCSS && window.ShadyCSS.ScopingShim) {\n      window.ShadyCSS.ScopingShim.flush();\n    }\n    debouncers = flushDebouncers();\n  } while (shadyDOM || debouncers);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@polymer/polymer/lib/utils/flush.js"],"sourceRoot":""}