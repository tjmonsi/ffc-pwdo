{"version":3,"sources":["webpack:///./app/node_modules/@polymer/polymer/lib/mixins/mutable-data.js","webpack:///./app/dependencies/side-bar/index.js","webpack:///./app/dependencies/side-bar/style.scss?f04f","webpack:///./app/dependencies/side-bar/style.scss","webpack:///./app/dependencies/side-bar/template.html","webpack:///./app/dependencies/nav-list/index.js","webpack:///./app/dependencies/nav-list/style.scss?6f47","webpack:///./app/dependencies/nav-list/style.scss","webpack:///./app/dependencies/nav-list/template.html","webpack:///./app/node_modules/@polymer/polymer/lib/elements/dom-repeat.js","webpack:///./app/node_modules/@polymer/polymer/lib/utils/templatize.js","webpack:///./app/node_modules/@polymer/polymer/lib/utils/flush.js","webpack:///./app/dependencies/ffc-logo/index.js","webpack:///./app/dependencies/ffc-logo/style.scss?70f4","webpack:///./app/dependencies/ffc-logo/style.scss","webpack:///./app/dependencies/ffc-logo/template.html","webpack:///./app/pages/page-home/index.js","webpack:///./app/pages/page-home/style.scss?7de8","webpack:///./app/pages/page-home/style.scss","webpack:///./app/pages/page-home/template.html"],"names":["mutablePropertyChange","inst","property","value","old","mutableData","isObject","__dataTemp","shouldChange","MutableData","superClass","prototype","OptionalMutableData","Boolean","_mutablePropertyChange","Component","get","is","define","console","warn","nav","type","Array","href","label","TemplateInstanceBase","domRepeatBase","DomRepeat","items","as","String","indexAs","itemsIndexAs","sort","Function","observer","filter","observe","delay","Number","renderedItemCount","notify","readOnly","initialCount","targetFramerate","_targetFrameTime","computed","__instances","__limit","Infinity","__pool","__renderDebouncer","__itemsIdxToInstIdx","__chunkCount","__lastChunkTime","__sortFn","__filterFn","__observePaths","__ctor","__isDetached","template","i","length","__detachInstance","parent","parentNode","__attachInstance","querySelector","MutationObserver","disconnect","__render","Error","childList","instanceProps","templatize","parentModel","forwardHostProp","prop","i$","notifyInstanceProp","idx","path","notifyPath","__dataHost","_methodHost","methodHost","__getMethodHost","apply","arguments","__debounceRender","rate","Math","ceil","performance","now","__requestRenderChunk","requestAnimationFrame","__renderChunk","currChunkTime","ratio","round","replace","split","change","isArray","__handleItemPath","__initializeChunking","substring","indexOf","paths","fn","debounce","after","bind","__ensureTemplatized","__applyFullRefresh","_setRenderedItemCount","dispatchEvent","CustomEvent","bubbles","composed","__tryRenderChunk","isntIdxToItemsIdx","array","a","b","itemsIdxToInstIdx","instIdx","limit","min","itemIdx","item","_setPendingProperty","_flushProperties","__insertInstance","__detachAndRemoveInstance","children","el","root","appendChild","insertBefore","push","splice","model","pop","__stampInstance","beforeRow","beforeNode","hidden","_showHideChildren","itemsPath","slice","dot","itemsIdx","parseInt","itemSubPath","__handleObservedPaths","itemPath","_setPendingPropertyOrPath","instance","modelForElement","customElements","newInstance","HTMLTemplateElementExtension","Object","create","HTMLTemplateElement","constructor","writable","DataTemplate","MutableDataTemplate","upgradeTemplate","setPrototypeOf","base","props","_configureProperties","_stampTemplate","n","firstChild","nextSibling","__templatizeInstance","__templatizeOwner","__hideTemplateChildren__","options","__templatizeOptions","_enableProperties","iprop","hprop","__hostProps","_enqueueClient","node","eventName","handler","_addEventListenerToNode","e","templateHost","hide","c","nodeType","Node","TEXT_NODE","__polymerTextContent__","textContent","style","__polymerDisplay__","display","__parentModel","MutableTemplateInstanceBase","findMethodHost","createTemplatizerClass","templateInfo","klass","_bindTemplate","addNotifyEffects","addPropagateEffects","userForwardHostProp","templatizeTemplateClass","hostProps","_addPropertyEffect","PROPERTY_EFFECT_TYPES","PROPAGATE","createForwardHostPropEffect","_createNotifyingProperty","__dataProto","assign","__data","__dataPending","__dataOld","hostProp","call","userNotifyInstanceProp","NOTIFY","createNotifyInstancePropEffect","createNotifyHostPropEffect","instProp","notifyHostProp","Templatize","owner","_parseTemplate","baseClass","templatizeInstanceClass","debouncerQueue","enqueueDebouncer","debouncer","flushDebouncers","didFlush","shift","flush","setTimeout","shadyDOM","debouncers","window","ShadyDOM","ShadyCSS","ScopingShim"],"mappings":"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","file":"page-home.fragment.0.js","sourcesContent":["import { dedupingMixin } from '../utils/mixin.js';\n\n// Common implementation for mixin & behavior\nfunction mutablePropertyChange(inst, property, value, old, mutableData) {\n  let isObject;\n  if (mutableData) {\n    isObject = (typeof value === 'object' && value !== null);\n    // Pull `old` for Objects from temp cache, but treat `null` as a primitive\n    if (isObject) {\n      old = inst.__dataTemp[property];\n    }\n  }\n  // Strict equality check, but return false for NaN===NaN\n  let shouldChange = (old !== value && (old === old || value === value));\n  // Objects are stored in temporary cache (cleared at end of\n  // turn), which is used for dirty-checking\n  if (isObject && shouldChange) {\n    inst.__dataTemp[property] = value;\n  }\n  return shouldChange;\n}\n\nexport const MutableData = dedupingMixin(superClass => {\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_MutableData}\n   */\n  class MutableData extends superClass {\n    /**\n     * Overrides `Polymer.PropertyEffects` to provide option for skipping\n     * strict equality checking for Objects and Arrays.\n     *\n     * This method pulls the value to dirty check against from the `__dataTemp`\n     * cache (rather than the normal `__data` cache) for Objects.  Since the temp\n     * cache is cleared at the end of a turn, this implementation allows\n     * side-effects of deep object changes to be processed by re-setting the\n     * same object (using the temp cache as an in-turn backstop to prevent\n     * cycles due to 2-way notification).\n     *\n     * @param {string} property Property name\n     * @param {*} value New property value\n     * @param {*} old Previous property value\n     * @return {boolean} Whether the property should be considered a change\n     * @protected\n     */\n    _shouldPropertyChange(property, value, old) {\n      return mutablePropertyChange(this, property, value, old, true);\n    }\n\n  }\n  /** @type {boolean} */\n  MutableData.prototype.mutableData = false;\n\n  return MutableData;\n\n});\n\nexport const OptionalMutableData = dedupingMixin(superClass => {\n\n  /**\n   * @mixinClass\n   * @polymer\n   * @implements {Polymer_OptionalMutableData}\n   */\n  class OptionalMutableData extends superClass {\n\n    static get properties() {\n      return {\n        /**\n         * Instance-level flag for configuring the dirty-checking strategy\n         * for this element.  When true, Objects and Arrays will skip dirty\n         * checking, otherwise strict equality checking will be used.\n         */\n        mutableData: Boolean\n      };\n    }\n\n    /**\n     * Overrides `Polymer.PropertyEffects` to provide option for skipping\n     * strict equality checking for Objects and Arrays.\n     *\n     * When `this.mutableData` is true on this instance, this method\n     * pulls the value to dirty check against from the `__dataTemp` cache\n     * (rather than the normal `__data` cache) for Objects.  Since the temp\n     * cache is cleared at the end of a turn, this implementation allows\n     * side-effects of deep object changes to be processed by re-setting the\n     * same object (using the temp cache as an in-turn backstop to prevent\n     * cycles due to 2-way notification).\n     *\n     * @param {string} property Property name\n     * @param {*} value New property value\n     * @param {*} old Previous property value\n     * @return {boolean} Whether the property should be considered a change\n     * @protected\n     */\n    _shouldPropertyChange(property, value, old) {\n      return mutablePropertyChange(this, property, value, old, this.mutableData);\n    }\n  }\n\n  return OptionalMutableData;\n\n});\n\n// Export for use by legacy behavior\nMutableData._mutablePropertyChange = mutablePropertyChange;\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@polymer/polymer/lib/mixins/mutable-data.js","import { Element } from '@polymer/polymer/polymer-element';\nimport { GestureEventListeners } from '@polymer/polymer/lib/mixins/gesture-event-listeners';\nimport { customElements } from 'global/window';\nimport css from './style.scss';\nimport template from './template.html';\nimport 'nav-list';\n\nclass Component extends GestureEventListeners(Element) {\n  static get is () { return 'side-bar'; }\n\n  static get template () {\n    return `\n      <style>\n        ${css}\n      </style>\n      ${template}\n    `;\n  }\n}\n\n!customElements.get(Component.is)\n  ? customElements.define(Component.is, Component)\n  : console.warn(`${Component.is} is already defined`);\n\n\n\n// WEBPACK FOOTER //\n// ./app/dependencies/side-bar/index.js","\n        var result = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./style.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/dependencies/side-bar/style.scss\n// module id = 103\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \":host {\\n  display: flex;\\n  align-items: center;\\n  min-height: 100vh; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./app/dependencies/side-bar/style.scss\n// module id = 104\n// module chunks = 0","module.exports = \"<nav-list></nav-list>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/dependencies/side-bar/template.html\n// module id = 105\n// module chunks = 0","import { Element } from '@polymer/polymer/polymer-element';\nimport { GestureEventListeners } from '@polymer/polymer/lib/mixins/gesture-event-listeners';\nimport { customElements } from 'global/window';\nimport css from './style.scss';\nimport template from './template.html';\nimport '@polymer/polymer/lib/elements/dom-repeat';\n\nclass Component extends GestureEventListeners(Element) {\n  static get is () { return 'nav-list'; }\n\n  static get properties () {\n    return {\n      nav: {\n        type: Array,\n        value: [\n          {\n            href: '/',\n            label: 'Home'\n          },\n          {\n            href: '/speakers',\n            label: 'Speakers'\n          },\n          {\n            href: '/schedule',\n            label: 'Schedule'\n          },\n          {\n            href: '/tickets',\n            label: 'Tickets'\n          },\n          {\n            href: '/sponsors',\n            label: 'Sponsors'\n          },\n          {\n            href: '/about',\n            label: 'About'\n          },\n          {\n            href: '/faq',\n            label: 'FAQ'\n          },\n          {\n            href: '/scrapbook',\n            label: 'Scrapbook'\n          }\n        ]\n      }\n    };\n  }\n\n  static get template () {\n    return `\n      <style>\n        ${css}\n      </style>\n      ${template}\n    `;\n  }\n}\n\n!customElements.get(Component.is)\n  ? customElements.define(Component.is, Component)\n  : console.warn(`${Component.is} is already defined`);\n\n\n\n// WEBPACK FOOTER //\n// ./app/dependencies/nav-list/index.js","\n        var result = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./style.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/dependencies/nav-list/style.scss\n// module id = 107\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./app/dependencies/nav-list/style.scss\n// module id = 108\n// module chunks = 0","module.exports = \"<nav class=\\\"nav\\\">\\n  <ul class=\\\"nav-list\\\">\\n    <template is=\\\"dom-repeat\\\" items=\\\"[[nav]]\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-anchor\\\" href=\\\"[[item.href]]\\\">\\n          [[item.label]]\\n        </a>\\n      </li>\\n    </template>\\n  </ul>\\n</nav>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/dependencies/nav-list/template.html\n// module id = 109\n// module chunks = 0","import { Element } from '../../polymer-element.js';\nimport { TemplateInstanceBase as TemplateInstanceBase$0, Templatize } from '../utils/templatize.js';\nimport { Debouncer } from '../utils/debounce.js';\nimport { enqueueDebouncer, flush } from '../utils/flush.js';\nimport { OptionalMutableData } from '../mixins/mutable-data.js';\nimport { matches, translate } from '../utils/path.js';\nimport { timeOut, microTask } from '../utils/async.js';\n\nlet TemplateInstanceBase = TemplateInstanceBase$0; // eslint-disable-line\n\n/**\n * @constructor\n * @implements {Polymer_OptionalMutableData}\n * @extends {Polymer.Element}\n */\nconst domRepeatBase = OptionalMutableData(Element);\n\n/**\n * The `<dom-repeat>` element will automatically stamp and binds one instance\n * of template content to each object in a user-provided array.\n * `dom-repeat` accepts an `items` property, and one instance of the template\n * is stamped for each item into the DOM at the location of the `dom-repeat`\n * element.  The `item` property will be set on each instance's binding\n * scope, thus templates should bind to sub-properties of `item`.\n *\n * Example:\n *\n * ```html\n * <dom-module id=\"employee-list\">\n *\n *   <template>\n *\n *     <div> Employee list: </div>\n *     <template is=\"dom-repeat\" items=\"{{employees}}\">\n *         <div>First name: <span>{{item.first}}</span></div>\n *         <div>Last name: <span>{{item.last}}</span></div>\n *     </template>\n *\n *   </template>\n *\n *   <script>\n *     Polymer({\n *       is: 'employee-list',\n *       ready: function() {\n *         this.employees = [\n *             {first: 'Bob', last: 'Smith'},\n *             {first: 'Sally', last: 'Johnson'},\n *             ...\n *         ];\n *       }\n *     });\n *   < /script>\n *\n * </dom-module>\n * ```\n *\n * Notifications for changes to items sub-properties will be forwarded to template\n * instances, which will update via the normal structured data notification system.\n *\n * Mutations to the `items` array itself should be made using the Array\n * mutation API's on `Polymer.Base` (`push`, `pop`, `splice`, `shift`,\n * `unshift`), and template instances will be kept in sync with the data in the\n * array.\n *\n * Events caught by event handlers within the `dom-repeat` template will be\n * decorated with a `model` property, which represents the binding scope for\n * each template instance.  The model is an instance of Polymer.Base, and should\n * be used to manipulate data on the instance, for example\n * `event.model.set('item.checked', true);`.\n *\n * Alternatively, the model for a template instance for an element stamped by\n * a `dom-repeat` can be obtained using the `modelForElement` API on the\n * `dom-repeat` that stamped it, for example\n * `this.$.domRepeat.modelForElement(event.target).set('item.checked', true);`.\n * This may be useful for manipulating instance data of event targets obtained\n * by event handlers on parents of the `dom-repeat` (event delegation).\n *\n * A view-specific filter/sort may be applied to each `dom-repeat` by supplying a\n * `filter` and/or `sort` property.  This may be a string that names a function on\n * the host, or a function may be assigned to the property directly.  The functions\n * should implemented following the standard `Array` filter/sort API.\n *\n * In order to re-run the filter or sort functions based on changes to sub-fields\n * of `items`, the `observe` property may be set as a space-separated list of\n * `item` sub-fields that should cause a re-filter/sort when modified.  If\n * the filter or sort function depends on properties not contained in `items`,\n * the user should observe changes to those properties and call `render` to update\n * the view based on the dependency change.\n *\n * For example, for an `dom-repeat` with a filter of the following:\n *\n * ```js\n * isEngineer: function(item) {\n *     return item.type == 'engineer' || item.manager.type == 'engineer';\n * }\n * ```\n *\n * Then the `observe` property should be configured as follows:\n *\n * ```html\n * <template is=\"dom-repeat\" items=\"{{employees}}\"\n *           filter=\"isEngineer\" observe=\"type manager.type\">\n * ```\n *\n * @customElement\n * @polymer\n * @memberof Polymer\n * @extends {domRepeatBase}\n * @appliesMixin Polymer.OptionalMutableData\n * @summary Custom element for stamping instance of a template bound to\n *   items in an array.\n */\nclass DomRepeat extends domRepeatBase {\n\n  // Not needed to find template; can be removed once the analyzer\n  // can find the tag name from customElements.define call\n  static get is() { return 'dom-repeat'; }\n\n  static get template() { return null; }\n\n  static get properties() {\n\n    /**\n     * Fired whenever DOM is added or removed by this template (by\n     * default, rendering occurs lazily).  To force immediate rendering, call\n     * `render`.\n     *\n     * @event dom-change\n     */\n    return {\n\n      /**\n       * An array containing items determining how many instances of the template\n       * to stamp and that that each template instance should bind to.\n       */\n      items: {\n        type: Array\n      },\n\n      /**\n       * The name of the variable to add to the binding scope for the array\n       * element associated with a given template instance.\n       */\n      as: {\n        type: String,\n        value: 'item'\n      },\n\n      /**\n       * The name of the variable to add to the binding scope with the index\n       * of the instance in the sorted and filtered list of rendered items.\n       * Note, for the index in the `this.items` array, use the value of the\n       * `itemsIndexAs` property.\n       */\n      indexAs: {\n        type: String,\n        value: 'index'\n      },\n\n      /**\n       * The name of the variable to add to the binding scope with the index\n       * of the instance in the `this.items` array. Note, for the index of\n       * this instance in the sorted and filtered list of rendered items,\n       * use the value of the `indexAs` property.\n       */\n      itemsIndexAs: {\n        type: String,\n        value: 'itemsIndex'\n      },\n\n      /**\n       * A function that should determine the sort order of the items.  This\n       * property should either be provided as a string, indicating a method\n       * name on the element's host, or else be an actual function.  The\n       * function should match the sort function passed to `Array.sort`.\n       * Using a sort function has no effect on the underlying `items` array.\n       */\n      sort: {\n        type: Function,\n        observer: '__sortChanged'\n      },\n\n      /**\n       * A function that can be used to filter items out of the view.  This\n       * property should either be provided as a string, indicating a method\n       * name on the element's host, or else be an actual function.  The\n       * function should match the sort function passed to `Array.filter`.\n       * Using a filter function has no effect on the underlying `items` array.\n       */\n      filter: {\n        type: Function,\n        observer: '__filterChanged'\n      },\n\n      /**\n       * When using a `filter` or `sort` function, the `observe` property\n       * should be set to a space-separated list of the names of item\n       * sub-fields that should trigger a re-sort or re-filter when changed.\n       * These should generally be fields of `item` that the sort or filter\n       * function depends on.\n       */\n      observe: {\n        type: String,\n        observer: '__observeChanged'\n      },\n\n      /**\n       * When using a `filter` or `sort` function, the `delay` property\n       * determines a debounce time after a change to observed item\n       * properties that must pass before the filter or sort is re-run.\n       * This is useful in rate-limiting shuffing of the view when\n       * item changes may be frequent.\n       */\n      delay: Number,\n\n      /**\n       * Count of currently rendered items after `filter` (if any) has been applied.\n       * If \"chunking mode\" is enabled, `renderedItemCount` is updated each time a\n       * set of template instances is rendered.\n       *\n       */\n      renderedItemCount: {\n        type: Number,\n        notify: true,\n        readOnly: true\n      },\n\n      /**\n       * Defines an initial count of template instances to render after setting\n       * the `items` array, before the next paint, and puts the `dom-repeat`\n       * into \"chunking mode\".  The remaining items will be created and rendered\n       * incrementally at each animation frame therof until all instances have\n       * been rendered.\n       */\n      initialCount: {\n        type: Number,\n        observer: '__initializeChunking'\n      },\n\n      /**\n       * When `initialCount` is used, this property defines a frame rate to\n       * target by throttling the number of instances rendered each frame to\n       * not exceed the budget for the target frame rate.  Setting this to a\n       * higher number will allow lower latency and higher throughput for\n       * things like event handlers, but will result in a longer time for the\n       * remaining items to complete rendering.\n       */\n      targetFramerate: {\n        type: Number,\n        value: 20\n      },\n\n      _targetFrameTime: {\n        type: Number,\n        computed: '__computeFrameTime(targetFramerate)'\n      }\n\n    };\n\n  }\n\n  static get observers() {\n    return [ '__itemsChanged(items.*)' ];\n  }\n\n  constructor() {\n    super();\n    this.__instances = [];\n    this.__limit = Infinity;\n    this.__pool = [];\n    this.__renderDebouncer = null;\n    this.__itemsIdxToInstIdx = {};\n    this.__chunkCount = null;\n    this.__lastChunkTime = null;\n    this.__sortFn = null;\n    this.__filterFn = null;\n    this.__observePaths = null;\n    this.__ctor = null;\n    this.__isDetached = true;\n    this.template = null;\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__isDetached = true;\n    for (let i=0; i<this.__instances.length; i++) {\n      this.__detachInstance(i);\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    // only perform attachment if the element was previously detached.\n    if (this.__isDetached) {\n      this.__isDetached = false;\n      let parent = this.parentNode;\n      for (let i=0; i<this.__instances.length; i++) {\n        this.__attachInstance(i, parent);\n      }\n    }\n  }\n\n  __ensureTemplatized() {\n    // Templatizing (generating the instance constructor) needs to wait\n    // until ready, since won't have its template content handed back to\n    // it until then\n    if (!this.__ctor) {\n      let template = this.template = this.querySelector('template');\n      if (!template) {\n        // // Wait until childList changes and template should be there by then\n        let observer = new MutationObserver(() => {\n          if (this.querySelector('template')) {\n            observer.disconnect();\n            this.__render();\n          } else {\n            throw new Error('dom-repeat requires a <template> child');\n          }\n        });\n        observer.observe(this, {childList: true});\n        return false;\n      }\n      // Template instance props that should be excluded from forwarding\n      let instanceProps = {};\n      instanceProps[this.as] = true;\n      instanceProps[this.indexAs] = true;\n      instanceProps[this.itemsIndexAs] = true;\n      this.__ctor = Templatize.templatize(template, this, {\n        mutableData: this.mutableData,\n        parentModel: true,\n        instanceProps: instanceProps,\n        /**\n         * @this {this}\n         * @param {string} prop Property to set\n         * @param {*} value Value to set property to\n         */\n        forwardHostProp: function(prop, value) {\n          let i$ = this.__instances;\n          for (let i=0, inst; (i<i$.length) && (inst=i$[i]); i++) {\n            inst.forwardHostProp(prop, value);\n          }\n        },\n        /**\n         * @this {this}\n         * @param {Object} inst Instance to notify\n         * @param {string} prop Property to notify\n         * @param {*} value Value to notify\n         */\n        notifyInstanceProp: function(inst, prop, value) {\n          if (matches(this.as, prop)) {\n            let idx = inst[this.itemsIndexAs];\n            if (prop == this.as) {\n              this.items[idx] = value;\n            }\n            let path = translate(this.as, 'items.' + idx, prop);\n            this.notifyPath(path, value);\n          }\n        }\n      });\n    }\n    return true;\n  }\n\n  __getMethodHost() {\n    // Technically this should be the owner of the outermost template.\n    // In shadow dom, this is always getRootNode().host, but we can\n    // approximate this via cooperation with our dataHost always setting\n    // `_methodHost` as long as there were bindings (or id's) on this\n    // instance causing it to get a dataHost.\n    return this.__dataHost._methodHost || this.__dataHost;\n  }\n\n  __sortChanged(sort) {\n    let methodHost = this.__getMethodHost();\n    this.__sortFn = sort && (typeof sort == 'function' ? sort :\n      function() { return methodHost[sort].apply(methodHost, arguments); });\n    if (this.items) {\n      this.__debounceRender(this.__render);\n    }\n  }\n\n  __filterChanged(filter) {\n    let methodHost = this.__getMethodHost();\n    this.__filterFn = filter && (typeof filter == 'function' ? filter :\n      function() { return methodHost[filter].apply(methodHost, arguments); });\n    if (this.items) {\n      this.__debounceRender(this.__render);\n    }\n  }\n\n  __computeFrameTime(rate) {\n    return Math.ceil(1000/rate);\n  }\n\n  __initializeChunking() {\n    if (this.initialCount) {\n      this.__limit = this.initialCount;\n      this.__chunkCount = this.initialCount;\n      this.__lastChunkTime = performance.now();\n    }\n  }\n\n  __tryRenderChunk() {\n    // Debounced so that multiple calls through `_render` between animation\n    // frames only queue one new rAF (e.g. array mutation & chunked render)\n    if (this.items && this.__limit < this.items.length) {\n      this.__debounceRender(this.__requestRenderChunk);\n    }\n  }\n\n  __requestRenderChunk() {\n    requestAnimationFrame(()=>this.__renderChunk());\n  }\n\n  __renderChunk() {\n    // Simple auto chunkSize throttling algorithm based on feedback loop:\n    // measure actual time between frames and scale chunk count by ratio\n    // of target/actual frame time\n    let currChunkTime = performance.now();\n    let ratio = this._targetFrameTime / (currChunkTime - this.__lastChunkTime);\n    this.__chunkCount = Math.round(this.__chunkCount * ratio) || 1;\n    this.__limit += this.__chunkCount;\n    this.__lastChunkTime = currChunkTime;\n    this.__debounceRender(this.__render);\n  }\n\n  __observeChanged() {\n    this.__observePaths = this.observe &&\n      this.observe.replace('.*', '.').split(' ');\n  }\n\n  __itemsChanged(change) {\n    if (this.items && !Array.isArray(this.items)) {\n      console.warn('dom-repeat expected array for `items`, found', this.items);\n    }\n    // If path was to an item (e.g. 'items.3' or 'items.3.foo'), forward the\n    // path to that instance synchronously (retuns false for non-item paths)\n    if (!this.__handleItemPath(change.path, change.value)) {\n      // Otherwise, the array was reset ('items') or spliced ('items.splices'),\n      // so queue a full refresh\n      this.__initializeChunking();\n      this.__debounceRender(this.__render);\n    }\n  }\n\n  __handleObservedPaths(path) {\n    if (this.__observePaths) {\n      path = path.substring(path.indexOf('.') + 1);\n      let paths = this.__observePaths;\n      for (let i=0; i<paths.length; i++) {\n        if (path.indexOf(paths[i]) === 0) {\n          this.__debounceRender(this.__render, this.delay);\n          return true;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {function(this:DomRepeat)} fn Function to debounce.\n   * @param {number=} delay Delay in ms to debounce by.\n   */\n  __debounceRender(fn, delay = 0) {\n    this.__renderDebouncer = Debouncer.debounce(\n          this.__renderDebouncer\n        , delay > 0 ? timeOut.after(delay) : microTask\n        , fn.bind(this));\n    enqueueDebouncer(this.__renderDebouncer);\n  }\n\n  /**\n   * Forces the element to render its content. Normally rendering is\n   * asynchronous to a provoking change. This is done for efficiency so\n   * that multiple changes trigger only a single render. The render method\n   * should be called if, for example, template rendering is required to\n   * validate application state.\n   */\n  render() {\n    // Queue this repeater, then flush all in order\n    this.__debounceRender(this.__render);\n    flush();\n  }\n\n  __render() {\n    if (!this.__ensureTemplatized()) {\n      // No template found yet\n      return;\n    }\n    this.__applyFullRefresh();\n    // Reset the pool\n    // TODO(kschaaf): Reuse pool across turns and nested templates\n    // Now that objects/arrays are re-evaluated when set, we can safely\n    // reuse pooled instances across turns, however we still need to decide\n    // semantics regarding how long to hold, how many to hold, etc.\n    this.__pool.length = 0;\n    // Set rendered item count\n    this._setRenderedItemCount(this.__instances.length);\n    // Notify users\n    this.dispatchEvent(new CustomEvent('dom-change', {\n      bubbles: true,\n      composed: true\n    }));\n    // Check to see if we need to render more items\n    this.__tryRenderChunk();\n  }\n\n  __applyFullRefresh() {\n    let items = this.items || [];\n    let isntIdxToItemsIdx = new Array(items.length);\n    for (let i=0; i<items.length; i++) {\n      isntIdxToItemsIdx[i] = i;\n    }\n    // Apply user filter\n    if (this.__filterFn) {\n      isntIdxToItemsIdx = isntIdxToItemsIdx.filter((i, idx, array) =>\n        this.__filterFn(items[i], idx, array));\n    }\n    // Apply user sort\n    if (this.__sortFn) {\n      isntIdxToItemsIdx.sort((a, b) => this.__sortFn(items[a], items[b]));\n    }\n    // items->inst map kept for item path forwarding\n    const itemsIdxToInstIdx = this.__itemsIdxToInstIdx = {};\n    let instIdx = 0;\n    // Generate instances and assign items\n    const limit = Math.min(isntIdxToItemsIdx.length, this.__limit);\n    for (; instIdx<limit; instIdx++) {\n      let inst = this.__instances[instIdx];\n      let itemIdx = isntIdxToItemsIdx[instIdx];\n      let item = items[itemIdx];\n      itemsIdxToInstIdx[itemIdx] = instIdx;\n      if (inst && instIdx < this.__limit) {\n        inst._setPendingProperty(this.as, item);\n        inst._setPendingProperty(this.indexAs, instIdx);\n        inst._setPendingProperty(this.itemsIndexAs, itemIdx);\n        inst._flushProperties();\n      } else {\n        this.__insertInstance(item, instIdx, itemIdx);\n      }\n    }\n    // Remove any extra instances from previous state\n    for (let i=this.__instances.length-1; i>=instIdx; i--) {\n      this.__detachAndRemoveInstance(i);\n    }\n  }\n\n  __detachInstance(idx) {\n    let inst = this.__instances[idx];\n    for (let i=0; i<inst.children.length; i++) {\n      let el = inst.children[i];\n      inst.root.appendChild(el);\n    }\n    return inst;\n  }\n\n  __attachInstance(idx, parent) {\n    let inst = this.__instances[idx];\n    parent.insertBefore(inst.root, this);\n  }\n\n  __detachAndRemoveInstance(idx) {\n    let inst = this.__detachInstance(idx);\n    if (inst) {\n      this.__pool.push(inst);\n    }\n    this.__instances.splice(idx, 1);\n  }\n\n  __stampInstance(item, instIdx, itemIdx) {\n    let model = {};\n    model[this.as] = item;\n    model[this.indexAs] = instIdx;\n    model[this.itemsIndexAs] = itemIdx;\n    return new this.__ctor(model);\n  }\n\n  __insertInstance(item, instIdx, itemIdx) {\n    let inst = this.__pool.pop();\n    if (inst) {\n      // TODO(kschaaf): If the pool is shared across turns, hostProps\n      // need to be re-set to reused instances in addition to item\n      inst._setPendingProperty(this.as, item);\n      inst._setPendingProperty(this.indexAs, instIdx);\n      inst._setPendingProperty(this.itemsIndexAs, itemIdx);\n      inst._flushProperties();\n    } else {\n      inst = this.__stampInstance(item, instIdx, itemIdx);\n    }\n    let beforeRow = this.__instances[instIdx + 1];\n    let beforeNode = beforeRow ? beforeRow.children[0] : this;\n    this.parentNode.insertBefore(inst.root, beforeNode);\n    this.__instances[instIdx] = inst;\n    return inst;\n  }\n\n  // Implements extension point from Templatize mixin\n  _showHideChildren(hidden) {\n    for (let i=0; i<this.__instances.length; i++) {\n      this.__instances[i]._showHideChildren(hidden);\n    }\n  }\n\n  // Called as a side effect of a host items.<key>.<path> path change,\n  // responsible for notifying item.<path> changes to inst for key\n  __handleItemPath(path, value) {\n    let itemsPath = path.slice(6); // 'items.'.length == 6\n    let dot = itemsPath.indexOf('.');\n    let itemsIdx = dot < 0 ? itemsPath : itemsPath.substring(0, dot);\n    // If path was index into array...\n    if (itemsIdx == parseInt(itemsIdx, 10)) {\n      let itemSubPath = dot < 0 ? '' : itemsPath.substring(dot+1);\n      // If the path is observed, it will trigger a full refresh\n      this.__handleObservedPaths(itemSubPath);\n      // Note, even if a rull refresh is triggered, always do the path\n      // notification because unless mutableData is used for dom-repeat\n      // and all elements in the instance subtree, a full refresh may\n      // not trigger the proper update.\n      let instIdx = this.__itemsIdxToInstIdx[itemsIdx];\n      let inst = this.__instances[instIdx];\n      if (inst) {\n        let itemPath = this.as + (itemSubPath ? '.' + itemSubPath : '');\n        // This is effectively `notifyPath`, but avoids some of the overhead\n        // of the public API\n        inst._setPendingPropertyOrPath(itemPath, value, false, true);\n        inst._flushProperties();\n      }\n      return true;\n    }\n  }\n\n  /**\n   * Returns the item associated with a given element stamped by\n   * this `dom-repeat`.\n   *\n   * Note, to modify sub-properties of the item,\n   * `modelForElement(el).set('item.<sub-prop>', value)`\n   * should be used.\n   *\n   * @param {HTMLElement} el Element for which to return the item.\n   * @return {*} Item associated with the element.\n   */\n  itemForElement(el) {\n    let instance = this.modelForElement(el);\n    return instance && instance[this.as];\n  }\n\n  /**\n   * Returns the inst index for a given element stamped by this `dom-repeat`.\n   * If `sort` is provided, the index will reflect the sorted order (rather\n   * than the original array order).\n   *\n   * @param {HTMLElement} el Element for which to return the index.\n   * @return {*} Row index associated with the element (note this may\n   *   not correspond to the array index if a user `sort` is applied).\n   */\n  indexForElement(el) {\n    let instance = this.modelForElement(el);\n    return instance && instance[this.indexAs];\n  }\n\n  /**\n   * Returns the template \"model\" associated with a given element, which\n   * serves as the binding scope for the template instance the element is\n   * contained in. A template model is an instance of `Polymer.Base`, and\n   * should be used to manipulate data associated with this template instance.\n   *\n   * Example:\n   *\n   *   let model = modelForElement(el);\n   *   if (model.index < 10) {\n   *     model.set('item.checked', true);\n   *   }\n   *\n   * @param {HTMLElement} el Element for which to return a template model.\n   * @return {TemplateInstanceBase} Model representing the binding scope for\n   *   the element.\n   */\n  modelForElement(el) {\n    return Templatize.modelForElement(this.template, el);\n  }\n\n}\n\ncustomElements.define(DomRepeat.is, DomRepeat);\n\nexport { DomRepeat };\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@polymer/polymer/lib/elements/dom-repeat.js","import './boot.js';\nimport { PropertyEffects } from '../mixins/property-effects.js';\nimport { MutableData } from '../mixins/mutable-data.js';\n\n// Base class for HTMLTemplateElement extension that has property effects\n// machinery for propagating host properties to children. This is an ES5\n// class only because Babel (incorrectly) requires super() in the class\n// constructor even though no `this` is used and it returns an instance.\nlet newInstance = null;\n/**\n * @constructor\n * @extends {HTMLTemplateElement}\n */\nfunction HTMLTemplateElementExtension() { return newInstance; }\nHTMLTemplateElementExtension.prototype = Object.create(HTMLTemplateElement.prototype, {\n  constructor: {\n    value: HTMLTemplateElementExtension,\n    writable: true\n  }\n});\n/**\n * @constructor\n * @implements {Polymer_PropertyEffects}\n * @extends {HTMLTemplateElementExtension}\n */\nconst DataTemplate = PropertyEffects(HTMLTemplateElementExtension);\n/**\n * @constructor\n * @implements {Polymer_MutableData}\n * @extends {DataTemplate}\n */\nconst MutableDataTemplate = MutableData(DataTemplate);\n\n// Applies a DataTemplate subclass to a <template> instance\nfunction upgradeTemplate(template, constructor) {\n  newInstance = template;\n  Object.setPrototypeOf(template, constructor.prototype);\n  new constructor();\n  newInstance = null;\n}\n\n// Base class for TemplateInstance's\n/**\n * @constructor\n * @implements {Polymer_PropertyEffects}\n */\nconst base = PropertyEffects(class {});\n\n/**\n * @polymer\n * @customElement\n * @appliesMixin Polymer.PropertyEffects\n * @unrestricted\n */\nclass TemplateInstanceBase extends base {\n  constructor(props) {\n    super();\n    this._configureProperties(props);\n    this.root = this._stampTemplate(this.__dataHost);\n    // Save list of stamped children\n    let children = this.children = [];\n    for (let n = this.root.firstChild; n; n=n.nextSibling) {\n      children.push(n);\n      n.__templatizeInstance = this;\n    }\n    if (this.__templatizeOwner.__hideTemplateChildren__) {\n      this._showHideChildren(true);\n    }\n    // Flush props only when props are passed if instance props exist\n    // or when there isn't instance props.\n    let options = this.__templatizeOptions;\n    if ((props && options.instanceProps) || !options.instanceProps) {\n      this._enableProperties();\n    }\n  }\n  /**\n   * Configure the given `props` by calling `_setPendingProperty`. Also\n   * sets any properties stored in `__hostProps`.\n   * @private\n   * @param {Object} props Object of property name-value pairs to set.\n   */\n  _configureProperties(props) {\n    let options = this.__templatizeOptions;\n    if (props) {\n      for (let iprop in options.instanceProps) {\n        if (iprop in props) {\n          this._setPendingProperty(iprop, props[iprop]);\n        }\n      }\n    }\n    for (let hprop in this.__hostProps) {\n      this._setPendingProperty(hprop, this.__dataHost['_host_' + hprop]);\n    }\n  }\n  /**\n   * Forwards a host property to this instance.  This method should be\n   * called on instances from the `options.forwardHostProp` callback\n   * to propagate changes of host properties to each instance.\n   *\n   * Note this method enqueues the change, which are flushed as a batch.\n   *\n   * @param {string} prop Property or path name\n   * @param {*} value Value of the property to forward\n   */\n  forwardHostProp(prop, value) {\n    if (this._setPendingPropertyOrPath(prop, value, false, true)) {\n      this.__dataHost._enqueueClient(this);\n    }\n  }\n  /**\n   * @override\n   */\n  _addEventListenerToNode(node, eventName, handler) {\n    if (this._methodHost && this.__templatizeOptions.parentModel) {\n      // If this instance should be considered a parent model, decorate\n      // events this template instance as `model`\n      this._methodHost._addEventListenerToNode(node, eventName, (e) => {\n        e.model = this;\n        handler(e);\n      });\n    } else {\n      // Otherwise delegate to the template's host (which could be)\n      // another template instance\n      let templateHost = this.__dataHost.__dataHost;\n      if (templateHost) {\n        templateHost._addEventListenerToNode(node, eventName, handler);\n      }\n    }\n  }\n  /**\n   * Shows or hides the template instance top level child elements. For\n   * text nodes, `textContent` is removed while \"hidden\" and replaced when\n   * \"shown.\"\n   * @param {boolean} hide Set to true to hide the children;\n   * set to false to show them.\n   * @protected\n   */\n  _showHideChildren(hide) {\n    let c = this.children;\n    for (let i=0; i<c.length; i++) {\n      let n = c[i];\n      // Ignore non-changes\n      if (Boolean(hide) != Boolean(n.__hideTemplateChildren__)) {\n        if (n.nodeType === Node.TEXT_NODE) {\n          if (hide) {\n            n.__polymerTextContent__ = n.textContent;\n            n.textContent = '';\n          } else {\n            n.textContent = n.__polymerTextContent__;\n          }\n        } else if (n.style) {\n          if (hide) {\n            n.__polymerDisplay__ = n.style.display;\n            n.style.display = 'none';\n          } else {\n            n.style.display = n.__polymerDisplay__;\n          }\n        }\n      }\n      n.__hideTemplateChildren__ = hide;\n      if (n._showHideChildren) {\n        n._showHideChildren(hide);\n      }\n    }\n  }\n  /**\n   * Overrides default property-effects implementation to intercept\n   * textContent bindings while children are \"hidden\" and cache in\n   * private storage for later retrieval.\n   *\n   * @override\n   */\n  _setUnmanagedPropertyToNode(node, prop, value) {\n    if (node.__hideTemplateChildren__ &&\n        node.nodeType == Node.TEXT_NODE && prop == 'textContent') {\n      node.__polymerTextContent__ = value;\n    } else {\n      super._setUnmanagedPropertyToNode(node, prop, value);\n    }\n  }\n  /**\n   * Find the parent model of this template instance.  The parent model\n   * is either another templatize instance that had option `parentModel: true`,\n   * or else the host element.\n   *\n   * @return {Polymer_PropertyEffects} The parent model of this instance\n   */\n  get parentModel() {\n    let model = this.__parentModel;\n    if (!model) {\n      let options;\n      model = this;\n      do {\n        // A template instance's `__dataHost` is a <template>\n        // `model.__dataHost.__dataHost` is the template's host\n        model = model.__dataHost.__dataHost;\n      } while ((options = model.__templatizeOptions) && !options.parentModel);\n      this.__parentModel = model;\n    }\n    return model;\n  }\n}\n\n/** @type {!DataTemplate} */\nTemplateInstanceBase.prototype.__dataHost;\n/** @type {!TemplatizeOptions} */\nTemplateInstanceBase.prototype.__templatizeOptions;\n/** @type {!Polymer_PropertyEffects} */\nTemplateInstanceBase.prototype._methodHost;\n/** @type {!Object} */\nTemplateInstanceBase.prototype.__templatizeOwner;\n/** @type {!Object} */\nTemplateInstanceBase.prototype.__hostProps;\n\n/**\n * @constructor\n * @extends {TemplateInstanceBase}\n * @implements {Polymer_MutableData}\n */\nconst MutableTemplateInstanceBase = MutableData(TemplateInstanceBase);\n\nfunction findMethodHost(template) {\n  // Technically this should be the owner of the outermost template.\n  // In shadow dom, this is always getRootNode().host, but we can\n  // approximate this via cooperation with our dataHost always setting\n  // `_methodHost` as long as there were bindings (or id's) on this\n  // instance causing it to get a dataHost.\n  let templateHost = template.__dataHost;\n  return templateHost && templateHost._methodHost || templateHost;\n}\n\n/* eslint-disable valid-jsdoc */\n/**\n * @suppress {missingProperties} class.prototype is not defined for some reason\n */\nfunction createTemplatizerClass(template, templateInfo, options) {\n  // Anonymous class created by the templatize\n  let base = options.mutableData ?\n    MutableTemplateInstanceBase : TemplateInstanceBase;\n  /**\n   * @constructor\n   * @extends {base}\n   */\n  let klass = class extends base { };\n  klass.prototype.__templatizeOptions = options;\n  klass.prototype._bindTemplate(template);\n  addNotifyEffects(klass, template, templateInfo, options);\n  return klass;\n}\n\n/**\n * @suppress {missingProperties} class.prototype is not defined for some reason\n */\nfunction addPropagateEffects(template, templateInfo, options) {\n  let userForwardHostProp = options.forwardHostProp;\n  if (userForwardHostProp) {\n    // Provide data API and property effects on memoized template class\n    let klass = templateInfo.templatizeTemplateClass;\n    if (!klass) {\n      let base = options.mutableData ? MutableDataTemplate : DataTemplate;\n      klass = templateInfo.templatizeTemplateClass =\n        class TemplatizedTemplate extends base {};\n      // Add template - >instances effects\n      // and host <- template effects\n      let hostProps = templateInfo.hostProps;\n      for (let prop in hostProps) {\n        klass.prototype._addPropertyEffect('_host_' + prop,\n          klass.prototype.PROPERTY_EFFECT_TYPES.PROPAGATE,\n          {fn: createForwardHostPropEffect(prop, userForwardHostProp)});\n        klass.prototype._createNotifyingProperty('_host_' + prop);\n      }\n    }\n    upgradeTemplate(template, klass);\n    // Mix any pre-bound data into __data; no need to flush this to\n    // instances since they pull from the template at instance-time\n    if (template.__dataProto) {\n      // Note, generally `__dataProto` could be chained, but it's guaranteed\n      // to not be since this is a vanilla template we just added effects to\n      Object.assign(template.__data, template.__dataProto);\n    }\n    // Clear any pending data for performance\n    template.__dataTemp = {};\n    template.__dataPending = null;\n    template.__dataOld = null;\n    template._enableProperties();\n  }\n}\n/* eslint-enable valid-jsdoc */\n\nfunction createForwardHostPropEffect(hostProp, userForwardHostProp) {\n  return function forwardHostProp(template, prop, props) {\n    userForwardHostProp.call(template.__templatizeOwner,\n      prop.substring('_host_'.length), props[prop]);\n  };\n}\n\nfunction addNotifyEffects(klass, template, templateInfo, options) {\n  let hostProps = templateInfo.hostProps || {};\n  for (let iprop in options.instanceProps) {\n    delete hostProps[iprop];\n    let userNotifyInstanceProp = options.notifyInstanceProp;\n    if (userNotifyInstanceProp) {\n      klass.prototype._addPropertyEffect(iprop,\n        klass.prototype.PROPERTY_EFFECT_TYPES.NOTIFY,\n        {fn: createNotifyInstancePropEffect(iprop, userNotifyInstanceProp)});\n    }\n  }\n  if (options.forwardHostProp && template.__dataHost) {\n    for (let hprop in hostProps) {\n      klass.prototype._addPropertyEffect(hprop,\n        klass.prototype.PROPERTY_EFFECT_TYPES.NOTIFY,\n        {fn: createNotifyHostPropEffect()});\n    }\n  }\n}\n\nfunction createNotifyInstancePropEffect(instProp, userNotifyInstanceProp) {\n  return function notifyInstanceProp(inst, prop, props) {\n    userNotifyInstanceProp.call(inst.__templatizeOwner,\n      inst, prop, props[prop]);\n  };\n}\n\nfunction createNotifyHostPropEffect() {\n  return function notifyHostProp(inst, prop, props) {\n    inst.__dataHost._setPendingPropertyOrPath('_host_' + prop, props[prop], true, true);\n  };\n}\n\n/**\n * Module for preparing and stamping instances of templates that utilize\n * Polymer's data-binding and declarative event listener features.\n *\n * Example:\n *\n *     // Get a template from somewhere, e.g. light DOM\n *     let template = this.querySelector('template');\n *     // Prepare the template\n *     let TemplateClass = Polymer.Templatize.templatize(template);\n *     // Instance the template with an initial data model\n *     let instance = new TemplateClass({myProp: 'initial'});\n *     // Insert the instance's DOM somewhere, e.g. element's shadow DOM\n *     this.shadowRoot.appendChild(instance.root);\n *     // Changing a property on the instance will propagate to bindings\n *     // in the template\n *     instance.myProp = 'new value';\n *\n * The `options` dictionary passed to `templatize` allows for customizing\n * features of the generated template class, including how outer-scope host\n * properties should be forwarded into template instances, how any instance\n * properties added into the template's scope should be notified out to\n * the host, and whether the instance should be decorated as a \"parent model\"\n * of any event handlers.\n *\n *     // Customze property forwarding and event model decoration\n *     let TemplateClass = Polymer.Templatize.templatize(template, this, {\n *       parentModel: true,\n *       instanceProps: {...},\n *       forwardHostProp(property, value) {...},\n *       notifyInstanceProp(instance, property, value) {...},\n *     });\n *\n *\n * @namespace\n * @memberof Polymer\n * @summary Module for preparing and stamping instances of templates\n *   utilizing Polymer templating features.\n */\n\nconst Templatize = {\n\n  /**\n   * Returns an anonymous `Polymer.PropertyEffects` class bound to the\n   * `<template>` provided.  Instancing the class will result in the\n   * template being stamped into document fragment stored as the instance's\n   * `root` property, after which it can be appended to the DOM.\n   *\n   * Templates may utilize all Polymer data-binding features as well as\n   * declarative event listeners.  Event listeners and inline computing\n   * functions in the template will be called on the host of the template.\n   *\n   * The constructor returned takes a single argument dictionary of initial\n   * property values to propagate into template bindings.  Additionally\n   * host properties can be forwarded in, and instance properties can be\n   * notified out by providing optional callbacks in the `options` dictionary.\n   *\n   * Valid configuration in `options` are as follows:\n   *\n   * - `forwardHostProp(property, value)`: Called when a property referenced\n   *   in the template changed on the template's host. As this library does\n   *   not retain references to templates instanced by the user, it is the\n   *   templatize owner's responsibility to forward host property changes into\n   *   user-stamped instances.  The `instance.forwardHostProp(property, value)`\n   *    method on the generated class should be called to forward host\n   *   properties into the template to prevent unnecessary property-changed\n   *   notifications. Any properties referenced in the template that are not\n   *   defined in `instanceProps` will be notified up to the template's host\n   *   automatically.\n   * - `instanceProps`: Dictionary of property names that will be added\n   *   to the instance by the templatize owner.  These properties shadow any\n   *   host properties, and changes within the template to these properties\n   *   will result in `notifyInstanceProp` being called.\n   * - `mutableData`: When `true`, the generated class will skip strict\n   *   dirty-checking for objects and arrays (always consider them to be\n   *   \"dirty\").\n   * - `notifyInstanceProp(instance, property, value)`: Called when\n   *   an instance property changes.  Users may choose to call `notifyPath`\n   *   on e.g. the owner to notify the change.\n   * - `parentModel`: When `true`, events handled by declarative event listeners\n   *   (`on-event=\"handler\"`) will be decorated with a `model` property pointing\n   *   to the template instance that stamped it.  It will also be returned\n   *   from `instance.parentModel` in cases where template instance nesting\n   *   causes an inner model to shadow an outer model.\n   *\n   * Note that the class returned from `templatize` is generated only once\n   * for a given `<template>` using `options` from the first call for that\n   * template, and the cached class is returned for all subsequent calls to\n   * `templatize` for that template.  As such, `options` callbacks should not\n   * close over owner-specific properties since only the first `options` is\n   * used; rather, callbacks are called bound to the `owner`, and so context\n   * needed from the callbacks (such as references to `instances` stamped)\n   * should be stored on the `owner` such that they can be retrieved via `this`.\n   *\n   * @memberof Polymer.Templatize\n   * @param {!HTMLTemplateElement} template Template to templatize\n   * @param {!Polymer_PropertyEffects} owner Owner of the template instances;\n   *   any optional callbacks will be bound to this owner.\n   * @param {Object=} options Options dictionary (see summary for details)\n   * @return {function(new:TemplateInstanceBase)} Generated class bound to the template\n   *   provided\n   * @suppress {invalidCasts}\n   */\n  templatize(template, owner, options) {\n    options = /** @type {!TemplatizeOptions} */(options || {});\n    if (template.__templatizeOwner) {\n      throw new Error('A <template> can only be templatized once');\n    }\n    template.__templatizeOwner = owner;\n    let templateInfo = owner.constructor._parseTemplate(template);\n    // Get memoized base class for the prototypical template, which\n    // includes property effects for binding template & forwarding\n    let baseClass = templateInfo.templatizeInstanceClass;\n    if (!baseClass) {\n      baseClass = createTemplatizerClass(template, templateInfo, options);\n      templateInfo.templatizeInstanceClass = baseClass;\n    }\n    // Host property forwarding must be installed onto template instance\n    addPropagateEffects(template, templateInfo, options);\n    // Subclass base class and add reference for this specific template\n    let klass = class TemplateInstance extends baseClass {};\n    klass.prototype._methodHost = findMethodHost(template);\n    klass.prototype.__dataHost = template;\n    klass.prototype.__templatizeOwner = owner;\n    klass.prototype.__hostProps = templateInfo.hostProps;\n    return /** @type {function(new:TemplateInstanceBase)} */(klass);\n  },\n\n  /**\n   * Returns the template \"model\" associated with a given element, which\n   * serves as the binding scope for the template instance the element is\n   * contained in. A template model is an instance of\n   * `TemplateInstanceBase`, and should be used to manipulate data\n   * associated with this template instance.\n   *\n   * Example:\n   *\n   *   let model = modelForElement(el);\n   *   if (model.index < 10) {\n   *     model.set('item.checked', true);\n   *   }\n   *\n   * @memberof Polymer.Templatize\n   * @param {HTMLTemplateElement} template The model will be returned for\n   *   elements stamped from this template\n   * @param {Node} node Node for which to return a template model.\n   * @return {TemplateInstanceBase} Template instance representing the\n   *   binding scope for the element\n   */\n  modelForElement(template, node) {\n    let model;\n    while (node) {\n      // An element with a __templatizeInstance marks the top boundary\n      // of a scope; walk up until we find one, and then ensure that\n      // its __dataHost matches `this`, meaning this dom-repeat stamped it\n      if ((model = node.__templatizeInstance)) {\n        // Found an element stamped by another template; keep walking up\n        // from its __dataHost\n        if (model.__dataHost != template) {\n          node = model.__dataHost;\n        } else {\n          return model;\n        }\n      } else {\n        // Still in a template scope, keep going up until\n        // a __templatizeInstance is found\n        node = node.parentNode;\n      }\n    }\n    return null;\n  }\n};\n\nexport { Templatize };\nexport { TemplateInstanceBase };\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@polymer/polymer/lib/utils/templatize.js","import './boot.js';\n\nlet debouncerQueue = [];\n\nexport const enqueueDebouncer = function(debouncer) {\n  debouncerQueue.push(debouncer);\n};\n\nfunction flushDebouncers() {\n  const didFlush = Boolean(debouncerQueue.length);\n  while (debouncerQueue.length) {\n    try {\n      debouncerQueue.shift().flush();\n    } catch(e) {\n      setTimeout(() => {\n        throw e;\n      });\n    }\n  }\n  return didFlush;\n}\n\nexport const flush = function() {\n  let shadyDOM, debouncers;\n  do {\n    shadyDOM = window.ShadyDOM && ShadyDOM.flush();\n    if (window.ShadyCSS && window.ShadyCSS.ScopingShim) {\n      window.ShadyCSS.ScopingShim.flush();\n    }\n    debouncers = flushDebouncers();\n  } while (shadyDOM || debouncers);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/node_modules/@polymer/polymer/lib/utils/flush.js","import { Element } from '@polymer/polymer/polymer-element';\nimport { GestureEventListeners } from '@polymer/polymer/lib/mixins/gesture-event-listeners';\nimport { customElements } from 'global/window';\nimport css from './style.scss';\nimport template from './template.html';\n\nclass Component extends GestureEventListeners(Element) {\n  static get is () { return 'ffc-logo'; }\n\n  static get template () {\n    return `\n      <style>\n        ${css}\n      </style>\n      ${template}\n    `;\n  }\n}\n\n!customElements.get(Component.is)\n  ? customElements.define(Component.is, Component)\n  : console.warn(`${Component.is} is already defined`);\n\n\n\n// WEBPACK FOOTER //\n// ./app/dependencies/ffc-logo/index.js","\n        var result = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./style.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/dependencies/ffc-logo/style.scss\n// module id = 114\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \":host {\\n  display: inline; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./app/dependencies/ffc-logo/style.scss\n// module id = 115\n// module chunks = 0","module.exports = \"<svg class=\\\"logo\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" viewBox=\\\"0 0 505.039 237.126\\\" width=\\\"400\\\">\\n  <g fill=\\\"#EFEFEF\\\">\\n    <path d=\\\"M198.318 11.002v12.571h20.685V34.54h-20.685v23.983H186.46V.036h38.605v10.966h-26.747zM227.654 35.342c0-18.723 7.399-24.162 19.971-24.162 12.66 0 20.061 5.438 20.061 24.162 0 18.812-7.4 23.805-20.061 23.805-12.571 0-19.971-4.993-19.971-23.805zm28.263 0c0-10.075-3.655-13.552-8.292-13.552-4.636 0-8.202 3.478-8.202 13.552 0 9.807 3.566 13.195 8.202 13.195 4.637 0 8.292-3.388 8.292-13.195zM306.205 12.25l-3.389 11.501h-5.527l-8.916 3.388v31.383h-11.769V12.161h10.075l1.604 5.706 4.279-2.764c3.299-2.14 7.044-3.299 10.343-3.299 1.16.001 2.765.179 3.3.446zM370.668 29.19v29.333h-11.769V29.19c0-3.566-1.783-6.509-6.509-6.509h-5.26v35.841h-11.769V29.19c0-3.566-1.783-6.509-6.509-6.509h-5.261v35.841h-11.769V12.161h10.967l.445 1.605 8.916-1.961c4.102 0 8.916.802 11.59 2.585l11.947-2.585c10.434 0 14.981 5.26 14.981 17.385zM198.318 100.17v12.571h20.685v10.966h-20.685v23.983H186.46V89.203h38.605v10.967h-26.747zM266.438 101.329v46.362h-10.967l-.445-1.693-9.361 2.05c-11.323 0-15.691-7.043-15.691-17.385V101.33h11.769v29.333c0 4.457 1.961 6.508 5.171 6.508l7.757-.802v-35.04h11.767zM313.249 118.358v29.333h-11.77v-29.333c0-4.458-1.961-6.509-5.171-6.509l-7.757.803v35.039h-11.769v-46.362h10.967l.445 1.694 9.361-2.051c11.325 0 15.694 7.044 15.694 17.386zM340.712 100.972h5.082l8.915 2.051v9.629l-10.163-1.07h-3.834c-5.617 0-7.489 4.012-7.489 13.017 0 9.184 1.872 12.75 7.489 12.75h3.834l10.163-1.07v9.629l-8.915 2.051h-5.082c-13.552 0-19.258-6.062-19.258-23.359 0-17.298 5.706-23.628 19.258-23.628zM390.287 137.17v8.203l-11.77 2.585c-7.935 0-12.036-5.438-12.036-15.514v-20.238h-5.616v-10.877h5.795V90.273l11.59-1.605v12.66h11.502v10.877H378.25v15.067c0 8.024 1.694 9.896 6.598 9.896h5.439zM410.617 80.823v14.176H397.6V83.586l13.017-2.763zm-.625 20.506v46.362h-11.769v-46.362h11.769zM419.623 124.51c0-18.723 7.399-24.162 19.971-24.162 12.66 0 20.061 5.438 20.061 24.162 0 18.812-7.4 23.805-20.061 23.805-12.572-.001-19.971-4.993-19.971-23.805zm28.263 0c0-10.075-3.655-13.552-8.292-13.552-4.636 0-8.202 3.478-8.202 13.552 0 9.808 3.566 13.195 8.202 13.195s8.292-3.388 8.292-13.195zM505.039 118.358v29.333h-11.77v-29.333c0-4.458-1.961-6.509-5.171-6.509l-7.757.803v35.039h-11.769v-46.362h10.967l.445 1.694 9.361-2.051c11.325 0 15.694 7.044 15.694 17.386zM229.523 212.696h-3.656v22.735l-6.687 1.427h-15.959c-13.374 0-18.812-4.19-18.812-16.673 0-6.241 1.962-10.521 5.35-13.284-2.051-2.496-3.21-6.151-3.21-11.323 0-11.857 5.35-17.118 14.89-17.118h9.094l6.509 1.338v9.45h-14.265c-2.942 0-4.369 2.586-4.369 6.241 0 4.102 1.783 6.419 3.923 6.419h3.478v10.788h-4.28c-3.031 0-5.26 3.389-5.26 6.776 0 4.102 2.496 6.598 6.954 6.598h11.056v-13.374h-3.655v-10.788h18.901v10.788zM277.405 178.192h11.947l8.916 2.051v10.075l-10.164-1.338h-6.687c-7.133 0-10.075 4.993-10.075 18.724 0 13.819 2.942 18.634 10.075 18.634h6.687l10.164-1.07v9.808l-8.916 2.051h-11.947c-11.145 0-17.92-8.381-17.92-29.422s6.776-29.513 17.92-29.513zM307.454 236.858v-64.461l11.769-2.407v66.868h-11.769zM364.783 205.742v31.116h-22.557c-9.985 0-14.8-4.904-14.8-13.998 0-9.272 4.814-14.443 14.8-14.443h5.617l5.171 1.07v-3.478c0-2.675-1.783-4.903-5.528-4.903h-5.171l-10.966 1.069v-9.629l10.342-2.229h9.272c7.223.001 13.82 7.044 13.82 15.425zm-22.468 20.328h10.699v-6.865h-10.699c-1.783 0-3.12 1.961-3.12 3.655 0 1.605 1.516 3.21 3.12 3.21zM394.653 200.66h-5.082c-4.102 0-5.527 1.338-5.527 3.21 0 2.407.892 3.21 5.527 3.655 14.265 1.516 18.277 4.726 18.277 15.781 0 10.698-3.745 13.819-18.188 13.819h-7.578l-8.916-2.051v-9.629l10.164 1.069h6.241c5.706 0 6.954-.98 6.954-3.031 0-2.229-1.516-3.388-6.954-4.101-12.66-1.516-16.851-5.261-16.851-14.979 0-10.164 4.992-14.354 16.851-14.354h6.419l9.629 2.14v9.54l-10.966-1.069zM436.828 200.66h-5.082c-4.102 0-5.527 1.338-5.527 3.21 0 2.407.892 3.21 5.527 3.655 14.265 1.516 18.277 4.726 18.277 15.781 0 10.698-3.745 13.819-18.188 13.819h-7.578l-8.916-2.051v-9.629l10.164 1.069h6.241c5.706 0 6.954-.98 6.954-3.031 0-2.229-1.516-3.388-6.954-4.101-12.66-1.516-16.851-5.261-16.851-14.979 0-10.164 4.993-14.354 16.851-14.354h6.419l9.629 2.14v9.54l-10.966-1.069z\\\"></path>\\n    <g>\\n        <path d=\\\"M0 0h13.429v147.72H0z\\\"></path>\\n        <path d=\\\"M0 0h147.72v13.429H0zM0 40.287h147.72v13.429H0zM26.858 107.433h13.43v40.287h-13.43z\\\"></path>\\n        <path d=\\\"M26.858 107.433h53.717v13.43H26.858zM94.004 67.146h13.429v80.574H94.004z\\\"></path>\\n        <path d=\\\"M94.004 67.146h53.716v13.429H94.004zM94.004 134.291h53.716v13.429H94.004zM26.858 67.146h13.43v26.858h-13.43z\\\"></path>\\n        <path d=\\\"M26.858 67.146h53.717v13.429H26.858z\\\"></path>\\n    </g>\\n  </g>\\n</svg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/dependencies/ffc-logo/template.html\n// module id = 116\n// module chunks = 0","import { Element } from '@polymer/polymer/polymer-element';\nimport { GestureEventListeners } from '@polymer/polymer/lib/mixins/gesture-event-listeners';\nimport { customElements } from 'global/window';\nimport css from './style.scss';\nimport template from './template.html';\nimport 'side-bar';\nimport 'ffc-logo';\n\nclass Component extends GestureEventListeners(Element) {\n  static get is () { return 'page-home'; }\n\n  static get template () {\n    return `\n      <style>\n        ${css}\n      </style>\n      ${template}\n    `;\n  }\n}\n\n!customElements.get(Component.is)\n  ? customElements.define(Component.is, Component)\n  : console.warn(`${Component.is} is already defined`);\n\n\n\n// WEBPACK FOOTER //\n// ./app/pages/page-home/index.js","\n        var result = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./style.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/pages/page-home/style.scss\n// module id = 89\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \"a {\\n  color: #fff;\\n  text-decoration: none;\\n  border-bottom: 1px solid #fff; }\\n\\n.button {\\n  display: inline-block;\\n  margin: 1rem auto;\\n  padding: 1rem 1.5rem;\\n  border: 1px solid #fff; }\\n\\n:host {\\n  display: grid;\\n  grid-template-columns: 1fr 1fr 1fr 1fr;\\n  grid-template-rows: auto;\\n  grid-template-areas: \\\"main main main sidebar\\\";\\n  min-height: 100vh;\\n  background: #3a3a3a;\\n  font-family: 'Inovato', sans-serif;\\n  color: #efefef; }\\n\\n.main {\\n  grid-area: main;\\n  display: flex;\\n  align-items: center;\\n  min-height: 100vh; }\\n  .main .container {\\n    text-align: center;\\n    width: 100%; }\\n\\nside-bar {\\n  grid-area: sidebar;\\n  min-height: 100vh; }\\n\\nffc-logo {\\n  margin-bottom: 3rem; }\\n\\n.info {\\n  font-size: 1.5rem;\\n  margin-bottom: 0; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./app/pages/page-home/style.scss\n// module id = 90\n// module chunks = 0","module.exports = \"<section class=\\\"main\\\">\\n  <div class=\\\"container\\\">\\n    <ffc-logo></ffc-logo>\\n\\n    <p class=\\\"info\\\">\\n      Masterclass on <time class=\\\"date\\\" itemprop=\\\"startDate\\\" datetime=\\\"2017-08-18\\\">18&nbsp;August 2018</time><br>\\n      <a class=\\\"button\\\" href=\\\"https://formfunctionclass9.eventbrite.com/#tickets\\\" target=\\\"_blank\\\">Register Now</a>\\n    </p>\\n  </div>\\n</section>\\n\\n<side-bar></side-bar>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/pages/page-home/template.html\n// module id = 92\n// module chunks = 0"],"sourceRoot":""}